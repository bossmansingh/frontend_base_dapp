{
  "contractName": "GameContract",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "challengerAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "gameId",
          "type": "string"
        }
      ],
      "name": "GameCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "winnerAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "gameId",
          "type": "string"
        }
      ],
      "name": "GameEnd",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "challengerAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "challengeAcceptorAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "gameId",
          "type": "string"
        }
      ],
      "name": "GameJoined",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "winnerAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "gameId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isRare",
          "type": "bool"
        }
      ],
      "name": "NFTCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwnerAddress",
          "type": "address"
        }
      ],
      "name": "setOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getContractBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getBaseGameFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newGameFee",
          "type": "uint256"
        }
      ],
      "name": "updateBaseGameFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "gameId",
          "type": "string"
        }
      ],
      "name": "createGame",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "gameId",
          "type": "string"
        }
      ],
      "name": "joinGame",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "gameId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "gameTime",
          "type": "uint256"
        }
      ],
      "name": "endGame",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "gameId",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "isRare",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "winTime",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "killScore",
          "type": "uint8"
        }
      ],
      "name": "mintNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"challengerAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"gameId\",\"type\":\"string\"}],\"name\":\"GameCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winnerAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"gameId\",\"type\":\"string\"}],\"name\":\"GameEnd\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"challengerAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"challengeAcceptorAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"gameId\",\"type\":\"string\"}],\"name\":\"GameJoined\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winnerAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"gameId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isRare\",\"type\":\"bool\"}],\"name\":\"NFTCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"gameId\",\"type\":\"string\"}],\"name\":\"createGame\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"gameId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"gameTime\",\"type\":\"uint256\"}],\"name\":\"endGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaseGameFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"gameId\",\"type\":\"string\"}],\"name\":\"joinGame\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"gameId\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isRare\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"winTime\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"killScore\",\"type\":\"uint8\"}],\"name\":\"mintNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwnerAddress\",\"type\":\"address\"}],\"name\":\"setOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newGameFee\",\"type\":\"uint256\"}],\"name\":\"updateBaseGameFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createGame(string)\":{\"details\":\"Create a new game by depositing a gameFee. \"},\"endGame(string,uint256)\":{\"details\":\"Call this to end a game with specified `gameId`. A game would end either when one player wins or if no  player accepts a challenge within 30 minutes. \",\"params\":{\"gameId\":\"id of this game\",\"gameTime\":\"time taken (in seconds) to win the game\"}},\"getBaseGameFee()\":{\"details\":\"Call this to get the current `_baseGameFee` \"},\"getContractBalance()\":{\"details\":\"Call this to get the current balance of \"},\"joinGame(string)\":{\"details\":\"Call this to join a game with provided `gameId`. Throw an exeption if no game for this `gameId` exists. \",\"params\":{\"gameId\":\"id of game to be ended\"}},\"mintNFT(string,bool,uint256,uint8)\":{\"details\":\"Winner of the game can call this to mint the winning card NFT.\",\"params\":{\"gameId\":\"id of this game\",\"isRare\":\"true if this NFT is rare\",\"killScore\":\"count of longest consecutive kill by one single piece on board\",\"winTime\":\"time taken (in seconds) to win the game\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setOwnership(address)\":{\"details\":\"Call this method to update ownership in future (if needed). This external  method can only be called by the owner of this contract. Since `transferOwnership()` already have this check it's not required for this method. \",\"params\":{\"newOwnerAddress\":\"address of new owner to which ownership is to be transfered.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateBaseGameFees(uint256)\":{\"details\":\"Call this to update the current base game fee. This method can only be called via owner of this contract.\",\"params\":{\"newGameFee\":\"new fee value to be used for creating a new game.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/GameContract.sol\":\"GameContract\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x842ccf9a6cd33e17b7acef8372ca42090755217b358fe0c44c98e951ea549d3a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cc5f36034a77d105263ae6d8cc18b16260b4a0f6cdb1a26f21ba3670fdd06dd\",\"dweb:/ipfs/QmdJrJ2LoG546BkfyZPta96BNmaVBfqZoh8kq7PqHuQyPk\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xb03df8481a954604ad0c9125680893b2e3f7ff770fe470e38b89ac61b84e8072\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b34655953d18ba3a45b762fb6bdbb6549af69a27435e10ece178742bf70baf45\",\"dweb:/ipfs/QmcqjUoFLLMyx7dbwSHUnDBH6aphkVHXWQvQRRev5EAWEh\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x02348b2e4b9f3200c7e3907c5c2661643a6d8520e9f79939fbb9b4005a54894d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d41d627f4ef9c6006df8c2d01227d3cf4a6c3359b5704c629d88933272eecadd\",\"dweb:/ipfs/QmYDo7MvMsvuDxuJZ9RC9zFganS3Tm8RYzSmBP5qSmJfuY\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x7d2b8ba4b256bfcac347991b75242f9bc37f499c5236af50cf09d0b35943dc0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8eeaf6afe00229af4c232ca058bb08b7a24cc3886f0b387159ac49ffd8b5312\",\"dweb:/ipfs/QmdnVKmDDWDvdRr6vtrxy3G6WafqA2TAhUZv1UFMsm4B4r\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf101e8720213560fab41104d53b3cc7ba0456ef3a98455aa7f022391783144a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e7820bcf567e6892d937c3cb10db263a4042e446799bca602535868d822384e\",\"dweb:/ipfs/QmPG2oeDjKncqsEeyYGjAN7CwAJmMgHterXGGnpzhha4z7\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd9517254724276e2e8de3769183c1f738f445f0095c26fd9b86d3c6687e887b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e604bcdcd5e5b2fb299ad09769cde6db19d5aa1929d1b5e939234a0f10d7eb8\",\"dweb:/ipfs/Qmd8hXE3GZfBHuWx3RNiYgFW2ci7KvHtib8DiwzJ2dgo9V\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xd32fb7f530a914b1083d10a6bed3a586f2451952fec04fe542bcc670a82f7ba5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af63ab940a34687c45f0ad84960b048fc5f49330c92ccb422db7822a444733b9\",\"dweb:/ipfs/QmUShaQEu8HS1GjDnsMJQ8jkZEBrecn6NuDZ3pfjY1gVck\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39a05eec7083dfa0cc7e0cbfe6cd1bd085a340af1ede93fdff3ad047c5fb3d8e\",\"dweb:/ipfs/QmVApz5fCUq2QC8gKTsNNdCmcedJ3ETHp68zR5N3WUKS4r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0x78450f4e3b722cce467b21e285f72ce5eaf361e9ba9dd2241a413926246773cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103065051300cd995fd4599ba91188d4071b92175b52f26110e02db091617c0\",\"dweb:/ipfs/QmSyDz67R2HCypDE8Pacn3voVwxw9x17NM66q47YgBnGqc\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x391d3ba97ab6856a16b225d6ee29617ad15ff00db70f3b4df1ab5ea33aa47c9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d636ba90bbbeed04a1ea7fe9ec2466757e30fd38ba2ca173636dbf69a518735e\",\"dweb:/ipfs/QmQwCB2BHnEuYR22PYt9HkpbgeFDhq4rHmaYqAZbX3WRC7\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d10e1d9b26042424789246603906ad06143bf9a928f4e99de8b5e3bdc662f549\",\"dweb:/ipfs/Qmejonoaj5MLekPus229rJQHcC6E9dz2xorjHJR84fMfmn\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x8666f020bd8fc9dc14f07e2ebc52b5f236ab4cdde7c77679b08cb2f94730043b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://163776cbf565c722232393aa2d62cbe8a2ffb5805986abf4906c00e1e07450a6\",\"dweb:/ipfs/QmPZoN9T3cb6o8bGhjBPZcz7im8T8DWhpr3tjLwhJJHx9N\"]},\"project:/contracts/BaseContract.sol\":{\"keccak256\":\"0xb8acdf3a17d947da69bae01a7f80210973113c124c9436cdfc2778fe5357e288\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ba6107de07fdd30422f820d9635b45ef18daba389b1904961c5301c4fe120cf\",\"dweb:/ipfs/QmTkZtWBZNpZN362H2juhFwDkc1jewUEuo2L46iqCeLbNm\"]},\"project:/contracts/GameContract.sol\":{\"keccak256\":\"0x3109cb4b0b3f14aa2d680a598236bbe218601ba2a8b42ca4807d34fee61dd290\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c07e56407f6f20a00fa7ab2efbee2161c2c832adeb5f33851e92c73988e7216\",\"dweb:/ipfs/QmZjWn4fBvgkrsYh6HZqk4XVgnrnVC5MT6LUFrBA4K7SXP\"]},\"project:/contracts/Helpers.sol\":{\"keccak256\":\"0x2f8985ccc2efa29f4c709f4a71491259fc16066220c7067dfc7949fdd12119c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://479a2914b94b1dd206d41cb15af749c4caf6a81cd6e46db7f933d3b95fa188c9\",\"dweb:/ipfs/QmXLXoiu4mdX6CBvJ249HH38PzqtbhRkNtiP7m6LqZnpNQ\"]},\"project:/contracts/NFTContract.sol\":{\"keccak256\":\"0x19942707dec384b9abb7eaf36fdf1e9976ad60c4a3531aa407a4fd7f8ce0454b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c54000f1cb37085761bbaaa3065c1ebf8c1f97ff9025902f05edfcc42d47e534\",\"dweb:/ipfs/QmbnjQ1LPXumbEWKSrRaS5UHxqfP9dBZeCbghuKpZwAoXh\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x60806040526004361061009c5760003560e01c80638da5cb5b116100645780638da5cb5b14610129578063a70160231461014b578063b92234881461016b578063c4c5a8541461018b578063d06894ce146101ab578063f2fde38b146101c05761009c565b80632ebc0504146100a15780633862efbe146100b65780633d536a2e146100d65780636f9fb98a146100e9578063715018a614610114575b600080fd5b6100b46100af36600461117c565b6101e0565b005b3480156100c257600080fd5b506100b46100d1366004611226565b61043e565b6100b46100e436600461117c565b6106ba565b3480156100f557600080fd5b506100fe610941565b60405161010b91906118fd565b60405180910390f35b34801561012057600080fd5b506100b4610945565b34801561013557600080fd5b5061013e610990565b60405161010b91906112e1565b34801561015757600080fd5b506100b4610166366004611139565b61099f565b34801561017757600080fd5b506100b4610186366004611269565b6109ab565b34801561019757600080fd5b506100b46101a63660046111b7565b6109ef565b3480156101b757600080fd5b506100fe610bc8565b3480156101cc57600080fd5b506100b46101db366004611139565b610bce565b6002600054141561020c5760405162461bcd60e51b8152600401610203906117e4565b60405180910390fd5b6002600055610219610c3c565b6001600160a01b0316336001600160a01b0316141561024a5760405162461bcd60e51b815260040161020390611631565b600060038260405161025c91906112c5565b908152604051908190036020019020546001600160a01b031690506000610281610c3c565b6001600160a01b0316826001600160a01b03161415905080156102b65760405162461bcd60e51b81526004016102039061181b565b60006102c0610c3c565b6001600160a01b0316836001600160a01b03161415905080156102f55760405162461bcd60e51b81526004016102039061152f565b6006543410156103175760405162461bcd60e51b8152600401610203906116d4565b6000610321610c3c565b6001600160a01b031660048660405161033a91906112c5565b908152604051908190036020019020546001600160a01b0316149050806103735760405162461bcd60e51b81526004016102039061179b565b600061037d610c3c565b6001600160a01b031660058760405161039691906112c5565b908152604051908190036020019020546001600160a01b031614801591506103d05760405162461bcd60e51b8152600401610203906113ca565b6103d986610c41565b6007546103f0906001600160a01b03163034610c8b565b336001600160a01b03167fab9e6b2a615855ce1ed5dc476076888910d7776481a5fc561e17d72a842fd726876040516104299190611328565b60405180910390a25050600160005550505050565b600260005414156104615760405162461bcd60e51b8152600401610203906117e4565b600260005561046e610d74565b6001600160a01b031661047f610990565b6001600160a01b0316146104a55760405162461bcd60e51b8152600401610203906115fc565b6104ad610c3c565b6001600160a01b0316336001600160a01b031614156104de5760405162461bcd60e51b815260040161020390611631565b60006003836040516104f091906112c5565b908152604051908190036020019020546001600160a01b031690506000610515610c3c565b6001600160a01b0316826001600160a01b031614159050806105495760405162461bcd60e51b8152600401610203906115b5565b6000610553610c3c565b6001600160a01b0316836001600160a01b031614159050806105875760405162461bcd60e51b81526004016102039061141d565b6000610591610c3c565b6001600160a01b03166004876040516105aa91906112c5565b908152604051908190036020019020546001600160a01b031614159050806105e45760405162461bcd60e51b815260040161020390611862565b60006105ee610c3c565b6001600160a01b031660058860405161060791906112c5565b908152604051908190036020019020546001600160a01b031614801591506106415760405162461bcd60e51b815260040161020390611764565b600086116106615760405162461bcd60e51b815260040161020390611668565b61066b3388610d78565b336001600160a01b03167f6763b8a4888eb1fb9140d4cb14e1fc7f987fc1699c6cb8b39d63b7517c55b010886040516106a49190611328565b60405180910390a2505060016000555050505050565b600260005414156106dd5760405162461bcd60e51b8152600401610203906117e4565b60026000556106ea610c3c565b6001600160a01b0316336001600160a01b0316141561071b5760405162461bcd60e51b815260040161020390611631565b600060038260405161072d91906112c5565b908152604051908190036020019020546001600160a01b031690506000610752610c3c565b6001600160a01b0316826001600160a01b031614159050806107865760405162461bcd60e51b8152600401610203906115b5565b6000610790610c3c565b6001600160a01b0316836001600160a01b031614159050806107c45760405162461bcd60e51b81526004016102039061141d565b6006543410156107e65760405162461bcd60e51b8152600401610203906116d4565b60006107f0610c3c565b6001600160a01b031660048660405161080991906112c5565b908152604051908190036020019020546001600160a01b031614801591506108435760405162461bcd60e51b81526004016102039061179b565b6001600160a01b03841633141561086c5760405162461bcd60e51b8152600401610203906114a5565b6000610876610c3c565b6001600160a01b031660058760405161088f91906112c5565b908152604051908190036020019020546001600160a01b031614801591506108c95760405162461bcd60e51b8152600401610203906113ca565b6108d286610dbc565b6007546108e9906001600160a01b03163034610c8b565b336001600160a01b0316856001600160a01b03167fb0cbb988a88555f6347923839ff18c8c159a347bb5c40d0786ed40ee06e9f4708860405161092c9190611328565b60405180910390a35050600160005550505050565b4790565b61094d610d74565b6001600160a01b031661095e610990565b6001600160a01b0316146109845760405162461bcd60e51b8152600401610203906115fc565b61098e6000610dff565b565b6001546001600160a01b031690565b6109a881610bce565b50565b6109b3610d74565b6001600160a01b03166109c4610990565b6001600160a01b0316146109ea5760405162461bcd60e51b8152600401610203906115fc565b600655565b60026000541415610a125760405162461bcd60e51b8152600401610203906117e4565b6002600055610a1f610c3c565b6001600160a01b0316336001600160a01b03161415610a505760405162461bcd60e51b815260040161020390611631565b6000600385604051610a6291906112c5565b908152604051908190036020019020546001600160a01b031690506000610a87610c3c565b6001600160a01b0316826001600160a01b03161415905080610abb5760405162461bcd60e51b8152600401610203906115b5565b6000610ac5610c3c565b6001600160a01b0316600488604051610ade91906112c5565b908152604051908190036020019020546001600160a01b03161415905080610b185760405162461bcd60e51b815260040161020390611570565b6000600588604051610b2a91906112c5565b908152604051908190036020019020546001600160a01b031690506000610b4f610c3c565b6001600160a01b0316826001600160a01b03161415905080610b835760405162461bcd60e51b815260040161020390611393565b336001600160a01b03831614610bab5760405162461bcd60e51b8152600401610203906118ac565b610bb889838a8a8a610e51565b5050600160005550505050505050565b60065490565b610bd6610d74565b6001600160a01b0316610be7610990565b6001600160a01b031614610c0d5760405162461bcd60e51b8152600401610203906115fc565b6001600160a01b038116610c335760405162461bcd60e51b81526004016102039061145f565b6109a881610dff565b600090565b33600382604051610c5291906112c5565b90815260405190819003602001902080546001600160a01b03929092166001600160a01b03199092169190911790556109a86002610f03565b600081846001600160a01b031663dd62ed3e30866040518363ffffffff1660e01b8152600401610cbc9291906112f5565b60206040518083038186803b158015610cd457600080fd5b505afa158015610ce8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d0c9190611281565b610d169190611906565b9050610d6e8463095ea7b360e01b8584604051602401610d3792919061130f565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610f0c565b50505050565b3390565b81600582604051610d8991906112c5565b90815260405190819003602001902080546001600160a01b03929092166001600160a01b03199092169190911790555050565b33600482604051610dcd91906112c5565b90815260405190819003602001902080546001600160a01b03929092166001600160a01b031990921691909117905550565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60085460405163b87d733960e01b81526001600160a01b039091169063b87d733990610e8790889086908690899060040161135f565b600060405180830381600087803b158015610ea157600080fd5b505af1158015610eb5573d6000803e3d6000fd5b50505050836001600160a01b03167f8d11d8f75b99dce1ca13d075bd170d592c3c7291c30de9f88f714bb640d8c0b58685604051610ef492919061133b565b60405180910390a25050505050565b80546001019055565b6000610f61826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610fa09092919063ffffffff16565b805190915015610f9b5780806020019051810190610f7f9190611160565b610f9b5760405162461bcd60e51b81526004016102039061171a565b505050565b6060610faf8484600085610fb9565b90505b9392505050565b606082471015610fdb5760405162461bcd60e51b8152600401610203906114e9565b610fe485611079565b6110005760405162461bcd60e51b81526004016102039061169d565b600080866001600160a01b0316858760405161101c91906112c5565b60006040518083038185875af1925050503d8060008114611059576040519150601f19603f3d011682016040523d82523d6000602084013e61105e565b606091505b509150915061106e82828661107f565b979650505050505050565b3b151590565b6060831561108e575081610fb2565b82511561109e5782518084602001fd5b8160405162461bcd60e51b81526004016102039190611328565b600082601f8301126110c8578081fd5b813567ffffffffffffffff808211156110e3576110e3611956565b604051601f8301601f19168101602001828111828210171561110757611107611956565b60405282815284830160200186101561111e578384fd5b82602086016020830137918201602001929092529392505050565b60006020828403121561114a578081fd5b81356001600160a01b0381168114610fb2578182fd5b600060208284031215611171578081fd5b8151610fb28161196c565b60006020828403121561118d578081fd5b813567ffffffffffffffff8111156111a3578182fd5b6111af848285016110b8565b949350505050565b600080600080608085870312156111cc578283fd5b843567ffffffffffffffff8111156111e2578384fd5b6111ee878288016110b8565b94505060208501356111ff8161196c565b925060408501359150606085013560ff8116811461121b578182fd5b939692955090935050565b60008060408385031215611238578182fd5b823567ffffffffffffffff81111561124e578283fd5b61125a858286016110b8565b95602094909401359450505050565b60006020828403121561127a578081fd5b5035919050565b600060208284031215611292578081fd5b5051919050565b600081518084526112b181602086016020860161192a565b601f01601f19169290920160200192915050565b600082516112d781846020870161192a565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b03929092168252602082015260400190565b600060208252610fb26020830184611299565b60006040825261134e6040830185611299565b905082151560208301529392505050565b6000608082526113726080830187611299565b60208301959095525060ff9290921660408301521515606090910152919050565b60208082526019908201527f57696e6e65722061646472657373206973206e6f742073657400000000000000604082015260600190565b60208082526033908201527f57696e6e657220616464726573732063616e6e6f7420626520736574206265666040820152726f7265207468652067616d652073746172747360681b606082015260800190565b60208082526022908201527f4368616c6c656e676572206164647265737320646f6573206e6f742065786973604082015261747360f01b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526024908201527f426f746820706c6179657220616464726573732073686f756c6420626520756e6040820152636971756560e01b606082015260800190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b60208082526021908201527f4368616c6c656e676572206164647265737320616c72656164792065786973746040820152607360f81b606082015260800190565b60208082526025908201527f4368616c6c656e6765206163636570746f722061646472657373206973206e6f6040820152641d081cd95d60da1b606082015260800190565b60208082526027908201527f412067616d6520776974682073706563696669656420494420646f6573206e6f6040820152661d08195e1a5cdd60ca1b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601b908201527f43616c6c65722061646472657373206973206e6f742076616c69640000000000604082015260600190565b6020808252818101527f57696e54696d652068617320746f2062652067726561746572207468616e2030604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b60208082526026908201527f53656e742076616c75652073686f756c6420626520657175616c20746f2067616040820152656d652066656560d01b606082015260800190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b6020808252601d908201527f57696e6e6572206164647265737320616c726561647920657869737473000000604082015260600190565b60208082526029908201527f4368616c6c656e6765206163636570746f72206164647265737320616c72656160408201526864792065786973747360b81b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60208082526027908201527f412067616d6520776974682073706563696669656420494420616c72656164796040820152662065786973747360c81b606082015260800190565b6020808252602a908201527f4368616c6c656e6765206163636570746f72206164647265737320646f6573206040820152696e6f742065786973747360b01b606082015260800190565b60208082526031908201527f4f6e6c79207468652077696e6e6572206f66207468652067616d652063616e206040820152701b5a5b9d081d1a19481391950818d85c99607a1b606082015260800190565b90815260200190565b6000821982111561192557634e487b7160e01b81526011600452602481fd5b500190565b60005b8381101561194557818101518382015260200161192d565b83811115610d6e5750506000910152565b634e487b7160e01b600052604160045260246000fd5b80151581146109a857600080fdfea26469706673582212207c0e757b8745cfb9ed4c7e6d485eea4c7a1cdd230d939ca77691cbb51fdb095064736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:778:21",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:21",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:102:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:21"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "182:6:21"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "198:3:21",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "203:1:21",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "194:3:21"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "194:11:21"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "207:1:21",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "190:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "190:19:21"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "178:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "178:32:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:51:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:51:21"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:21",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:21",
                "type": ""
              }
            ],
            "src": "14:203:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "497:279:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "514:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "525:2:21",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "507:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "507:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "507:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "548:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "559:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "544:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "544:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "564:1:21",
                        "type": "",
                        "value": "5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "537:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "537:29:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "537:29:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "586:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "597:2:21",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "582:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "582:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "602:7:21",
                        "type": "",
                        "value": "ether"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "575:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "575:35:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "575:35:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "630:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "641:4:21",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "626:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "626:20:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "648:3:21",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "619:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "619:33:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "619:33:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "672:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "683:3:21",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "668:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "668:19:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "689:1:21",
                        "type": "",
                        "value": "3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "661:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "661:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "661:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "711:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "722:3:21",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "707:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "707:19:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "728:5:21",
                        "type": "",
                        "value": "ETH"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "700:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "700:34:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "700:34:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "743:27:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "755:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "766:3:21",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "751:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "751:19:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "743:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_13730b0d8e1bdbdc293b62ba010b1eede56b412ea2980defabe3d0b6c7844c3a_t_stringliteral_aaaebeba3810b1e6b70781f14b2d72c1cb89c0b2b320c43bb67ff79f562f5ff4__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "474:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "488:4:21",
                "type": ""
              }
            ],
            "src": "222:554:21"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_13730b0d8e1bdbdc293b62ba010b1eede56b412ea2980defabe3d0b6c7844c3a_t_stringliteral_aaaebeba3810b1e6b70781f14b2d72c1cb89c0b2b320c43bb67ff79f562f5ff4__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 64)\n        mstore(add(headStart, 64), 5)\n        mstore(add(headStart, 96), \"ether\")\n        mstore(add(headStart, 0x20), 128)\n        mstore(add(headStart, 128), 3)\n        mstore(add(headStart, 160), \"ETH\")\n        tail := add(headStart, 192)\n    }\n}",
      "id": 21,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:14968:21",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:21",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "69:658:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "118:24:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "127:5:21"
                            },
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "134:5:21"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "120:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "120:20:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "120:20:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "97:6:21"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "105:4:21",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "93:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "93:17:21"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "112:3:21"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "89:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "89:27:21"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "82:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:35:21"
                  },
                  "nodeType": "YulIf",
                  "src": "79:2:21"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "151:30:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "174:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "161:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "161:20:21"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "155:2:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "190:28:21",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "200:18:21",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "194:2:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "241:22:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "243:16:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "243:18:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "243:18:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "233:2:21"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "237:2:21"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "230:2:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "230:10:21"
                  },
                  "nodeType": "YulIf",
                  "src": "227:2:21"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "272:23:21",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "292:2:21",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "286:5:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "286:9:21"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "276:6:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "304:69:21",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "330:6:21"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "346:2:21"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "350:4:21",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "342:3:21"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "342:13:21"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "361:2:21",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "357:3:21"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "357:7:21"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "338:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "338:27:21"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "326:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "326:40:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "368:4:21",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "322:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "322:51:21"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "308:10:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "432:22:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "434:16:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "434:18:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "434:18:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "391:10:21"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "403:2:21"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "388:2:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "388:18:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "411:10:21"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "423:6:21"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "408:2:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "408:22:21"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "385:2:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "385:46:21"
                  },
                  "nodeType": "YulIf",
                  "src": "382:2:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "470:2:21",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "474:10:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "463:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "463:22:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "463:22:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "501:6:21"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "509:2:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "494:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "494:18:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "494:18:21"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "560:24:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "569:5:21"
                            },
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "576:5:21"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "562:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "562:20:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "562:20:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "535:6:21"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "543:2:21"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "531:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "531:15:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "548:4:21",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "527:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "527:26:21"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "555:3:21"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "524:2:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "524:35:21"
                  },
                  "nodeType": "YulIf",
                  "src": "521:2:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "610:6:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "618:4:21",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "606:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "606:17:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "629:6:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "637:4:21",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "625:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "625:17:21"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "644:2:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "593:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "593:54:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "593:54:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "671:6:21"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "679:2:21"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "667:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "667:15:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "684:4:21",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "663:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "663:26:21"
                      },
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "691:5:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "656:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "656:41:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "656:41:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "706:15:21",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "715:6:21"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "706:5:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "43:6:21",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "51:3:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "59:5:21",
                "type": ""
              }
            ],
            "src": "14:713:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "802:236:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "848:26:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "857:6:21"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "865:6:21"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "850:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "850:22:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "850:22:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "823:7:21"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "832:9:21"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "819:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "819:23:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "844:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "815:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "815:32:21"
                  },
                  "nodeType": "YulIf",
                  "src": "812:2:21"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "883:36:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "909:9:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "896:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "896:23:21"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "887:5:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "982:26:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "991:6:21"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "999:6:21"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "984:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "984:22:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "984:22:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "941:5:21"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "952:5:21"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "967:3:21",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "972:1:21",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "963:3:21"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "963:11:21"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "976:1:21",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "959:3:21"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "959:19:21"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "948:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "948:31:21"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "938:2:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "938:42:21"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "931:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "931:50:21"
                  },
                  "nodeType": "YulIf",
                  "src": "928:2:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1017:15:21",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1027:5:21"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1017:6:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "768:9:21",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "779:7:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "791:6:21",
                "type": ""
              }
            ],
            "src": "732:306:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1121:179:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1167:26:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1176:6:21"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1184:6:21"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1169:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1169:22:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1169:22:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1142:7:21"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1151:9:21"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1138:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1138:23:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1163:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1134:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1134:32:21"
                  },
                  "nodeType": "YulIf",
                  "src": "1131:2:21"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1202:29:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1221:9:21"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1215:5:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1215:16:21"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1206:5:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1264:5:21"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "1240:23:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1240:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1240:30:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1279:15:21",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1289:5:21"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1279:6:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1087:9:21",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1098:7:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1110:6:21",
                "type": ""
              }
            ],
            "src": "1043:257:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1385:264:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1431:26:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1440:6:21"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1448:6:21"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1433:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1433:22:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1433:22:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1406:7:21"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1415:9:21"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1402:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1402:23:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1427:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1398:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1398:32:21"
                  },
                  "nodeType": "YulIf",
                  "src": "1395:2:21"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1466:37:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1493:9:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1480:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1480:23:21"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1470:6:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1546:26:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1555:6:21"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1563:6:21"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1548:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1548:22:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1548:22:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1518:6:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1526:18:21",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1515:2:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1515:30:21"
                  },
                  "nodeType": "YulIf",
                  "src": "1512:2:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1581:62:21",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1615:9:21"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1626:6:21"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1611:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1611:22:21"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1635:7:21"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_string",
                      "nodeType": "YulIdentifier",
                      "src": "1591:19:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1591:52:21"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1581:6:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1351:9:21",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1362:7:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1374:6:21",
                "type": ""
              }
            ],
            "src": "1305:344:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1780:593:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1827:26:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1836:6:21"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1844:6:21"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1829:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1829:22:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1829:22:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1801:7:21"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1810:9:21"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1797:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1797:23:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1822:3:21",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1793:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1793:33:21"
                  },
                  "nodeType": "YulIf",
                  "src": "1790:2:21"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1862:37:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1889:9:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1876:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1876:23:21"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1866:6:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1942:26:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1951:6:21"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1959:6:21"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1944:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1944:22:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1944:22:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1914:6:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1922:18:21",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1911:2:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1911:30:21"
                  },
                  "nodeType": "YulIf",
                  "src": "1908:2:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1977:62:21",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2011:9:21"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2022:6:21"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2007:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2007:22:21"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2031:7:21"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_string",
                      "nodeType": "YulIdentifier",
                      "src": "1987:19:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1987:52:21"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1977:6:21"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2048:45:21",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2078:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2089:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2074:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2074:18:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2061:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2061:32:21"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2052:5:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2126:5:21"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "2102:23:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2102:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2102:30:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2141:15:21",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2151:5:21"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2141:6:21"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2165:42:21",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2192:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2203:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2188:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2188:18:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2175:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2175:32:21"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2165:6:21"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2216:47:21",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2248:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2259:2:21",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2244:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2244:18:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2231:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2231:32:21"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "2220:7:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2315:26:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "2324:6:21"
                            },
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "2332:6:21"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2317:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2317:22:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2317:22:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value_1",
                            "nodeType": "YulIdentifier",
                            "src": "2285:7:21"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value_1",
                                "nodeType": "YulIdentifier",
                                "src": "2298:7:21"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2307:4:21",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2294:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2294:18:21"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2282:2:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2282:31:21"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2275:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2275:39:21"
                  },
                  "nodeType": "YulIf",
                  "src": "2272:2:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2350:17:21",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "2360:7:21"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "2350:6:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_boolt_uint256t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1722:9:21",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1733:7:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1745:6:21",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1753:6:21",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1761:6:21",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1769:6:21",
                "type": ""
              }
            ],
            "src": "1654:719:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2475:315:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2521:26:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2530:6:21"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2538:6:21"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2523:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2523:22:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2523:22:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2496:7:21"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2505:9:21"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2492:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2492:23:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2517:2:21",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2488:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2488:32:21"
                  },
                  "nodeType": "YulIf",
                  "src": "2485:2:21"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2556:37:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2583:9:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2570:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2570:23:21"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "2560:6:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2636:26:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2645:6:21"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2653:6:21"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2638:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2638:22:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2638:22:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2608:6:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2616:18:21",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2605:2:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2605:30:21"
                  },
                  "nodeType": "YulIf",
                  "src": "2602:2:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2671:62:21",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2705:9:21"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2716:6:21"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2701:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2701:22:21"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2725:7:21"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_string",
                      "nodeType": "YulIdentifier",
                      "src": "2681:19:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2681:52:21"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2671:6:21"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2742:42:21",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2769:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2780:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2765:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2765:18:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2752:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2752:32:21"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2742:6:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2433:9:21",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2444:7:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2456:6:21",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2464:6:21",
                "type": ""
              }
            ],
            "src": "2378:412:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2865:120:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2911:26:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2920:6:21"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2928:6:21"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2913:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2913:22:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2913:22:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2886:7:21"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2895:9:21"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2882:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2882:23:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2907:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2878:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2878:32:21"
                  },
                  "nodeType": "YulIf",
                  "src": "2875:2:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2946:33:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2969:9:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2956:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2956:23:21"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2946:6:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2831:9:21",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2842:7:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2854:6:21",
                "type": ""
              }
            ],
            "src": "2795:190:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3071:113:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3117:26:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3126:6:21"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3134:6:21"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3119:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3119:22:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3119:22:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3092:7:21"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3101:9:21"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3088:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3088:23:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3113:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3084:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3084:32:21"
                  },
                  "nodeType": "YulIf",
                  "src": "3081:2:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3152:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3168:9:21"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3162:5:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3162:16:21"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3152:6:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3037:9:21",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3048:7:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3060:6:21",
                "type": ""
              }
            ],
            "src": "2990:194:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3241:208:21",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3251:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3271:5:21"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3265:5:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3265:12:21"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3255:6:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3293:3:21"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3298:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3286:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3286:19:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3286:19:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3340:5:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3347:4:21",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3336:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3336:16:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3358:3:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3363:4:21",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3354:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3354:14:21"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3370:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "3314:21:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3314:63:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3314:63:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3386:57:21",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3401:3:21"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3414:6:21"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3422:2:21",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3410:3:21"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3410:15:21"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3431:2:21",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "3427:3:21"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3427:7:21"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3406:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3406:29:21"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3397:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3397:39:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3438:4:21",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3393:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3393:50:21"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3386:3:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3218:5:21",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3225:3:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3233:3:21",
                "type": ""
              }
            ],
            "src": "3189:260:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3591:137:21",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3601:27:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3621:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3615:5:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3615:13:21"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3605:6:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3663:6:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3671:4:21",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3659:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3659:17:21"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3678:3:21"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3683:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "3637:21:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3637:53:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3637:53:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3699:23:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3710:3:21"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3715:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3706:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3706:16:21"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3699:3:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3567:3:21",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3572:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3583:3:21",
                "type": ""
              }
            ],
            "src": "3454:274:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3872:137:21",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3882:27:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3902:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3896:5:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3896:13:21"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3886:6:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3944:6:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3952:4:21",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3940:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3940:17:21"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3959:3:21"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3964:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "3918:21:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3918:53:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3918:53:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3980:23:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3991:3:21"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3996:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3987:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3987:16:21"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3980:3:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3848:3:21",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3853:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3864:3:21",
                "type": ""
              }
            ],
            "src": "3733:276:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4115:102:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4125:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4137:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4148:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4133:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4133:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4125:4:21"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4167:9:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4182:6:21"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4198:3:21",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4203:1:21",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4194:3:21"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4194:11:21"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4207:1:21",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4190:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4190:19:21"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4178:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4178:32:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4160:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4160:51:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4160:51:21"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4084:9:21",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4095:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4106:4:21",
                "type": ""
              }
            ],
            "src": "4014:203:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4351:175:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4361:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4373:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4384:2:21",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4369:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4369:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4361:4:21"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4396:29:21",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4414:3:21",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4419:1:21",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "4410:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4410:11:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4423:1:21",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "4406:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4406:19:21"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4400:2:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4441:9:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4456:6:21"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4464:2:21"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4452:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4452:15:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4434:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4434:34:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4434:34:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4488:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4499:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4484:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4484:18:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "4508:6:21"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4516:2:21"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4504:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4504:15:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4477:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4477:43:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4477:43:21"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4312:9:21",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4323:6:21",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4331:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4342:4:21",
                "type": ""
              }
            ],
            "src": "4222:304:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4660:145:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4670:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4682:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4693:2:21",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4678:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4678:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4670:4:21"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4712:9:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4727:6:21"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4743:3:21",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4748:1:21",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4739:3:21"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4739:11:21"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4752:1:21",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4735:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4735:19:21"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4723:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4723:32:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4705:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4705:51:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4705:51:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4776:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4787:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4772:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4772:18:21"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4792:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4765:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4765:34:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4765:34:21"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4621:9:21",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4632:6:21",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4640:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4651:4:21",
                "type": ""
              }
            ],
            "src": "4531:274:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4931:101:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4948:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4959:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4941:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4941:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4941:21:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4971:55:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4999:6:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5011:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5022:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5007:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5007:18:21"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string",
                      "nodeType": "YulIdentifier",
                      "src": "4979:19:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4979:47:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4971:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4900:9:21",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4911:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4922:4:21",
                "type": ""
              }
            ],
            "src": "4810:222:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5180:160:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5197:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5208:2:21",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5190:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5190:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5190:21:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5220:55:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5248:6:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5260:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5271:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5256:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5256:18:21"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string",
                      "nodeType": "YulIdentifier",
                      "src": "5228:19:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5228:47:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5220:4:21"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5295:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5306:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5291:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5291:18:21"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "5325:6:21"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "5318:6:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5318:14:21"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "5311:6:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5311:22:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5284:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5284:50:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5284:50:21"
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr_t_bool__to_t_string_memory_ptr_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5141:9:21",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5152:6:21",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5160:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5171:4:21",
                "type": ""
              }
            ],
            "src": "5037:303:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5540:259:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5557:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5568:3:21",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5550:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5550:22:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5550:22:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5581:56:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5609:6:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5621:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5632:3:21",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5617:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5617:19:21"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string",
                      "nodeType": "YulIdentifier",
                      "src": "5589:19:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5589:48:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5581:4:21"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5657:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5668:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5653:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5653:18:21"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5673:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5646:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5646:34:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5646:34:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5700:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5711:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5696:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5696:18:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "5720:6:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5728:4:21",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5716:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5716:17:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5689:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5689:45:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5689:45:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5754:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5765:2:21",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5750:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5750:18:21"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value3",
                                "nodeType": "YulIdentifier",
                                "src": "5784:6:21"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "5777:6:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5777:14:21"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "5770:6:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5770:22:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5743:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5743:50:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5743:50:21"
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint8_t_bool__to_t_string_memory_ptr_t_uint256_t_uint8_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5485:9:21",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "5496:6:21",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5504:6:21",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5512:6:21",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5520:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5531:4:21",
                "type": ""
              }
            ],
            "src": "5345:454:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5978:175:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5995:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6006:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5988:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5988:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5988:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6029:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6040:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6025:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6025:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6045:2:21",
                        "type": "",
                        "value": "25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6018:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6018:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6018:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6068:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6079:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6064:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6064:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6084:27:21",
                        "type": "",
                        "value": "Winner address is not set"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6057:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6057:55:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6057:55:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6121:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6133:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6144:2:21",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6129:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6129:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6121:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_08f7f19b860a6435dcb3482da5e7773745b04bf817fd4d889727a6dd3dae8840__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5955:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5969:4:21",
                "type": ""
              }
            ],
            "src": "5804:349:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6332:241:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6349:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6360:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6342:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6342:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6342:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6383:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6394:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6379:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6379:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6399:2:21",
                        "type": "",
                        "value": "51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6372:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6372:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6372:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6422:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6433:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6418:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6418:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6438:34:21",
                        "type": "",
                        "value": "Winner address cannot be set bef"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6411:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6411:62:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6411:62:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6493:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6504:2:21",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6489:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6489:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6509:21:21",
                        "type": "",
                        "value": "ore the game starts"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6482:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6482:49:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6482:49:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6540:27:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6552:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6563:3:21",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6548:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6548:19:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6540:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0b62f49c2e764ec89feead20bcc961c1ed56ada4c0696cd3b425ec7059801051__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6309:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6323:4:21",
                "type": ""
              }
            ],
            "src": "6158:415:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6752:224:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6769:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6780:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6762:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6762:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6762:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6803:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6814:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6799:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6799:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6819:2:21",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6792:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6792:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6792:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6842:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6853:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6838:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6838:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6858:34:21",
                        "type": "",
                        "value": "Challenger address does not exis"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6831:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6831:62:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6831:62:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6913:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6924:2:21",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6909:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6909:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6929:4:21",
                        "type": "",
                        "value": "ts"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6902:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6902:32:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6902:32:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6943:27:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6955:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6966:3:21",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6951:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6951:19:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6943:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1b9473895da364a7789cb188ddf4707e9ccd10108e8b86a29f646c1c2ddedb59__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6729:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6743:4:21",
                "type": ""
              }
            ],
            "src": "6578:398:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7155:228:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7172:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7183:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7165:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7165:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7165:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7206:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7217:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7202:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7202:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7222:2:21",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7195:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7195:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7195:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7245:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7256:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7241:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7241:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7261:34:21",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7234:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7234:62:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7234:62:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7316:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7327:2:21",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7312:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7312:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7332:8:21",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7305:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7305:36:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7305:36:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7350:27:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7362:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7373:3:21",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7358:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7358:19:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7350:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7132:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7146:4:21",
                "type": ""
              }
            ],
            "src": "6981:402:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7562:226:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7579:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7590:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7572:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7572:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7572:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7613:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7624:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7609:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7609:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7629:2:21",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7602:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7602:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7602:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7652:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7663:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7648:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7648:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7668:34:21",
                        "type": "",
                        "value": "Both player address should be un"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7641:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7641:62:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7641:62:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7723:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7734:2:21",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7719:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7719:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7739:6:21",
                        "type": "",
                        "value": "ique"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7712:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7712:34:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7712:34:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7755:27:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7767:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7778:3:21",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7763:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7763:19:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7755:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4c5d4640df8142cd1bce516517b32af75fc4f9f4196c87f10075d45756729a96__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7539:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7553:4:21",
                "type": ""
              }
            ],
            "src": "7388:400:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7967:228:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7984:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7995:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7977:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7977:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7977:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8018:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8029:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8014:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8014:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8034:2:21",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8007:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8007:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8007:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8057:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8068:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8053:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8053:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8073:34:21",
                        "type": "",
                        "value": "Address: insufficient balance fo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8046:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8046:62:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8046:62:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8128:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8139:2:21",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8124:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8124:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8144:8:21",
                        "type": "",
                        "value": "r call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8117:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8117:36:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8117:36:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8162:27:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8174:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8185:3:21",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8170:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8170:19:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8162:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7944:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7958:4:21",
                "type": ""
              }
            ],
            "src": "7793:402:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8374:223:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8391:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8402:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8384:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8384:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8384:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8425:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8436:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8421:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8421:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8441:2:21",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8414:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8414:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8414:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8464:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8475:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8460:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8460:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8480:34:21",
                        "type": "",
                        "value": "Challenger address already exist"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8453:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8453:62:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8453:62:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8535:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8546:2:21",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8531:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8531:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8551:3:21",
                        "type": "",
                        "value": "s"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8524:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8524:31:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8524:31:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8564:27:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8576:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8587:3:21",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8572:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8572:19:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8564:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_68b39e6bbbcb2d117ba637aa448afe60242e2493a24dec03fcbf894585f88e1c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8351:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8365:4:21",
                "type": ""
              }
            ],
            "src": "8200:397:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8776:227:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8793:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8804:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8786:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8786:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8786:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8827:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8838:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8823:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8823:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8843:2:21",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8816:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8816:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8816:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8866:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8877:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8862:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8862:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8882:34:21",
                        "type": "",
                        "value": "Challenge acceptor address is no"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8855:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8855:62:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8855:62:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8937:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8948:2:21",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8933:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8933:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8953:7:21",
                        "type": "",
                        "value": "t set"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8926:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8926:35:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8926:35:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8970:27:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8982:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8993:3:21",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8978:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8978:19:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8970:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6c747a3591d8de281882c4b0bf919d0370aa943ae4c917debdd549a6f4d800e5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8753:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8767:4:21",
                "type": ""
              }
            ],
            "src": "8602:401:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9182:229:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9199:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9210:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9192:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9192:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9192:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9233:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9244:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9229:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9229:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9249:2:21",
                        "type": "",
                        "value": "39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9222:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9222:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9222:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9272:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9283:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9268:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9268:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9288:34:21",
                        "type": "",
                        "value": "A game with specified ID does no"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9261:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9261:62:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9261:62:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9343:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9354:2:21",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9339:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9339:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9359:9:21",
                        "type": "",
                        "value": "t exist"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9332:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9332:37:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9332:37:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9378:27:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9390:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9401:3:21",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9386:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9386:19:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9378:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7f7dc31d37f22a0c3019738b1f6a4333a15b2f3e1259556e5217d5220d6a5c8b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9159:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9173:4:21",
                "type": ""
              }
            ],
            "src": "9008:403:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9590:182:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9607:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9618:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9600:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9600:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9600:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9641:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9652:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9637:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9637:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9657:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9630:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9630:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9630:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9680:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9691:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9676:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9676:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9696:34:21",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9669:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9669:62:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9669:62:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9740:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9752:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9763:2:21",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9748:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9748:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9740:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9567:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9581:4:21",
                "type": ""
              }
            ],
            "src": "9416:356:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9951:177:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9968:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9979:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9961:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9961:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9961:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10002:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10013:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9998:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9998:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10018:2:21",
                        "type": "",
                        "value": "27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9991:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9991:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9991:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10041:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10052:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10037:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10037:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10057:29:21",
                        "type": "",
                        "value": "Caller address is not valid"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10030:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10030:57:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10030:57:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10096:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10108:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10119:2:21",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10104:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10104:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10096:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a4b892cd51309e0da45f8f3cba80a0441ed1d715f40ceaa6fcbace1bdb9e9407__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9928:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9942:4:21",
                "type": ""
              }
            ],
            "src": "9777:351:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10307:182:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10324:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10335:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10317:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10317:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10317:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10358:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10369:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10354:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10354:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10374:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10347:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10347:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10347:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10397:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10408:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10393:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10393:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10413:34:21",
                        "type": "",
                        "value": "WinTime has to be greater than 0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10386:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10386:62:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10386:62:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10457:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10469:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10480:2:21",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10465:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10465:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10457:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_bc8d2fed5afaed2003118c6d2d57c190b97774656cbdf614096c6cb13ffe22e6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10284:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10298:4:21",
                "type": ""
              }
            ],
            "src": "10133:356:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10668:179:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10685:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10696:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10678:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10678:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10678:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10719:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10730:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10715:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10715:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10735:2:21",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10708:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10708:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10708:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10758:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10769:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10754:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10754:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10774:31:21",
                        "type": "",
                        "value": "Address: call to non-contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10747:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10747:59:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10747:59:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10815:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10827:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10838:2:21",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10823:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10823:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10815:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10645:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10659:4:21",
                "type": ""
              }
            ],
            "src": "10494:353:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11026:228:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11043:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11054:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11036:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11036:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11036:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11077:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11088:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11073:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11073:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11093:2:21",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11066:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11066:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11066:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11116:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11127:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11112:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11112:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11132:34:21",
                        "type": "",
                        "value": "Sent value should be equal to ga"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11105:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11105:62:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11105:62:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11187:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11198:2:21",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11183:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11183:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11203:8:21",
                        "type": "",
                        "value": "me fee"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11176:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11176:36:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11176:36:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11221:27:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11233:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11244:3:21",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11229:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11229:19:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11221:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_df6e2fc9ec87ba64888d1696bf27ec602b6cc570464535b02f1632bf6809e249__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11003:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11017:4:21",
                "type": ""
              }
            ],
            "src": "10852:402:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11433:232:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11450:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11461:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11443:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11443:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11443:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11484:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11495:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11480:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11480:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11500:2:21",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11473:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11473:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11473:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11523:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11534:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11519:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11519:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11539:34:21",
                        "type": "",
                        "value": "SafeERC20: ERC20 operation did n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11512:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11512:62:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11512:62:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11594:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11605:2:21",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11590:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11590:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11610:12:21",
                        "type": "",
                        "value": "ot succeed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11583:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11583:40:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11583:40:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11632:27:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11644:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11655:3:21",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11640:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11640:19:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11632:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11410:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11424:4:21",
                "type": ""
              }
            ],
            "src": "11259:406:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11844:179:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11861:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11872:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11854:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11854:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11854:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11895:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11906:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11891:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11891:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11911:2:21",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11884:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11884:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11884:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11934:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11945:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11930:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11930:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11950:31:21",
                        "type": "",
                        "value": "Winner address already exists"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11923:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11923:59:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11923:59:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11991:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12003:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12014:2:21",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11999:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11999:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11991:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e847f006cd3c0cbaf5b5933b91dc31baf34d94621db9cbe303ee666bd61052a0__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11821:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11835:4:21",
                "type": ""
              }
            ],
            "src": "11670:353:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12202:231:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12219:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12230:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12212:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12212:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12212:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12253:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12264:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12249:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12249:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12269:2:21",
                        "type": "",
                        "value": "41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12242:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12242:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12242:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12292:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12303:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12288:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12288:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12308:34:21",
                        "type": "",
                        "value": "Challenge acceptor address alrea"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12281:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12281:62:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12281:62:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12363:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12374:2:21",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12359:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12359:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12379:11:21",
                        "type": "",
                        "value": "dy exists"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12352:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12352:39:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12352:39:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12400:27:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12412:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12423:3:21",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12408:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12408:19:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12400:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ea8ebe73274229663547b3915a848de50064adefc44a9d5e0584f9c02299fb2a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12179:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12193:4:21",
                "type": ""
              }
            ],
            "src": "12028:405:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12612:181:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12629:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12640:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12622:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12622:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12622:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12663:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12674:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12659:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12659:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12679:2:21",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12652:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12652:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12652:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12702:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12713:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12698:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12698:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12718:33:21",
                        "type": "",
                        "value": "ReentrancyGuard: reentrant call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12691:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12691:61:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12691:61:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12761:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12773:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12784:2:21",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12769:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12769:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12761:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12589:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12603:4:21",
                "type": ""
              }
            ],
            "src": "12438:355:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12972:229:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12989:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13000:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12982:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12982:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12982:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13023:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13034:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13019:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13019:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13039:2:21",
                        "type": "",
                        "value": "39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13012:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13012:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13012:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13062:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13073:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13058:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13058:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13078:34:21",
                        "type": "",
                        "value": "A game with specified ID already"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13051:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13051:62:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13051:62:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13133:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13144:2:21",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13129:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13129:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13149:9:21",
                        "type": "",
                        "value": " exists"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13122:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13122:37:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13122:37:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13168:27:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13180:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13191:3:21",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13176:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13176:19:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13168:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ef530aef35b7ebd85e02b04c89bc924be091da1add3fbe37c0d633b4df1bacc7__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12949:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12963:4:21",
                "type": ""
              }
            ],
            "src": "12798:403:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13380:232:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13397:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13408:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13390:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13390:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13390:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13431:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13442:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13427:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13427:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13447:2:21",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13420:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13420:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13420:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13470:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13481:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13466:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13466:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13486:34:21",
                        "type": "",
                        "value": "Challenge acceptor address does "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13459:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13459:62:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13459:62:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13541:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13552:2:21",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13537:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13537:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13557:12:21",
                        "type": "",
                        "value": "not exists"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13530:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13530:40:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13530:40:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13579:27:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13591:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13602:3:21",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13587:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13587:19:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13579:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fe06faf37cda370a654f841f9f831b8a98317fbeaa08d7b9d20865898b72e84b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13357:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13371:4:21",
                "type": ""
              }
            ],
            "src": "13206:406:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13791:239:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13808:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13819:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13801:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13801:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13801:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13842:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13853:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13838:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13838:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13858:2:21",
                        "type": "",
                        "value": "49"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13831:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13831:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13831:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13881:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13892:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13877:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13877:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13897:34:21",
                        "type": "",
                        "value": "Only the winner of the game can "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13870:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13870:62:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13870:62:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13952:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13963:2:21",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13948:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13948:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13968:19:21",
                        "type": "",
                        "value": "mint the NFT card"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13941:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13941:47:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13941:47:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13997:27:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14009:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14020:3:21",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14005:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14005:19:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13997:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ff18751b5f206aacdadff35ff3a51ed08756a18f98b91fa5ffe57695be6a2c19__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13768:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13782:4:21",
                "type": ""
              }
            ],
            "src": "13617:413:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14136:76:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14146:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14158:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14169:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14154:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14154:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14146:4:21"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14188:9:21"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "14199:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14181:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14181:25:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14181:25:21"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14105:9:21",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14116:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14127:4:21",
                "type": ""
              }
            ],
            "src": "14035:177:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14265:181:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14300:115:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "sum",
                              "nodeType": "YulIdentifier",
                              "src": "14321:3:21"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "14330:3:21",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "14335:10:21",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "14326:3:21"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "14326:20:21"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "14314:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14314:33:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14314:33:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14367:1:21",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14370:4:21",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "14360:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14360:15:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14360:15:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "sum",
                              "nodeType": "YulIdentifier",
                              "src": "14395:3:21"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14400:4:21",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "14388:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14388:17:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14388:17:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14281:1:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "14288:1:21"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "14284:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14284:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "14278:2:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14278:13:21"
                  },
                  "nodeType": "YulIf",
                  "src": "14275:2:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14424:16:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14435:1:21"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14438:1:21"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14431:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14431:9:21"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "14424:3:21"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "14248:1:21",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "14251:1:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "14257:3:21",
                "type": ""
              }
            ],
            "src": "14217:229:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14504:205:21",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "14514:10:21",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "14523:1:21",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "14518:1:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14583:63:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "14608:3:21"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "14613:1:21"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "14604:3:21"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "14604:11:21"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "14627:3:21"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "14632:1:21"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "14623:3:21"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "14623:11:21"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "14617:5:21"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "14617:18:21"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "14597:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14597:39:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14597:39:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "14544:1:21"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "14547:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "14541:2:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14541:13:21"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "14555:19:21",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "14557:15:21",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "14566:1:21"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14569:2:21",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "14562:3:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14562:10:21"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "14557:1:21"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "14537:3:21",
                    "statements": []
                  },
                  "src": "14533:113:21"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14672:31:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "14685:3:21"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "14690:6:21"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "14681:3:21"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "14681:16:21"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14699:1:21",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "14674:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14674:27:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14674:27:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "14661:1:21"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "14664:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "14658:2:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14658:13:21"
                  },
                  "nodeType": "YulIf",
                  "src": "14655:2:21"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "14482:3:21",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "14487:3:21",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "14492:6:21",
                "type": ""
              }
            ],
            "src": "14451:258:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14746:95:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14763:1:21",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14770:3:21",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14775:10:21",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "14766:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14766:20:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14756:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14756:31:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14756:31:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14803:1:21",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14806:4:21",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14796:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14796:15:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14796:15:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14827:1:21",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14830:4:21",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "14820:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14820:15:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14820:15:21"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "14714:127:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14890:76:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14944:16:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14953:1:21",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14956:1:21",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "14946:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14946:12:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14946:12:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "14913:5:21"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "14934:5:21"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "14927:6:21"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14927:13:21"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "14920:6:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14920:21:21"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "14910:2:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14910:32:21"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "14903:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14903:40:21"
                  },
                  "nodeType": "YulIf",
                  "src": "14900:2:21"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14879:5:21",
                "type": ""
              }
            ],
            "src": "14846:120:21"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_t_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(add(memPtr, and(add(_1, 0x1f), not(31))), 0x20)\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(array, array) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), array)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(value0, value0) }\n        value0 := abi_decode_t_string(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_boolt_uint256t_uint8(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value1, value1) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(value1, value1) }\n        value0 := abi_decode_t_string(add(headStart, offset), dataEnd)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_t_bool(value)\n        value1 := value\n        value2 := calldataload(add(headStart, 64))\n        let value_1 := calldataload(add(headStart, 96))\n        if iszero(eq(value_1, and(value_1, 0xff))) { revert(value3, value3) }\n        value3 := value_1\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(value0, value0) }\n        value0 := abi_decode_t_string(add(headStart, offset), dataEnd)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_t_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_t_string(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_bool__to_t_string_memory_ptr_t_bool__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        tail := abi_encode_t_string(value0, add(headStart, 64))\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint8_t_bool__to_t_string_memory_ptr_t_uint256_t_uint8_t_bool__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 128)\n        tail := abi_encode_t_string(value0, add(headStart, 128))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, 0xff))\n        mstore(add(headStart, 96), iszero(iszero(value3)))\n    }\n    function abi_encode_tuple_t_stringliteral_08f7f19b860a6435dcb3482da5e7773745b04bf817fd4d889727a6dd3dae8840__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Winner address is not set\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0b62f49c2e764ec89feead20bcc961c1ed56ada4c0696cd3b425ec7059801051__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 51)\n        mstore(add(headStart, 64), \"Winner address cannot be set bef\")\n        mstore(add(headStart, 96), \"ore the game starts\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1b9473895da364a7789cb188ddf4707e9ccd10108e8b86a29f646c1c2ddedb59__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Challenger address does not exis\")\n        mstore(add(headStart, 96), \"ts\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4c5d4640df8142cd1bce516517b32af75fc4f9f4196c87f10075d45756729a96__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"Both player address should be un\")\n        mstore(add(headStart, 96), \"ique\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_68b39e6bbbcb2d117ba637aa448afe60242e2493a24dec03fcbf894585f88e1c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Challenger address already exist\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6c747a3591d8de281882c4b0bf919d0370aa943ae4c917debdd549a6f4d800e5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"Challenge acceptor address is no\")\n        mstore(add(headStart, 96), \"t set\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7f7dc31d37f22a0c3019738b1f6a4333a15b2f3e1259556e5217d5220d6a5c8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"A game with specified ID does no\")\n        mstore(add(headStart, 96), \"t exist\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a4b892cd51309e0da45f8f3cba80a0441ed1d715f40ceaa6fcbace1bdb9e9407__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Caller address is not valid\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_bc8d2fed5afaed2003118c6d2d57c190b97774656cbdf614096c6cb13ffe22e6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"WinTime has to be greater than 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_df6e2fc9ec87ba64888d1696bf27ec602b6cc570464535b02f1632bf6809e249__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Sent value should be equal to ga\")\n        mstore(add(headStart, 96), \"me fee\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e847f006cd3c0cbaf5b5933b91dc31baf34d94621db9cbe303ee666bd61052a0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Winner address already exists\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ea8ebe73274229663547b3915a848de50064adefc44a9d5e0584f9c02299fb2a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"Challenge acceptor address alrea\")\n        mstore(add(headStart, 96), \"dy exists\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ef530aef35b7ebd85e02b04c89bc924be091da1add3fbe37c0d633b4df1bacc7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"A game with specified ID already\")\n        mstore(add(headStart, 96), \" exists\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fe06faf37cda370a654f841f9f831b8a98317fbeaa08d7b9d20865898b72e84b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"Challenge acceptor address does \")\n        mstore(add(headStart, 96), \"not exists\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ff18751b5f206aacdadff35ff3a51ed08756a18f98b91fa5ffe57695be6a2c19__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"Only the winner of the game can \")\n        mstore(add(headStart, 96), \"mint the NFT card\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(sum, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(sum, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_t_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n}",
      "id": 21,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "380:19:17:-:0;487:15007:18;380:19:17;;;-1:-1:-1;487:15007:18;380:19:17;;;344:55;;250:10:19;5621:44:18;;5695:25;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5671:49:18;;;-1:-1:-1;;;;;;5671:49:18;-1:-1:-1;;;;;5671:49:18;;;;;;;;;;5760:30;;5784:4;;5760:30;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5726:64:18;;;-1:-1:-1;;;;;;5726:64:18;-1:-1:-1;;;;;5726:64:18;;;;;;;;;;487:15007;;;;;;;;;-1:-1:-1;1637:1:1;1742:7;:22;867:23:0;877:12;:10;:12::i;:::-;867:9;:23::i;:::-;487:15007:18;;587:96:11;666:10;587:96;:::o;2041:169:0:-;2115:6;;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;;2163:40;;2115:6;;;2131:17;2115:6;;2163:40;;2096:16;;2163:40;2041:169;;:::o;487:15007:18:-;;;;;;;;:::o;:::-;;;;;;;;:::o;14:203:21:-;-1:-1:-1;;;;;178:32:21;;;;160:51;;148:2;133:18;;115:102::o;222:554::-;525:2;507:21;;;564:1;544:18;;;537:29;-1:-1:-1;;;597:2:21;582:18;;575:35;648:3;641:4;626:20;;619:33;;;689:1;668:19;;;661:30;-1:-1:-1;;;722:3:21;707:19;;700:34;766:3;751:19;;497:279::o;:::-;487:15007:18;;;;;;",
  "deployedSourceMap": "487:15007:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6566:1738;;;;;;:::i;:::-;;:::i;:::-;;10690:1487;;;;;;;;;;-1:-1:-1;10690:1487:18;;;;;:::i;:::-;;:::i;8498:1889::-;;;;;;:::i;:::-;;:::i;5870:104::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1605:92:0;;;;;;;;;;;;;:::i;973:85::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1192:105:17:-;;;;;;;;;;-1:-1:-1;1192:105:17;;;;;:::i;:::-;;:::i;6374:106:18:-;;;;;;;;;;-1:-1:-1;6374:106:18;;;;;:::i;:::-;;:::i;12517:1367::-;;;;;;;;;;-1:-1:-1;12517:1367:18;;;;;:::i;:::-;;:::i;6057:91::-;;;;;;;;;;;;;:::i;1846:189:0:-;;;;;;;;;;-1:-1:-1;1846:189:0;;;;;:::i;:::-;;:::i;6566:1738:18:-;1680:1:1;2259:7;;:19;;2251:63;;;;-1:-1:-1;;;2251:63:1;;;;;;;:::i;:::-;;;;;;;;;1680:1;2389:7;:18;6729:21:18::1;:19;:21::i;:::-;-1:-1:-1::0;;;;;6715:35:18::1;:10;-1:-1:-1::0;;;;;6715:35:18::1;;;6707:75;;;;-1:-1:-1::0;;;6707:75:18::1;;;;;;;:::i;:::-;6792:25;6820:14;6835:6;6820:22;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;;-1:-1:-1;;;;;6820:22:18::1;::::0;-1:-1:-1;6820:22:18::1;6891:21;:19;:21::i;:::-;-1:-1:-1::0;;;;;6870:42:18::1;:17;-1:-1:-1::0;;;;;6870:42:18::1;;;6852:60;;7004:10;7003:11;6995:63;;;;-1:-1:-1::0;;;6995:63:18::1;;;;;;;:::i;:::-;7145:21;7190;:19;:21::i;:::-;-1:-1:-1::0;;;;;7169:42:18::1;:17;-1:-1:-1::0;;;;;7169:42:18::1;;;7145:66;;7230:16;7229:17;7221:63;;;;-1:-1:-1::0;;;7221:63:18::1;;;;;;;:::i;:::-;7431:12;;7418:9;:25;;7410:76;;;;-1:-1:-1::0;;;7410:76:18::1;;;;;;;:::i;:::-;7564:31;7622:21;:19;:21::i;:::-;-1:-1:-1::0;;;;;7598:45:18::1;:12;7611:6;7598:20;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;;-1:-1:-1;;;;;7598:20:18::1;:45;::::0;-1:-1:-1;7598:45:18;7653:80:::1;;;;-1:-1:-1::0;;;7653:80:18::1;;;;;;;:::i;:::-;7743:17;7786:21;:19;:21::i;:::-;-1:-1:-1::0;;;;;7763:44:18::1;:11;7775:6;7763:19;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;;-1:-1:-1;;;;;7763:19:18::1;:44;::::0;::::1;::::0;-1:-1:-1;7879:77:18::1;;;;-1:-1:-1::0;;;7879:77:18::1;;;;;;;:::i;:::-;8022:19;8034:6;8022:11;:19::i;:::-;8187:6;::::0;8155:65:::1;::::0;-1:-1:-1;;;;;8187:6:18::1;8203:4;8210:9;8155:31;:65::i;:::-;8278:10;-1:-1:-1::0;;;;;8266:31:18::1;;8290:6;8266:31;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;;1637:1:1;2562:7;:22;-1:-1:-1;;;;6566:1738:18:o;10690:1487::-;1680:1:1;2259:7;;:19;;2251:63;;;;-1:-1:-1;;;2251:63:1;;;;;;;:::i;:::-;1680:1;2389:7;:18;1196:12:0::1;:10;:12::i;:::-;-1:-1:-1::0;;;;;1185:23:0::1;:7;:5;:7::i;:::-;-1:-1:-1::0;;;;;1185:23:0::1;;1177:68;;;;-1:-1:-1::0;;;1177:68:0::1;;;;;;;:::i;:::-;10891:21:18::2;:19;:21::i;:::-;-1:-1:-1::0;;;;;10877:35:18::2;:10;-1:-1:-1::0;;;;;10877:35:18::2;;;10869:75;;;;-1:-1:-1::0;;;10869:75:18::2;;;;;;;:::i;:::-;10954:25;10982:14;10997:6;10982:22;;;;;;:::i;:::-;::::0;;;::::2;::::0;;;;;::::2;::::0;;;;-1:-1:-1;;;;;10982:22:18::2;::::0;-1:-1:-1;10982:22:18::2;11053:21;:19;:21::i;:::-;-1:-1:-1::0;;;;;11032:42:18::2;:17;-1:-1:-1::0;;;;;11032:42:18::2;;;11014:60;;11165:10;11157:62;;;;-1:-1:-1::0;;;11157:62:18::2;;;;;;;:::i;:::-;11289:21;11334;:19;:21::i;:::-;-1:-1:-1::0;;;;;11313:42:18::2;:17;-1:-1:-1::0;;;;;11313:42:18::2;;;11289:66;;11373:16;11365:63;;;;-1:-1:-1::0;;;11365:63:18::2;;;;;;;:::i;:::-;11506:28;11561:21;:19;:21::i;:::-;-1:-1:-1::0;;;;;11537:45:18::2;:12;11550:6;11537:20;;;;;;:::i;:::-;::::0;;;::::2;::::0;;;;;::::2;::::0;;;;-1:-1:-1;;;;;11537:20:18::2;:45;;::::0;-1:-1:-1;11537:45:18;11592:78:::2;;;;-1:-1:-1::0;;;11592:78:18::2;;;;;;;:::i;:::-;11742:17;11785:21;:19;:21::i;:::-;-1:-1:-1::0;;;;;11762:44:18::2;:11;11774:6;11762:19;;;;;;:::i;:::-;::::0;;;::::2;::::0;;;;;::::2;::::0;;;;-1:-1:-1;;;;;11762:19:18::2;:44;::::0;::::2;::::0;-1:-1:-1;11816:55:18::2;;;;-1:-1:-1::0;;;11816:55:18::2;;;;;;;:::i;:::-;11963:1;11952:8;:12;11944:57;;;;-1:-1:-1::0;;;11944:57:18::2;;;;;;;:::i;:::-;12069:28;12078:10;12090:6;12069:8;:28::i;:::-;12151:10;-1:-1:-1::0;;;;;12143:27:18::2;;12163:6;12143:27;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;;1637:1:1;2562:7;:22;-1:-1:-1;;;;;10690:1487:18:o;8498:1889::-;1680:1:1;2259:7;;:19;;2251:63;;;;-1:-1:-1;;;2251:63:1;;;;;;;:::i;:::-;1680:1;2389:7;:18;8659:21:18::1;:19;:21::i;:::-;-1:-1:-1::0;;;;;8645:35:18::1;:10;-1:-1:-1::0;;;;;8645:35:18::1;;;8637:75;;;;-1:-1:-1::0;;;8637:75:18::1;;;;;;;:::i;:::-;8722:25;8750:14;8765:6;8750:22;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;;-1:-1:-1;;;;;8750:22:18::1;::::0;-1:-1:-1;8750:22:18::1;8821:21;:19;:21::i;:::-;-1:-1:-1::0;;;;;8800:42:18::1;:17;-1:-1:-1::0;;;;;8800:42:18::1;;;8782:60;;8933:10;8925:62;;;;-1:-1:-1::0;;;8925:62:18::1;;;;;;;:::i;:::-;9057:21;9102;:19;:21::i;:::-;-1:-1:-1::0;;;;;9081:42:18::1;:17;-1:-1:-1::0;;;;;9081:42:18::1;;;9057:66;;9141:16;9133:63;;;;-1:-1:-1::0;;;9133:63:18::1;;;;;;;:::i;:::-;9343:12;;9330:9;:25;;9322:76;;;;-1:-1:-1::0;;;9322:76:18::1;;;;;;;:::i;:::-;9476:28;9531:21;:19;:21::i;:::-;-1:-1:-1::0;;;;;9507:45:18::1;:12;9520:6;9507:20;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;;-1:-1:-1;;;;;9507:20:18::1;:45;::::0;::::1;::::0;-1:-1:-1;9562:78:18::1;;;;-1:-1:-1::0;;;9562:78:18::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;9720:31:18;::::1;9741:10;9720:31;;9712:80;;;;-1:-1:-1::0;;;9712:80:18::1;;;;;;;:::i;:::-;9864:17;9907:21;:19;:21::i;:::-;-1:-1:-1::0;;;;;9884:44:18::1;:11;9896:6;9884:19;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;;-1:-1:-1;;;;;9884:19:18::1;:44;::::0;::::1;::::0;-1:-1:-1;9938:77:18::1;;;;-1:-1:-1::0;;;9938:77:18::1;;;;;;;:::i;:::-;10089:17;10099:6;10089:9;:17::i;:::-;10249:6;::::0;10217:65:::1;::::0;-1:-1:-1;;;;;10249:6:18::1;10265:4;10272:9;10217:31;:65::i;:::-;10361:10;-1:-1:-1::0;;;;;10331:49:18::1;10342:17;-1:-1:-1::0;;;;;10331:49:18::1;;10373:6;10331:49;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;;1637:1:1;2562:7;:22;-1:-1:-1;;;;8498:1889:18:o;5870:104::-;5946:21;5870:104;:::o;1605:92:0:-;1196:12;:10;:12::i;:::-;-1:-1:-1;;;;;1185:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:0;;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;973:85::-;1045:6;;-1:-1:-1;;;;;1045:6:0;973:85;:::o;1192:105:17:-;1256:34;1274:15;1256:17;:34::i;:::-;1192:105;:::o;6374:106:18:-;1196:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1185:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:0;;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;6448:12:18::1;:25:::0;6374:106::o;12517:1367::-;1680:1:1;2259:7;;:19;;2251:63;;;;-1:-1:-1;;;2251:63:1;;;;;;;:::i;:::-;1680:1;2389:7;:18;12753:21:18::1;:19;:21::i;:::-;-1:-1:-1::0;;;;;12739:35:18::1;:10;-1:-1:-1::0;;;;;12739:35:18::1;;;12731:75;;;;-1:-1:-1::0;;;12731:75:18::1;;;;;;;:::i;:::-;12816:25;12844:14;12859:6;12844:22;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;;-1:-1:-1;;;;;12844:22:18::1;::::0;-1:-1:-1;12844:22:18::1;12915:21;:19;:21::i;:::-;-1:-1:-1::0;;;;;12894:42:18::1;:17;-1:-1:-1::0;;;;;12894:42:18::1;;;12876:60;;13027:10;13019:62;;;;-1:-1:-1::0;;;13019:62:18::1;;;;;;;:::i;:::-;13159:28;13214:21;:19;:21::i;:::-;-1:-1:-1::0;;;;;13190:45:18::1;:12;13203:6;13190:20;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;;-1:-1:-1;;;;;13190:20:18::1;:45;;::::0;-1:-1:-1;13190:45:18;13245:73:::1;;;;-1:-1:-1::0;;;13245:73:18::1;;;;;;;:::i;:::-;13328:21;13352:11;13364:6;13352:19;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;;-1:-1:-1;;;;;13352:19:18::1;::::0;-1:-1:-1;13352:19:18::1;13418:21;:19;:21::i;:::-;-1:-1:-1::0;;;;;13401:38:18::1;:13;-1:-1:-1::0;;;;;13401:38:18::1;;;13381:58;;13519:12;13511:50;;;;-1:-1:-1::0;;;13511:50:18::1;;;;;;;:::i;:::-;13655:10;-1:-1:-1::0;;;;;13655:27:18;::::1;;13647:89;;;;-1:-1:-1::0;;;13647:89:18::1;;;;;;;:::i;:::-;13809:68;13827:6;13835:13;13850:6;13858:7;13867:9;13809:17;:68::i;:::-;-1:-1:-1::0;;1637:1:1;2562:7;:22;-1:-1:-1;;;;;;;12517:1367:18:o;6057:91::-;6129:12;;6057:91;:::o;1846:189:0:-;1196:12;:10;:12::i;:::-;-1:-1:-1;;;;;1185:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:0;;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:0;::::1;1926:73;;;;-1:-1:-1::0;;;1926:73:0::1;;;;;;;:::i;:::-;2009:19;2019:8;2009:9;:19::i;1165:89:19:-:0;1211:7;1165:89;:::o;14030:115:18:-;14128:10:::1;14103:14;14118:6;14103:22;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:35;;-1:-1:-1;;;;;14103:35:18;;;::::1;-1:-1:-1::0;;;;;;14103:35:18;;::::1;::::0;;;::::1;::::0;;794:20:17;:8;:18;:20::i;1955:310:5:-;2081:20;2146:5;2104;-1:-1:-1;;;;;2104:15:5;;2128:4;2135:7;2104:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:47;;;;:::i;:::-;2081:70;;2161:97;2181:5;2211:22;;;2235:7;2244:12;2188:69;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2188:69:5;;;;;;;;;;;;;;-1:-1:-1;;;;;2188:69:5;-1:-1:-1;;;;;;2188:69:5;;;;;;;;;;2161:19;:97::i;:::-;1955:310;;;;:::o;587:96:11:-;666:10;587:96;:::o;14587:123:18:-;14690:13;14668:11;14680:6;14668:19;;;;;;:::i;:::-;;;;;;;;;;;;;;:35;;-1:-1:-1;;;;;14668:35:18;;;;-1:-1:-1;;;;;;14668:35:18;;;;;;;;;-1:-1:-1;;14587:123:18:o;14284:99::-;14366:10;14343:12;14356:6;14343:20;;;;;;:::i;:::-;;;;;;;;;;;;;;:33;;-1:-1:-1;;;;;14343:33:18;;;;-1:-1:-1;;;;;;14343:33:18;;;;;;;;;-1:-1:-1;14284:99:18:o;2041:169:0:-;2115:6;;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;;2163:40;;2115:6;;;2131:17;2115:6;;2163:40;;2096:16;;2163:40;2041:169;;:::o;15108:384:18:-;15363:11;;:66;;-1:-1:-1;;;15363:66:18;;-1:-1:-1;;;;;15363:11:18;;;;:30;;:66;;15394:6;;15402:7;;15411:9;;15422:6;;15363:66;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15455:13;-1:-1:-1;;;;;15444:41:18;;15470:6;15478;15444:41;;;;;;;:::i;:::-;;;;;;;;15108:384;;;;;:::o;891:123:12:-;978:19;;996:1;978:19;;;891:123::o;3140:706:5:-;3559:23;3585:69;3613:4;3585:69;;;;;;;;;;;;;;;;;3593:5;-1:-1:-1;;;;;3585:27:5;;;:69;;;;;:::i;:::-;3668:17;;3559:95;;-1:-1:-1;3668:21:5;3664:176;;3763:10;3752:30;;;;;;;;;;;;:::i;:::-;3744:85;;;;-1:-1:-1;;;3744:85:5;;;;;;;:::i;:::-;3140:706;;;:::o;3461:223:10:-;3594:12;3625:52;3647:6;3655:4;3661:1;3664:12;3625:21;:52::i;:::-;3618:59;;3461:223;;;;;;:::o;4548:499::-;4713:12;4770:5;4745:21;:30;;4737:81;;;;-1:-1:-1;;;4737:81:10;;;;;;;:::i;:::-;4836:18;4847:6;4836:10;:18::i;:::-;4828:60;;;;-1:-1:-1;;;4828:60:10;;;;;;;:::i;:::-;4900:12;4914:23;4941:6;-1:-1:-1;;;;;4941:11:10;4960:5;4967:4;4941:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4899:73;;;;4989:51;5006:7;5015:10;5027:12;4989:16;:51::i;:::-;4982:58;4548:499;-1:-1:-1;;;;;;;4548:499:10:o;718:377::-;1034:20;1080:8;;;718:377::o;7161:692::-;7307:12;7335:7;7331:516;;;-1:-1:-1;7365:10:10;7358:17;;7331:516;7476:17;;:21;7472:365;;7670:10;7664:17;7730:15;7717:10;7713:2;7709:19;7702:44;7619:145;7809:12;7802:20;;-1:-1:-1;;;7802:20:10;;;;;;;;:::i;14:713:21:-;;112:3;105:4;97:6;93:17;89:27;79:2;;134:5;127;120:20;79:2;174:6;161:20;200:18;237:2;233;230:10;227:2;;;243:18;;:::i;:::-;292:2;286:9;361:2;342:13;;-1:-1:-1;;338:27:21;326:40;;368:4;322:51;388:18;;;408:22;;;385:46;382:2;;;434:18;;:::i;:::-;470:2;463:22;494:18;;;531:15;;;548:4;527:26;524:35;-1:-1:-1;521:2:21;;;576:5;569;562:20;521:2;644;637:4;629:6;625:17;618:4;610:6;606:17;593:54;667:15;;;684:4;663:26;656:41;;;;671:6;69:658;-1:-1:-1;;;69:658:21:o;732:306::-;;844:2;832:9;823:7;819:23;815:32;812:2;;;865:6;857;850:22;812:2;896:23;;-1:-1:-1;;;;;948:31:21;;938:42;;928:2;;999:6;991;984:22;1043:257;;1163:2;1151:9;1142:7;1138:23;1134:32;1131:2;;;1184:6;1176;1169:22;1131:2;1221:9;1215:16;1240:30;1264:5;1240:30;:::i;1305:344::-;;1427:2;1415:9;1406:7;1402:23;1398:32;1395:2;;;1448:6;1440;1433:22;1395:2;1493:9;1480:23;1526:18;1518:6;1515:30;1512:2;;;1563:6;1555;1548:22;1512:2;1591:52;1635:7;1626:6;1615:9;1611:22;1591:52;:::i;:::-;1581:62;1385:264;-1:-1:-1;;;;1385:264:21:o;1654:719::-;;;;;1822:3;1810:9;1801:7;1797:23;1793:33;1790:2;;;1844:6;1836;1829:22;1790:2;1889:9;1876:23;1922:18;1914:6;1911:30;1908:2;;;1959:6;1951;1944:22;1908:2;1987:52;2031:7;2022:6;2011:9;2007:22;1987:52;:::i;:::-;1977:62;;;2089:2;2078:9;2074:18;2061:32;2102:30;2126:5;2102:30;:::i;:::-;2151:5;-1:-1:-1;2203:2:21;2188:18;;2175:32;;-1:-1:-1;2259:2:21;2244:18;;2231:32;2307:4;2294:18;;2282:31;;2272:2;;2332:6;2324;2317:22;2272:2;1780:593;;;;-1:-1:-1;1780:593:21;;-1:-1:-1;;1780:593:21:o;2378:412::-;;;2517:2;2505:9;2496:7;2492:23;2488:32;2485:2;;;2538:6;2530;2523:22;2485:2;2583:9;2570:23;2616:18;2608:6;2605:30;2602:2;;;2653:6;2645;2638:22;2602:2;2681:52;2725:7;2716:6;2705:9;2701:22;2681:52;:::i;:::-;2671:62;2780:2;2765:18;;;;2752:32;;-1:-1:-1;;;;2475:315:21:o;2795:190::-;;2907:2;2895:9;2886:7;2882:23;2878:32;2875:2;;;2928:6;2920;2913:22;2875:2;-1:-1:-1;2956:23:21;;2865:120;-1:-1:-1;2865:120:21:o;2990:194::-;;3113:2;3101:9;3092:7;3088:23;3084:32;3081:2;;;3134:6;3126;3119:22;3081:2;-1:-1:-1;3162:16:21;;3071:113;-1:-1:-1;3071:113:21:o;3189:260::-;;3271:5;3265:12;3298:6;3293:3;3286:19;3314:63;3370:6;3363:4;3358:3;3354:14;3347:4;3340:5;3336:16;3314:63;:::i;:::-;3431:2;3410:15;-1:-1:-1;;3406:29:21;3397:39;;;;3438:4;3393:50;;3241:208;-1:-1:-1;;3241:208:21:o;3454:274::-;;3621:6;3615:13;3637:53;3683:6;3678:3;3671:4;3663:6;3659:17;3637:53;:::i;:::-;3706:16;;;;;3591:137;-1:-1:-1;;3591:137:21:o;4014:203::-;-1:-1:-1;;;;;4178:32:21;;;;4160:51;;4148:2;4133:18;;4115:102::o;4222:304::-;-1:-1:-1;;;;;4452:15:21;;;4434:34;;4504:15;;4499:2;4484:18;;4477:43;4384:2;4369:18;;4351:175::o;4531:274::-;-1:-1:-1;;;;;4723:32:21;;;;4705:51;;4787:2;4772:18;;4765:34;4693:2;4678:18;;4660:145::o;4810:222::-;;4959:2;4948:9;4941:21;4979:47;5022:2;5011:9;5007:18;4999:6;4979:47;:::i;5037:303::-;;5208:2;5197:9;5190:21;5228:47;5271:2;5260:9;5256:18;5248:6;5228:47;:::i;:::-;5220:55;;5325:6;5318:14;5311:22;5306:2;5295:9;5291:18;5284:50;5180:160;;;;;:::o;5345:454::-;;5568:3;5557:9;5550:22;5589:48;5632:3;5621:9;5617:19;5609:6;5589:48;:::i;:::-;5668:2;5653:18;;5646:34;;;;-1:-1:-1;5728:4:21;5716:17;;;;5711:2;5696:18;;5689:45;5777:14;5770:22;5765:2;5750:18;;;5743:50;5581:56;5540:259;-1:-1:-1;5540:259:21:o;5804:349::-;6006:2;5988:21;;;6045:2;6025:18;;;6018:30;6084:27;6079:2;6064:18;;6057:55;6144:2;6129:18;;5978:175::o;6158:415::-;6360:2;6342:21;;;6399:2;6379:18;;;6372:30;6438:34;6433:2;6418:18;;6411:62;-1:-1:-1;;;6504:2:21;6489:18;;6482:49;6563:3;6548:19;;6332:241::o;6578:398::-;6780:2;6762:21;;;6819:2;6799:18;;;6792:30;6858:34;6853:2;6838:18;;6831:62;-1:-1:-1;;;6924:2:21;6909:18;;6902:32;6966:3;6951:19;;6752:224::o;6981:402::-;7183:2;7165:21;;;7222:2;7202:18;;;7195:30;7261:34;7256:2;7241:18;;7234:62;-1:-1:-1;;;7327:2:21;7312:18;;7305:36;7373:3;7358:19;;7155:228::o;7388:400::-;7590:2;7572:21;;;7629:2;7609:18;;;7602:30;7668:34;7663:2;7648:18;;7641:62;-1:-1:-1;;;7734:2:21;7719:18;;7712:34;7778:3;7763:19;;7562:226::o;7793:402::-;7995:2;7977:21;;;8034:2;8014:18;;;8007:30;8073:34;8068:2;8053:18;;8046:62;-1:-1:-1;;;8139:2:21;8124:18;;8117:36;8185:3;8170:19;;7967:228::o;8200:397::-;8402:2;8384:21;;;8441:2;8421:18;;;8414:30;8480:34;8475:2;8460:18;;8453:62;-1:-1:-1;;;8546:2:21;8531:18;;8524:31;8587:3;8572:19;;8374:223::o;8602:401::-;8804:2;8786:21;;;8843:2;8823:18;;;8816:30;8882:34;8877:2;8862:18;;8855:62;-1:-1:-1;;;8948:2:21;8933:18;;8926:35;8993:3;8978:19;;8776:227::o;9008:403::-;9210:2;9192:21;;;9249:2;9229:18;;;9222:30;9288:34;9283:2;9268:18;;9261:62;-1:-1:-1;;;9354:2:21;9339:18;;9332:37;9401:3;9386:19;;9182:229::o;9416:356::-;9618:2;9600:21;;;9637:18;;;9630:30;9696:34;9691:2;9676:18;;9669:62;9763:2;9748:18;;9590:182::o;9777:351::-;9979:2;9961:21;;;10018:2;9998:18;;;9991:30;10057:29;10052:2;10037:18;;10030:57;10119:2;10104:18;;9951:177::o;10133:356::-;10335:2;10317:21;;;10354:18;;;10347:30;10413:34;10408:2;10393:18;;10386:62;10480:2;10465:18;;10307:182::o;10494:353::-;10696:2;10678:21;;;10735:2;10715:18;;;10708:30;10774:31;10769:2;10754:18;;10747:59;10838:2;10823:18;;10668:179::o;10852:402::-;11054:2;11036:21;;;11093:2;11073:18;;;11066:30;11132:34;11127:2;11112:18;;11105:62;-1:-1:-1;;;11198:2:21;11183:18;;11176:36;11244:3;11229:19;;11026:228::o;11259:406::-;11461:2;11443:21;;;11500:2;11480:18;;;11473:30;11539:34;11534:2;11519:18;;11512:62;-1:-1:-1;;;11605:2:21;11590:18;;11583:40;11655:3;11640:19;;11433:232::o;11670:353::-;11872:2;11854:21;;;11911:2;11891:18;;;11884:30;11950:31;11945:2;11930:18;;11923:59;12014:2;11999:18;;11844:179::o;12028:405::-;12230:2;12212:21;;;12269:2;12249:18;;;12242:30;12308:34;12303:2;12288:18;;12281:62;-1:-1:-1;;;12374:2:21;12359:18;;12352:39;12423:3;12408:19;;12202:231::o;12438:355::-;12640:2;12622:21;;;12679:2;12659:18;;;12652:30;12718:33;12713:2;12698:18;;12691:61;12784:2;12769:18;;12612:181::o;12798:403::-;13000:2;12982:21;;;13039:2;13019:18;;;13012:30;13078:34;13073:2;13058:18;;13051:62;-1:-1:-1;;;13144:2:21;13129:18;;13122:37;13191:3;13176:19;;12972:229::o;13206:406::-;13408:2;13390:21;;;13447:2;13427:18;;;13420:30;13486:34;13481:2;13466:18;;13459:62;-1:-1:-1;;;13552:2:21;13537:18;;13530:40;13602:3;13587:19;;13380:232::o;13617:413::-;13819:2;13801:21;;;13858:2;13838:18;;;13831:30;13897:34;13892:2;13877:18;;13870:62;-1:-1:-1;;;13963:2:21;13948:18;;13941:47;14020:3;14005:19;;13791:239::o;14035:177::-;14181:25;;;14169:2;14154:18;;14136:76::o;14217:229::-;;14288:1;14284:6;14281:1;14278:13;14275:2;;;-1:-1:-1;;;14314:33:21;;14370:4;14367:1;14360:15;14400:4;14321:3;14388:17;14275:2;-1:-1:-1;14431:9:21;;14265:181::o;14451:258::-;14523:1;14533:113;14547:6;14544:1;14541:13;14533:113;;;14623:11;;;14617:18;14604:11;;;14597:39;14569:2;14562:10;14533:113;;;14664:6;14661:1;14658:13;14655:2;;;-1:-1:-1;;14699:1:21;14681:16;;14674:27;14504:205::o;14714:127::-;14775:10;14770:3;14766:20;14763:1;14756:31;14806:4;14803:1;14796:15;14830:4;14827:1;14820:15;14846:120;14934:5;14927:13;14920:21;14913:5;14910:32;14900:2;;14956:1;14953;14946:12",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport './BaseContract.sol';\nimport \"./NFTContract.sol\";\nimport './Helpers.sol';\n\ncontract GameContract is BaseContract {\n    \n    using SafeERC20 for IERC20;\n    using Address for address;\n    \n    event GameCreated(address indexed challengerAddress, string gameId);\n    event GameJoined(address indexed challengerAddress, address indexed challengeAcceptorAddress, string gameId);\n    event GameEnd(address indexed winnerAddress, string gameId);\n    event NFTCreated(address indexed winnerAddress, string gameId, bool isRare);\n    \n    enum ActionType {\n        CreateGame,\n        JoinGame,\n        EndGame\n    }\n    \n    // modifier validGame(uint gameId, uint valuePassed, ActionType action, address _winnerAddress) {\n    //     // Check and verify if the caller address is valid\n    //     require(msg.sender != Helpers.nullAddress(), \"Caller address is not valid\");\n\n    //     AddressMapping memory addressMapping = _games[gameId];\n    //     address challengerAddress = addressMapping.challengerAddress;\n    //     address challengeAcceptorAddress = addressMapping.challengeAcceptorAddress;\n    //     address winnerAddress = addressMapping.winnerAddress;\n    //     bool gameExists = challengerAddress != Helpers.nullAddress() || challengeAcceptorAddress != Helpers.nullAddress() || winnerAddress != Helpers.nullAddress();\n\n    //     if (action == ActionType.CreateGame) {\n    //         // Check and verify if a game with specified ID  already exists.\n    //         require(!gameExists, \"A game with specified ID already exists\");\n    //         // Check and verify if a value equal to or greater than `_baseGameFee` was sent along with the transaction.\n    //         require(valuePassed == _baseGameFee, \"Sent value should be equal to game fee\");\n    //         // Check and verify if the winner address is not set.\n    //         require(challengerAddress == Helpers.nullAddress(), \"Challenger address is already set\");\n    //         // Check and verify if challenge acceptor address is not set yet.\n    //         require(challengeAcceptorAddress == Helpers.nullAddress(), \"Challenge acceptor address is already set\");\n    //         // Check and verify if the winner address is not set.\n    //         require(winnerAddress == Helpers.nullAddress(), \"Winner address cannot be set before the game ends\");\n    //     } else if (action == ActionType.JoinGame) {\n    //         // Check and verify if a game currently exists for specified `gameId`.\n    //         require(gameExists, \"A game with specified ID does not exists\");\n    //         // Check and verify if challenger address is already set for the game.\n    //         require(challengerAddress != Helpers.nullAddress(), \"No challenger address set for the game\");\n    //         // Check and verify if challenger address is not equal to caller address.\n    //         require(challengerAddress != msg.sender, \"Challenger and challenge acceptor address cannot be same address\");\n    //         // Check and verify if challenge acceptor address is not equal to caller address.\n    //         require(challengeAcceptorAddress != msg.sender, \"The player already accepted the challenge\");\n    //         // Check and verify if challenge acceptor address is not set yet.\n    //         require(challengeAcceptorAddress == Helpers.nullAddress(), \"A player already accepted this challenge\");\n    //         // Check and verify if a value equal to or greater than `_baseGameFee` was sent along with the transaction.\n    //         require(valuePassed == _baseGameFee, \"Sent value should be equal to game fee\");\n    //         // Check and verify if the winner address is not set.\n    //         require(winnerAddress == Helpers.nullAddress(), \"Winner address cannot be set before the game ends\");\n    //     } else if (action == ActionType.EndGame) {\n    //         // Check and verify if a game exists for the specified `gameId`.\n    //         require(gameExists, \"A game with specified ID does not exists.\");\n    //         // Check and verify if challengerAddress is valid.\n    //         require(challengerAddress != Helpers.nullAddress(), \"Challenger address is not valid.\");\n    //         // Check and verify if challenge acceptor address is valid.\n    //         require(challengeAcceptorAddress != Helpers.nullAddress(), \"Challenge acceptor address is not valid\");\n    //         // Check and verify if the winner address is not set.\n    //         require(winnerAddress == Helpers.nullAddress(), \"Winner address is already set\");\n    //         // Check and verify if the passed _winnerAddress is valid\n    //         require(_winnerAddress != Helpers.nullAddress(), \"Winner address is not valid\");\n    //         // Check and verify if passed _winnerAddress is equal to either player of the game\n    //         require(_winnerAddress == challengerAddress || _winnerAddress == challengeAcceptorAddress, \"Winner address does not belong to either player of the game\");\n    //     } else {\n    //         require(false, \"Action invalid.\");\n    //     }\n    //     _;\n    // }\n\n    mapping(string => address) private _challengerMap;\n    mapping(string => address) private _opponentMap;\n    mapping(string => address) private _winnersMap;\n\n    uint private _baseGameFee = Helpers.GAME_FEE;\n    IERC20 private _token = new ERC20(\"ether\", \"ETH\");\n    NFTContract private nftContract = new NFTContract(address(this));\n    \n    /**\n     * @dev Call this to get the current balance of \n     */\n    function getContractBalance() external view returns (uint) {\n        return address(this).balance;\n    }\n    \n    /**\n     * @dev Call this to get the current `_baseGameFee` \n     */\n    function getBaseGameFee() external view returns (uint) {\n        return _baseGameFee;\n    }\n    \n    /**\n     * @dev Call this to update the current base game fee. This method can only be called via owner of this contract.\n     *\n     * @param newGameFee new fee value to be used for creating a new game.\n     */\n    function updateBaseGameFees(uint newGameFee) external onlyOwner() {\n      _baseGameFee = newGameFee;\n    }\n    \n    /**\n    * @dev Create a new game by depositing a gameFee.\n    * \n    */\n    function createGame(string memory gameId) external payable nonReentrant {\n        // Check and verify if the caller address is valid\n        require(msg.sender != Helpers.nullAddress(), \"Caller address is not valid\");\n        address challengerAddress = _challengerMap[gameId];\n        bool gameExists = challengerAddress != Helpers.nullAddress();\n        // Check and verify if a game with specified ID  already exists.\n        require(!gameExists, \"A game with specified ID already exists\");\n        // Check and verify if a challenger address does not already exists.\n        bool challengerExists = challengerAddress != Helpers.nullAddress();\n        require(!challengerExists, \"Challenger address already exists\");\n        // Check and verify if a value equal to or greater than `_baseGameFee` was sent along with the transaction.\n        require(msg.value >= _baseGameFee, \"Sent value should be equal to game fee\");\n        // Check and verify if the challenge acceptor address exist\n        bool challengeAcceptorNotExists = _opponentMap[gameId] == Helpers.nullAddress();\n        require(challengeAcceptorNotExists, \"Challenge acceptor address already exists\");\n        bool winnerExists = _winnersMap[gameId] != Helpers.nullAddress();\n        // Check and verify if the winner address is not set.\n        require(!winnerExists, \"Winner address cannot be set before the game starts\");\n        // Create a new game after the funds are locked\n        _createGame(gameId);\n        // Safe increase allowance for this contract to spend `_baseGameFee` after the game is finished\n        SafeERC20.safeIncreaseAllowance(_token, address(this), msg.value);\n        // Emit new game event\n        emit GameCreated(msg.sender, gameId);\n    }\n    \n    /**\n     * @dev Call this to join a game with provided `gameId`. Throw an exeption if no game for this `gameId` exists.\n     * \n     * @param gameId id of game to be ended\n     */\n    function joinGame(string memory gameId) external payable nonReentrant {\n        // Check and verify if the caller address is valid\n        require(msg.sender != Helpers.nullAddress(), \"Caller address is not valid\");\n        address challengerAddress = _challengerMap[gameId];\n        bool gameExists = challengerAddress != Helpers.nullAddress();\n        // Check and verify if a game with specified ID  already exists.\n        require(gameExists, \"A game with specified ID does not exist\");\n        // Check and verify if a challenger address exists.\n        bool challengerExists = challengerAddress != Helpers.nullAddress();\n        require(challengerExists, \"Challenger address does not exists\");\n        // Check and verify if a value equal to or greater than `_baseGameFee` was sent along with the transaction.\n        require(msg.value >= _baseGameFee, \"Sent value should be equal to game fee\");\n        // Check and verify if the challenge acceptor address exist\n        bool challengeAcceptorExists = _opponentMap[gameId] != Helpers.nullAddress();\n        require(!challengeAcceptorExists, \"Challenge acceptor address already exists\");\n        // Check and verify if both player address are unique\n        require(challengerAddress != msg.sender, \"Both player address should be unique\");\n        // Check and verify if the winner address is not set.\n        bool winnerExists = _winnersMap[gameId] != Helpers.nullAddress();\n        require(!winnerExists, \"Winner address cannot be set before the game starts\");\n        // Join an already created game with specified `gameId`\n        _joinGame(gameId);\n        // Safe increase allowance for this contract to spend `msg.value` after the game is finished\n        SafeERC20.safeIncreaseAllowance(_token, address(this), msg.value);\n        // Emit game joined event\n        emit GameJoined(challengerAddress, msg.sender, gameId);\n    }\n    \n    /**\n     * @dev Call this to end a game with specified `gameId`. A game would end either when one player wins or if no \n     * player accepts a challenge within 30 minutes.\n     * \n     * @param gameId id of this game\n     * @param gameTime time taken (in seconds) to win the game\n     */\n    function endGame(\n        string memory gameId,\n        uint gameTime\n    ) external nonReentrant onlyOwner() {\n        // Check and verify if the caller address is valid\n        require(msg.sender != Helpers.nullAddress(), \"Caller address is not valid\");\n        address challengerAddress = _challengerMap[gameId];\n        bool gameExists = challengerAddress != Helpers.nullAddress();\n        // Check and verify if a game with specified ID  already exists.\n        require(gameExists, \"A game with specified ID does not exist\");\n        // Check and verify if a challenger address exists.\n        bool challengerExists = challengerAddress != Helpers.nullAddress();\n        require(challengerExists, \"Challenger address does not exists\");\n        // Check and verify if the challenge acceptor address exist\n        bool challengeAcceptorExists = _opponentMap[gameId] != Helpers.nullAddress();\n        require(challengeAcceptorExists, \"Challenge acceptor address does not exists\");\n        // Check and verify if the winner address is not set.\n        bool winnerExists = _winnersMap[gameId] != Helpers.nullAddress();\n        require(!winnerExists, \"Winner address already exists\");\n        // Check and verify if the `winTime` is greater than 0\n        require(gameTime > 0, \"WinTime has to be greater than 0\");\n        // End the current game and update winner address\n        _endGame(msg.sender, gameId);\n        // Emit end game event\n        emit GameEnd(msg.sender, gameId);\n    }\n    \n    /**\n     * @dev Winner of the game can call this to mint the winning card NFT.\n     *\n     * @param gameId id of this game\n     * @param isRare true if this NFT is rare\n     * @param winTime time taken (in seconds) to win the game\n     * @param killScore count of longest consecutive kill by one single piece on board\n     */\n    function mintNFT(\n        string memory gameId, \n        bool isRare,\n        uint winTime, \n        uint8 killScore\n    ) external nonReentrant {\n        // Check and verify if the caller address is valid\n        require(msg.sender != Helpers.nullAddress(), \"Caller address is not valid\");\n        address challengerAddress = _challengerMap[gameId];\n        bool gameExists = challengerAddress != Helpers.nullAddress();\n        // Check and verify if a game with specified ID  already exists.\n        require(gameExists, \"A game with specified ID does not exist\");\n        // Check and verify if the challenge acceptor address exist\n        bool challengeAcceptorExists = _opponentMap[gameId] != Helpers.nullAddress();\n        require(challengeAcceptorExists, \"Challenge acceptor address is not set\");\n        address winnerAddress = _winnersMap[gameId];\n        bool winnerExists = winnerAddress != Helpers.nullAddress();\n        // Check and verify if the winner address is not set.\n        require(winnerExists, \"Winner address is not set\");\n        // Check and verify if the caller address matches to winner address\n        require(msg.sender == winnerAddress, \"Only the winner of the game can mint the NFT card\");\n        // Create and mint NFT and assign it to winner address\n        _createAndMintNFT(gameId, winnerAddress, isRare, winTime, killScore);\n    }\n    \n    /**\n     * @dev Create a new game and update the mapping for `games`.\n     * \n     * @param gameId id of game to be started\n     */\n    function _createGame(string memory gameId) private increment() {\n        _challengerMap[gameId] = msg.sender;\n    }\n    \n    /**\n     * @dev Call this to join a game with provided `gameId`.\n     * \n     * @param gameId id of game to be ended\n     */\n    function _joinGame(string memory gameId) private {\n        _opponentMap[gameId] = msg.sender;\n    }\n    \n    /**\n     * @dev Call this to set the `winnerAddress` when a game finishes\n     * \n     * @param winnerAddress address of player who won the game\n     * @param gameId id of this game\n     */\n    function _endGame(address winnerAddress, string memory gameId) private {\n        _winnersMap[gameId] = winnerAddress;\n    }\n\n    /**\n     * @dev Call this method when the game ends to create and mint NFT.\n     * \n     * @param gameId id of this game.\n     * @param winnerAddress address of player who won the game\n     * @param isRare true if this NFT is rare\n     * @param winTime time taken (in seconds) to win the game\n     * @param killScore count of longest consecutive kill by one single piece on board\n     */\n    function _createAndMintNFT(\n        string memory gameId, \n        address winnerAddress, \n        bool isRare,\n        uint winTime, \n        uint8 killScore\n    ) private {\n        // Create nft here and once created then emit NFTCreated event \n        nftContract.createAndMintToken(gameId, winTime, killScore, isRare);\n        emit NFTCreated(winnerAddress, gameId, isRare);\n    }\n}",
  "sourcePath": "/Users/saurabh-macbook/Documents/dapps/chkmate/frontend_base_dapp/contracts/GameContract.sol",
  "ast": {
    "absolutePath": "project:/contracts/GameContract.sol",
    "exportedSymbols": {
      "Address": [
        2290
      ],
      "BaseContract": [
        2990
      ],
      "Context": [
        2312
      ],
      "Counters": [
        2386
      ],
      "ERC165": [
        2613
      ],
      "ERC20": [
        689
      ],
      "ERC721": [
        1832
      ],
      "GameContract": [
        3624
      ],
      "Helpers": [
        3724
      ],
      "IERC165": [
        2625
      ],
      "IERC20": [
        767
      ],
      "IERC20Metadata": [
        792
      ],
      "IERC721": [
        1948
      ],
      "IERC721Metadata": [
        1993
      ],
      "IERC721Receiver": [
        1966
      ],
      "NFTContract": [
        4100
      ],
      "Ownable": [
        103
      ],
      "ReentrancyGuard": [
        143
      ],
      "SafeERC20": [
        1016
      ],
      "SafeMath": [
        2937
      ],
      "Strings": [
        2589
      ]
    },
    "id": 3625,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2992,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:18"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 2993,
        "nodeType": "ImportDirective",
        "scope": 3625,
        "sourceUnit": 1017,
        "src": "58:65:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 2994,
        "nodeType": "ImportDirective",
        "scope": 3625,
        "sourceUnit": 690,
        "src": "124:55:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 2995,
        "nodeType": "ImportDirective",
        "scope": 3625,
        "sourceUnit": 768,
        "src": "180:56:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 2996,
        "nodeType": "ImportDirective",
        "scope": 3625,
        "sourceUnit": 144,
        "src": "237:62:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "id": 2997,
        "nodeType": "ImportDirective",
        "scope": 3625,
        "sourceUnit": 2291,
        "src": "300:51:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2998,
        "nodeType": "ImportDirective",
        "scope": 3625,
        "sourceUnit": 104,
        "src": "352:52:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/BaseContract.sol",
        "file": "./BaseContract.sol",
        "id": 2999,
        "nodeType": "ImportDirective",
        "scope": 3625,
        "sourceUnit": 2991,
        "src": "405:28:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/NFTContract.sol",
        "file": "./NFTContract.sol",
        "id": 3000,
        "nodeType": "ImportDirective",
        "scope": 3625,
        "sourceUnit": 4101,
        "src": "434:27:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Helpers.sol",
        "file": "./Helpers.sol",
        "id": 3001,
        "nodeType": "ImportDirective",
        "scope": 3625,
        "sourceUnit": 3725,
        "src": "462:23:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3002,
              "name": "BaseContract",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2990,
              "src": "512:12:18"
            },
            "id": 3003,
            "nodeType": "InheritanceSpecifier",
            "src": "512:12:18"
          }
        ],
        "contractDependencies": [
          103,
          143,
          689,
          2312,
          2990,
          4100
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3624,
        "linearizedBaseContracts": [
          3624,
          2990,
          103,
          2312,
          143
        ],
        "name": "GameContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3007,
            "libraryName": {
              "id": 3004,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1016,
              "src": "542:9:18"
            },
            "nodeType": "UsingForDirective",
            "src": "536:27:18",
            "typeName": {
              "id": 3006,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3005,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 767,
                "src": "556:6:18"
              },
              "referencedDeclaration": 767,
              "src": "556:6:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$767",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 3010,
            "libraryName": {
              "id": 3008,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2290,
              "src": "574:7:18"
            },
            "nodeType": "UsingForDirective",
            "src": "568:26:18",
            "typeName": {
              "id": 3009,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "586:7:18",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "anonymous": false,
            "id": 3016,
            "name": "GameCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3015,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3012,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "challengerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3016,
                  "src": "622:33:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3011,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "622:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3014,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "gameId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3016,
                  "src": "657:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3013,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "657:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "621:50:18"
            },
            "src": "604:68:18"
          },
          {
            "anonymous": false,
            "id": 3024,
            "name": "GameJoined",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3023,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3018,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "challengerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3024,
                  "src": "694:33:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3017,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "694:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3020,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "challengeAcceptorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3024,
                  "src": "729:40:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3019,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "729:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3022,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "gameId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3024,
                  "src": "771:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3021,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "771:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "693:92:18"
            },
            "src": "677:109:18"
          },
          {
            "anonymous": false,
            "id": 3030,
            "name": "GameEnd",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3029,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3026,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "winnerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3030,
                  "src": "805:29:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3025,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "805:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3028,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "gameId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3030,
                  "src": "836:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3027,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "836:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "804:46:18"
            },
            "src": "791:60:18"
          },
          {
            "anonymous": false,
            "id": 3038,
            "name": "NFTCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3037,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3032,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "winnerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3038,
                  "src": "873:29:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3031,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "873:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3034,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "gameId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3038,
                  "src": "904:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3033,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "904:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3036,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "isRare",
                  "nodeType": "VariableDeclaration",
                  "scope": 3038,
                  "src": "919:11:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3035,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "919:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "872:59:18"
            },
            "src": "856:76:18"
          },
          {
            "canonicalName": "GameContract.ActionType",
            "id": 3042,
            "members": [
              {
                "id": 3039,
                "name": "CreateGame",
                "nodeType": "EnumValue",
                "src": "968:10:18"
              },
              {
                "id": 3040,
                "name": "JoinGame",
                "nodeType": "EnumValue",
                "src": "988:8:18"
              },
              {
                "id": 3041,
                "name": "EndGame",
                "nodeType": "EnumValue",
                "src": "1006:7:18"
              }
            ],
            "name": "ActionType",
            "nodeType": "EnumDefinition",
            "src": "942:77:18"
          },
          {
            "constant": false,
            "id": 3046,
            "mutability": "mutable",
            "name": "_challengerMap",
            "nodeType": "VariableDeclaration",
            "scope": 3624,
            "src": "5460:49:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 3045,
              "keyType": {
                "id": 3043,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "5468:6:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "5460:26:18",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 3044,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "5478:7:18",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3050,
            "mutability": "mutable",
            "name": "_opponentMap",
            "nodeType": "VariableDeclaration",
            "scope": 3624,
            "src": "5515:47:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 3049,
              "keyType": {
                "id": 3047,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "5523:6:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "5515:26:18",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 3048,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "5533:7:18",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3054,
            "mutability": "mutable",
            "name": "_winnersMap",
            "nodeType": "VariableDeclaration",
            "scope": 3624,
            "src": "5568:46:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 3053,
              "keyType": {
                "id": 3051,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "5576:6:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "5568:26:18",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 3052,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "5586:7:18",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3058,
            "mutability": "mutable",
            "name": "_baseGameFee",
            "nodeType": "VariableDeclaration",
            "scope": 3624,
            "src": "5621:44:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3055,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "5621:4:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "expression": {
                "id": 3056,
                "name": "Helpers",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 3724,
                "src": "5649:7:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_Helpers_$3724_$",
                  "typeString": "type(library Helpers)"
                }
              },
              "id": 3057,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "memberName": "GAME_FEE",
              "nodeType": "MemberAccess",
              "referencedDeclaration": 3634,
              "src": "5649:16:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3067,
            "mutability": "mutable",
            "name": "_token",
            "nodeType": "VariableDeclaration",
            "scope": 3624,
            "src": "5671:49:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$767",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 3060,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3059,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 767,
                "src": "5671:6:18"
              },
              "referencedDeclaration": 767,
              "src": "5671:6:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$767",
                "typeString": "contract IERC20"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "6574686572",
                  "id": 3064,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "5705:7:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_13730b0d8e1bdbdc293b62ba010b1eede56b412ea2980defabe3d0b6c7844c3a",
                    "typeString": "literal_string \"ether\""
                  },
                  "value": "ether"
                },
                {
                  "hexValue": "455448",
                  "id": 3065,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "5714:5:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_aaaebeba3810b1e6b70781f14b2d72c1cb89c0b2b320c43bb67ff79f562f5ff4",
                    "typeString": "literal_string \"ETH\""
                  },
                  "value": "ETH"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_13730b0d8e1bdbdc293b62ba010b1eede56b412ea2980defabe3d0b6c7844c3a",
                    "typeString": "literal_string \"ether\""
                  },
                  {
                    "typeIdentifier": "t_stringliteral_aaaebeba3810b1e6b70781f14b2d72c1cb89c0b2b320c43bb67ff79f562f5ff4",
                    "typeString": "literal_string \"ETH\""
                  }
                ],
                "id": 3063,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "nodeType": "NewExpression",
                "src": "5695:9:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_ERC20_$689_$",
                  "typeString": "function (string memory,string memory) returns (contract ERC20)"
                },
                "typeName": {
                  "id": 3062,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 3061,
                    "name": "ERC20",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 689,
                    "src": "5699:5:18"
                  },
                  "referencedDeclaration": 689,
                  "src": "5699:5:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$689",
                    "typeString": "contract ERC20"
                  }
                }
              },
              "id": 3066,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "5695:25:18",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$689",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3078,
            "mutability": "mutable",
            "name": "nftContract",
            "nodeType": "VariableDeclaration",
            "scope": 3624,
            "src": "5726:64:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_NFTContract_$4100",
              "typeString": "contract NFTContract"
            },
            "typeName": {
              "id": 3069,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3068,
                "name": "NFTContract",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4100,
                "src": "5726:11:18"
              },
              "referencedDeclaration": 4100,
              "src": "5726:11:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NFTContract_$4100",
                "typeString": "contract NFTContract"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "id": 3075,
                      "name": "this",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967268,
                      "src": "5784:4:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GameContract_$3624",
                        "typeString": "contract GameContract"
                      }
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_contract$_GameContract_$3624",
                        "typeString": "contract GameContract"
                      }
                    ],
                    "id": 3074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "5776:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_address_$",
                      "typeString": "type(address)"
                    },
                    "typeName": {
                      "id": 3073,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5776:7:18",
                      "typeDescriptions": {}
                    }
                  },
                  "id": 3076,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": false,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "5776:13:18",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 3072,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "nodeType": "NewExpression",
                "src": "5760:15:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_NFTContract_$4100_$",
                  "typeString": "function (address) returns (contract NFTContract)"
                },
                "typeName": {
                  "id": 3071,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 3070,
                    "name": "NFTContract",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 4100,
                    "src": "5764:11:18"
                  },
                  "referencedDeclaration": 4100,
                  "src": "5764:11:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_NFTContract_$4100",
                    "typeString": "contract NFTContract"
                  }
                }
              },
              "id": 3077,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "5760:30:18",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NFTContract_$4100",
                "typeString": "contract NFTContract"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 3090,
              "nodeType": "Block",
              "src": "5929:45:18",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 3086,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "5954:4:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GameContract_$3624",
                            "typeString": "contract GameContract"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_GameContract_$3624",
                            "typeString": "contract GameContract"
                          }
                        ],
                        "id": 3085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5946:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 3084,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5946:7:18",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3087,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5946:13:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "5946:21:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3083,
                  "id": 3089,
                  "nodeType": "Return",
                  "src": "5939:28:18"
                }
              ]
            },
            "documentation": {
              "id": 3079,
              "nodeType": "StructuredDocumentation",
              "src": "5801:64:18",
              "text": " @dev Call this to get the current balance of "
            },
            "functionSelector": "6f9fb98a",
            "id": 3091,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getContractBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3080,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5897:2:18"
            },
            "returnParameters": {
              "id": 3083,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3082,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3091,
                  "src": "5923:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3081,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5923:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5922:6:18"
            },
            "scope": 3624,
            "src": "5870:104:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3099,
              "nodeType": "Block",
              "src": "6112:36:18",
              "statements": [
                {
                  "expression": {
                    "id": 3097,
                    "name": "_baseGameFee",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3058,
                    "src": "6129:12:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3096,
                  "id": 3098,
                  "nodeType": "Return",
                  "src": "6122:19:18"
                }
              ]
            },
            "documentation": {
              "id": 3092,
              "nodeType": "StructuredDocumentation",
              "src": "5984:68:18",
              "text": " @dev Call this to get the current `_baseGameFee` "
            },
            "functionSelector": "d06894ce",
            "id": 3100,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBaseGameFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3093,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6080:2:18"
            },
            "returnParameters": {
              "id": 3096,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3095,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3100,
                  "src": "6106:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3094,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6106:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6105:6:18"
            },
            "scope": 3624,
            "src": "6057:91:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3112,
              "nodeType": "Block",
              "src": "6440:40:18",
              "statements": [
                {
                  "expression": {
                    "id": 3110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3108,
                      "name": "_baseGameFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3058,
                      "src": "6448:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3109,
                      "name": "newGameFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3103,
                      "src": "6463:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6448:25:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3111,
                  "nodeType": "ExpressionStatement",
                  "src": "6448:25:18"
                }
              ]
            },
            "documentation": {
              "id": 3101,
              "nodeType": "StructuredDocumentation",
              "src": "6158:211:18",
              "text": " @dev Call this to update the current base game fee. This method can only be called via owner of this contract.\n @param newGameFee new fee value to be used for creating a new game."
            },
            "functionSelector": "b9223488",
            "id": 3113,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 3106,
                "modifierName": {
                  "id": 3105,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "6428:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "6428:11:18"
              }
            ],
            "name": "updateBaseGameFees",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3103,
                  "mutability": "mutable",
                  "name": "newGameFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 3113,
                  "src": "6402:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3102,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6402:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6401:17:18"
            },
            "returnParameters": {
              "id": 3107,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6440:0:18"
            },
            "scope": 3624,
            "src": "6374:106:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3226,
              "nodeType": "Block",
              "src": "6638:1666:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3122,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "6715:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6715:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 3124,
                              "name": "Helpers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3724,
                              "src": "6729:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Helpers_$3724_$",
                                "typeString": "type(library Helpers)"
                              }
                            },
                            "id": 3125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nullAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3723,
                            "src": "6729:19:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                              "typeString": "function () pure returns (address)"
                            }
                          },
                          "id": 3126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6729:21:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6715:35:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c65722061646472657373206973206e6f742076616c6964",
                        "id": 3128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6752:29:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a4b892cd51309e0da45f8f3cba80a0441ed1d715f40ceaa6fcbace1bdb9e9407",
                          "typeString": "literal_string \"Caller address is not valid\""
                        },
                        "value": "Caller address is not valid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a4b892cd51309e0da45f8f3cba80a0441ed1d715f40ceaa6fcbace1bdb9e9407",
                          "typeString": "literal_string \"Caller address is not valid\""
                        }
                      ],
                      "id": 3121,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6707:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6707:75:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3130,
                  "nodeType": "ExpressionStatement",
                  "src": "6707:75:18"
                },
                {
                  "assignments": [
                    3132
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3132,
                      "mutability": "mutable",
                      "name": "challengerAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 3226,
                      "src": "6792:25:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3131,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6792:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3136,
                  "initialValue": {
                    "baseExpression": {
                      "id": 3133,
                      "name": "_challengerMap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3046,
                      "src": "6820:14:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                        "typeString": "mapping(string memory => address)"
                      }
                    },
                    "id": 3135,
                    "indexExpression": {
                      "id": 3134,
                      "name": "gameId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3116,
                      "src": "6835:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6820:22:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6792:50:18"
                },
                {
                  "assignments": [
                    3138
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3138,
                      "mutability": "mutable",
                      "name": "gameExists",
                      "nodeType": "VariableDeclaration",
                      "scope": 3226,
                      "src": "6852:15:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3137,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "6852:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3144,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3139,
                      "name": "challengerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3132,
                      "src": "6870:17:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 3140,
                          "name": "Helpers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3724,
                          "src": "6891:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Helpers_$3724_$",
                            "typeString": "type(library Helpers)"
                          }
                        },
                        "id": 3141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nullAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3723,
                        "src": "6891:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                          "typeString": "function () pure returns (address)"
                        }
                      },
                      "id": 3142,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6891:21:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6870:42:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6852:60:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7003:11:18",
                        "subExpression": {
                          "id": 3146,
                          "name": "gameExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3138,
                          "src": "7004:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "412067616d6520776974682073706563696669656420494420616c726561647920657869737473",
                        "id": 3148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7016:41:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ef530aef35b7ebd85e02b04c89bc924be091da1add3fbe37c0d633b4df1bacc7",
                          "typeString": "literal_string \"A game with specified ID already exists\""
                        },
                        "value": "A game with specified ID already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ef530aef35b7ebd85e02b04c89bc924be091da1add3fbe37c0d633b4df1bacc7",
                          "typeString": "literal_string \"A game with specified ID already exists\""
                        }
                      ],
                      "id": 3145,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6995:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6995:63:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3150,
                  "nodeType": "ExpressionStatement",
                  "src": "6995:63:18"
                },
                {
                  "assignments": [
                    3152
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3152,
                      "mutability": "mutable",
                      "name": "challengerExists",
                      "nodeType": "VariableDeclaration",
                      "scope": 3226,
                      "src": "7145:21:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3151,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7145:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3158,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3153,
                      "name": "challengerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3132,
                      "src": "7169:17:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 3154,
                          "name": "Helpers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3724,
                          "src": "7190:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Helpers_$3724_$",
                            "typeString": "type(library Helpers)"
                          }
                        },
                        "id": 3155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nullAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3723,
                        "src": "7190:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                          "typeString": "function () pure returns (address)"
                        }
                      },
                      "id": 3156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7190:21:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7169:42:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7145:66:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7229:17:18",
                        "subExpression": {
                          "id": 3160,
                          "name": "challengerExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3152,
                          "src": "7230:16:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4368616c6c656e676572206164647265737320616c726561647920657869737473",
                        "id": 3162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7248:35:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_68b39e6bbbcb2d117ba637aa448afe60242e2493a24dec03fcbf894585f88e1c",
                          "typeString": "literal_string \"Challenger address already exists\""
                        },
                        "value": "Challenger address already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_68b39e6bbbcb2d117ba637aa448afe60242e2493a24dec03fcbf894585f88e1c",
                          "typeString": "literal_string \"Challenger address already exists\""
                        }
                      ],
                      "id": 3159,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7221:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7221:63:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3164,
                  "nodeType": "ExpressionStatement",
                  "src": "7221:63:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3166,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "7418:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "7418:9:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 3168,
                          "name": "_baseGameFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3058,
                          "src": "7431:12:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7418:25:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656e742076616c75652073686f756c6420626520657175616c20746f2067616d6520666565",
                        "id": 3170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7445:40:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df6e2fc9ec87ba64888d1696bf27ec602b6cc570464535b02f1632bf6809e249",
                          "typeString": "literal_string \"Sent value should be equal to game fee\""
                        },
                        "value": "Sent value should be equal to game fee"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df6e2fc9ec87ba64888d1696bf27ec602b6cc570464535b02f1632bf6809e249",
                          "typeString": "literal_string \"Sent value should be equal to game fee\""
                        }
                      ],
                      "id": 3165,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7410:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7410:76:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3172,
                  "nodeType": "ExpressionStatement",
                  "src": "7410:76:18"
                },
                {
                  "assignments": [
                    3174
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3174,
                      "mutability": "mutable",
                      "name": "challengeAcceptorNotExists",
                      "nodeType": "VariableDeclaration",
                      "scope": 3226,
                      "src": "7564:31:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3173,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7564:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3182,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 3175,
                        "name": "_opponentMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3050,
                        "src": "7598:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 3177,
                      "indexExpression": {
                        "id": 3176,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3116,
                        "src": "7611:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7598:20:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 3178,
                          "name": "Helpers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3724,
                          "src": "7622:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Helpers_$3724_$",
                            "typeString": "type(library Helpers)"
                          }
                        },
                        "id": 3179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nullAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3723,
                        "src": "7622:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                          "typeString": "function () pure returns (address)"
                        }
                      },
                      "id": 3180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7622:21:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7598:45:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7564:79:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3184,
                        "name": "challengeAcceptorNotExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3174,
                        "src": "7661:26:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4368616c6c656e6765206163636570746f72206164647265737320616c726561647920657869737473",
                        "id": 3185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7689:43:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ea8ebe73274229663547b3915a848de50064adefc44a9d5e0584f9c02299fb2a",
                          "typeString": "literal_string \"Challenge acceptor address already exists\""
                        },
                        "value": "Challenge acceptor address already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ea8ebe73274229663547b3915a848de50064adefc44a9d5e0584f9c02299fb2a",
                          "typeString": "literal_string \"Challenge acceptor address already exists\""
                        }
                      ],
                      "id": 3183,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7653:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7653:80:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3187,
                  "nodeType": "ExpressionStatement",
                  "src": "7653:80:18"
                },
                {
                  "assignments": [
                    3189
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3189,
                      "mutability": "mutable",
                      "name": "winnerExists",
                      "nodeType": "VariableDeclaration",
                      "scope": 3226,
                      "src": "7743:17:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3188,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7743:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3197,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 3190,
                        "name": "_winnersMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3054,
                        "src": "7763:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 3192,
                      "indexExpression": {
                        "id": 3191,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3116,
                        "src": "7775:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7763:19:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 3193,
                          "name": "Helpers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3724,
                          "src": "7786:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Helpers_$3724_$",
                            "typeString": "type(library Helpers)"
                          }
                        },
                        "id": 3194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nullAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3723,
                        "src": "7786:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                          "typeString": "function () pure returns (address)"
                        }
                      },
                      "id": 3195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7786:21:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7763:44:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7743:64:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7887:13:18",
                        "subExpression": {
                          "id": 3199,
                          "name": "winnerExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3189,
                          "src": "7888:12:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57696e6e657220616464726573732063616e6e6f7420626520736574206265666f7265207468652067616d6520737461727473",
                        "id": 3201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7902:53:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0b62f49c2e764ec89feead20bcc961c1ed56ada4c0696cd3b425ec7059801051",
                          "typeString": "literal_string \"Winner address cannot be set before the game starts\""
                        },
                        "value": "Winner address cannot be set before the game starts"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0b62f49c2e764ec89feead20bcc961c1ed56ada4c0696cd3b425ec7059801051",
                          "typeString": "literal_string \"Winner address cannot be set before the game starts\""
                        }
                      ],
                      "id": 3198,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7879:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7879:77:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3203,
                  "nodeType": "ExpressionStatement",
                  "src": "7879:77:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3205,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3116,
                        "src": "8034:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3204,
                      "name": "_createGame",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3564,
                      "src": "8022:11:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 3206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8022:19:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3207,
                  "nodeType": "ExpressionStatement",
                  "src": "8022:19:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3211,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3067,
                        "src": "8187:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$767",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3214,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "8203:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GameContract_$3624",
                              "typeString": "contract GameContract"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GameContract_$3624",
                              "typeString": "contract GameContract"
                            }
                          ],
                          "id": 3213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8195:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3212,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8195:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8195:13:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3216,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8210:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "8210:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$767",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3208,
                        "name": "SafeERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1016,
                        "src": "8155:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20_$1016_$",
                          "typeString": "type(library SafeERC20)"
                        }
                      },
                      "id": 3210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeIncreaseAllowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 929,
                      "src": "8155:31:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$767_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 3218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8155:65:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3219,
                  "nodeType": "ExpressionStatement",
                  "src": "8155:65:18"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3221,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8278:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8278:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3223,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3116,
                        "src": "8290:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3220,
                      "name": "GameCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3016,
                      "src": "8266:11:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory)"
                      }
                    },
                    "id": 3224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8266:31:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3225,
                  "nodeType": "EmitStatement",
                  "src": "8261:36:18"
                }
              ]
            },
            "documentation": {
              "id": 3114,
              "nodeType": "StructuredDocumentation",
              "src": "6490:71:18",
              "text": " @dev Create a new game by depositing a gameFee.\n "
            },
            "functionSelector": "2ebc0504",
            "id": 3227,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3119,
                "modifierName": {
                  "id": 3118,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 142,
                  "src": "6625:12:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "6625:12:18"
              }
            ],
            "name": "createGame",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3116,
                  "mutability": "mutable",
                  "name": "gameId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3227,
                  "src": "6586:20:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3115,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6586:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6585:22:18"
            },
            "returnParameters": {
              "id": 3120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6638:0:18"
            },
            "scope": 3624,
            "src": "6566:1738:18",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3348,
              "nodeType": "Block",
              "src": "8568:1819:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3236,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "8645:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "8645:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 3238,
                              "name": "Helpers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3724,
                              "src": "8659:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Helpers_$3724_$",
                                "typeString": "type(library Helpers)"
                              }
                            },
                            "id": 3239,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nullAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3723,
                            "src": "8659:19:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                              "typeString": "function () pure returns (address)"
                            }
                          },
                          "id": 3240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8659:21:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8645:35:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c65722061646472657373206973206e6f742076616c6964",
                        "id": 3242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8682:29:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a4b892cd51309e0da45f8f3cba80a0441ed1d715f40ceaa6fcbace1bdb9e9407",
                          "typeString": "literal_string \"Caller address is not valid\""
                        },
                        "value": "Caller address is not valid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a4b892cd51309e0da45f8f3cba80a0441ed1d715f40ceaa6fcbace1bdb9e9407",
                          "typeString": "literal_string \"Caller address is not valid\""
                        }
                      ],
                      "id": 3235,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8637:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8637:75:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3244,
                  "nodeType": "ExpressionStatement",
                  "src": "8637:75:18"
                },
                {
                  "assignments": [
                    3246
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3246,
                      "mutability": "mutable",
                      "name": "challengerAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 3348,
                      "src": "8722:25:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3245,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8722:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3250,
                  "initialValue": {
                    "baseExpression": {
                      "id": 3247,
                      "name": "_challengerMap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3046,
                      "src": "8750:14:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                        "typeString": "mapping(string memory => address)"
                      }
                    },
                    "id": 3249,
                    "indexExpression": {
                      "id": 3248,
                      "name": "gameId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3230,
                      "src": "8765:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8750:22:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8722:50:18"
                },
                {
                  "assignments": [
                    3252
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3252,
                      "mutability": "mutable",
                      "name": "gameExists",
                      "nodeType": "VariableDeclaration",
                      "scope": 3348,
                      "src": "8782:15:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3251,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "8782:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3258,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3253,
                      "name": "challengerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3246,
                      "src": "8800:17:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 3254,
                          "name": "Helpers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3724,
                          "src": "8821:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Helpers_$3724_$",
                            "typeString": "type(library Helpers)"
                          }
                        },
                        "id": 3255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nullAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3723,
                        "src": "8821:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                          "typeString": "function () pure returns (address)"
                        }
                      },
                      "id": 3256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8821:21:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8800:42:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8782:60:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3260,
                        "name": "gameExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3252,
                        "src": "8933:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "412067616d6520776974682073706563696669656420494420646f6573206e6f74206578697374",
                        "id": 3261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8945:41:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f7dc31d37f22a0c3019738b1f6a4333a15b2f3e1259556e5217d5220d6a5c8b",
                          "typeString": "literal_string \"A game with specified ID does not exist\""
                        },
                        "value": "A game with specified ID does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f7dc31d37f22a0c3019738b1f6a4333a15b2f3e1259556e5217d5220d6a5c8b",
                          "typeString": "literal_string \"A game with specified ID does not exist\""
                        }
                      ],
                      "id": 3259,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8925:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8925:62:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3263,
                  "nodeType": "ExpressionStatement",
                  "src": "8925:62:18"
                },
                {
                  "assignments": [
                    3265
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3265,
                      "mutability": "mutable",
                      "name": "challengerExists",
                      "nodeType": "VariableDeclaration",
                      "scope": 3348,
                      "src": "9057:21:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3264,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "9057:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3271,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3266,
                      "name": "challengerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3246,
                      "src": "9081:17:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 3267,
                          "name": "Helpers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3724,
                          "src": "9102:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Helpers_$3724_$",
                            "typeString": "type(library Helpers)"
                          }
                        },
                        "id": 3268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nullAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3723,
                        "src": "9102:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                          "typeString": "function () pure returns (address)"
                        }
                      },
                      "id": 3269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9102:21:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9081:42:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9057:66:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3273,
                        "name": "challengerExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3265,
                        "src": "9141:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4368616c6c656e676572206164647265737320646f6573206e6f7420657869737473",
                        "id": 3274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9159:36:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b9473895da364a7789cb188ddf4707e9ccd10108e8b86a29f646c1c2ddedb59",
                          "typeString": "literal_string \"Challenger address does not exists\""
                        },
                        "value": "Challenger address does not exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1b9473895da364a7789cb188ddf4707e9ccd10108e8b86a29f646c1c2ddedb59",
                          "typeString": "literal_string \"Challenger address does not exists\""
                        }
                      ],
                      "id": 3272,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9133:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9133:63:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3276,
                  "nodeType": "ExpressionStatement",
                  "src": "9133:63:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3278,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "9330:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "9330:9:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 3280,
                          "name": "_baseGameFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3058,
                          "src": "9343:12:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9330:25:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656e742076616c75652073686f756c6420626520657175616c20746f2067616d6520666565",
                        "id": 3282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9357:40:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df6e2fc9ec87ba64888d1696bf27ec602b6cc570464535b02f1632bf6809e249",
                          "typeString": "literal_string \"Sent value should be equal to game fee\""
                        },
                        "value": "Sent value should be equal to game fee"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df6e2fc9ec87ba64888d1696bf27ec602b6cc570464535b02f1632bf6809e249",
                          "typeString": "literal_string \"Sent value should be equal to game fee\""
                        }
                      ],
                      "id": 3277,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9322:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9322:76:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3284,
                  "nodeType": "ExpressionStatement",
                  "src": "9322:76:18"
                },
                {
                  "assignments": [
                    3286
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3286,
                      "mutability": "mutable",
                      "name": "challengeAcceptorExists",
                      "nodeType": "VariableDeclaration",
                      "scope": 3348,
                      "src": "9476:28:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3285,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "9476:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3294,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 3287,
                        "name": "_opponentMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3050,
                        "src": "9507:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 3289,
                      "indexExpression": {
                        "id": 3288,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3230,
                        "src": "9520:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9507:20:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 3290,
                          "name": "Helpers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3724,
                          "src": "9531:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Helpers_$3724_$",
                            "typeString": "type(library Helpers)"
                          }
                        },
                        "id": 3291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nullAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3723,
                        "src": "9531:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                          "typeString": "function () pure returns (address)"
                        }
                      },
                      "id": 3292,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9531:21:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9507:45:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9476:76:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9570:24:18",
                        "subExpression": {
                          "id": 3296,
                          "name": "challengeAcceptorExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3286,
                          "src": "9571:23:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4368616c6c656e6765206163636570746f72206164647265737320616c726561647920657869737473",
                        "id": 3298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9596:43:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ea8ebe73274229663547b3915a848de50064adefc44a9d5e0584f9c02299fb2a",
                          "typeString": "literal_string \"Challenge acceptor address already exists\""
                        },
                        "value": "Challenge acceptor address already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ea8ebe73274229663547b3915a848de50064adefc44a9d5e0584f9c02299fb2a",
                          "typeString": "literal_string \"Challenge acceptor address already exists\""
                        }
                      ],
                      "id": 3295,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9562:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9562:78:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3300,
                  "nodeType": "ExpressionStatement",
                  "src": "9562:78:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3302,
                          "name": "challengerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3246,
                          "src": "9720:17:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "id": 3303,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "9741:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "9741:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9720:31:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "426f746820706c6179657220616464726573732073686f756c6420626520756e69717565",
                        "id": 3306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9753:38:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4c5d4640df8142cd1bce516517b32af75fc4f9f4196c87f10075d45756729a96",
                          "typeString": "literal_string \"Both player address should be unique\""
                        },
                        "value": "Both player address should be unique"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4c5d4640df8142cd1bce516517b32af75fc4f9f4196c87f10075d45756729a96",
                          "typeString": "literal_string \"Both player address should be unique\""
                        }
                      ],
                      "id": 3301,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9712:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9712:80:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3308,
                  "nodeType": "ExpressionStatement",
                  "src": "9712:80:18"
                },
                {
                  "assignments": [
                    3310
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3310,
                      "mutability": "mutable",
                      "name": "winnerExists",
                      "nodeType": "VariableDeclaration",
                      "scope": 3348,
                      "src": "9864:17:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3309,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "9864:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3318,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 3311,
                        "name": "_winnersMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3054,
                        "src": "9884:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 3313,
                      "indexExpression": {
                        "id": 3312,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3230,
                        "src": "9896:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9884:19:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 3314,
                          "name": "Helpers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3724,
                          "src": "9907:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Helpers_$3724_$",
                            "typeString": "type(library Helpers)"
                          }
                        },
                        "id": 3315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nullAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3723,
                        "src": "9907:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                          "typeString": "function () pure returns (address)"
                        }
                      },
                      "id": 3316,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9907:21:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9884:44:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9864:64:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9946:13:18",
                        "subExpression": {
                          "id": 3320,
                          "name": "winnerExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3310,
                          "src": "9947:12:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57696e6e657220616464726573732063616e6e6f7420626520736574206265666f7265207468652067616d6520737461727473",
                        "id": 3322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9961:53:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0b62f49c2e764ec89feead20bcc961c1ed56ada4c0696cd3b425ec7059801051",
                          "typeString": "literal_string \"Winner address cannot be set before the game starts\""
                        },
                        "value": "Winner address cannot be set before the game starts"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0b62f49c2e764ec89feead20bcc961c1ed56ada4c0696cd3b425ec7059801051",
                          "typeString": "literal_string \"Winner address cannot be set before the game starts\""
                        }
                      ],
                      "id": 3319,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9938:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9938:77:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3324,
                  "nodeType": "ExpressionStatement",
                  "src": "9938:77:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3326,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3230,
                        "src": "10099:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3325,
                      "name": "_joinGame",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3578,
                      "src": "10089:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 3327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10089:17:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3328,
                  "nodeType": "ExpressionStatement",
                  "src": "10089:17:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3332,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3067,
                        "src": "10249:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$767",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3335,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "10265:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GameContract_$3624",
                              "typeString": "contract GameContract"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GameContract_$3624",
                              "typeString": "contract GameContract"
                            }
                          ],
                          "id": 3334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10257:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3333,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10257:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10257:13:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3337,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "10272:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "10272:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$767",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3329,
                        "name": "SafeERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1016,
                        "src": "10217:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20_$1016_$",
                          "typeString": "type(library SafeERC20)"
                        }
                      },
                      "id": 3331,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeIncreaseAllowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 929,
                      "src": "10217:31:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$767_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 3339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10217:65:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3340,
                  "nodeType": "ExpressionStatement",
                  "src": "10217:65:18"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3342,
                        "name": "challengerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3246,
                        "src": "10342:17:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3343,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "10361:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10361:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3345,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3230,
                        "src": "10373:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3341,
                      "name": "GameJoined",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3024,
                      "src": "10331:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory)"
                      }
                    },
                    "id": 3346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10331:49:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3347,
                  "nodeType": "EmitStatement",
                  "src": "10326:54:18"
                }
              ]
            },
            "documentation": {
              "id": 3228,
              "nodeType": "StructuredDocumentation",
              "src": "8314:179:18",
              "text": " @dev Call this to join a game with provided `gameId`. Throw an exeption if no game for this `gameId` exists.\n \n @param gameId id of game to be ended"
            },
            "functionSelector": "3d536a2e",
            "id": 3349,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3233,
                "modifierName": {
                  "id": 3232,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 142,
                  "src": "8555:12:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "8555:12:18"
              }
            ],
            "name": "joinGame",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3231,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3230,
                  "mutability": "mutable",
                  "name": "gameId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3349,
                  "src": "8516:20:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3229,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8516:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8515:22:18"
            },
            "returnParameters": {
              "id": 3234,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8568:0:18"
            },
            "scope": 3624,
            "src": "8498:1889:18",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3453,
              "nodeType": "Block",
              "src": "10800:1377:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3362,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "10877:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "10877:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 3364,
                              "name": "Helpers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3724,
                              "src": "10891:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Helpers_$3724_$",
                                "typeString": "type(library Helpers)"
                              }
                            },
                            "id": 3365,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nullAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3723,
                            "src": "10891:19:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                              "typeString": "function () pure returns (address)"
                            }
                          },
                          "id": 3366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10891:21:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10877:35:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c65722061646472657373206973206e6f742076616c6964",
                        "id": 3368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10914:29:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a4b892cd51309e0da45f8f3cba80a0441ed1d715f40ceaa6fcbace1bdb9e9407",
                          "typeString": "literal_string \"Caller address is not valid\""
                        },
                        "value": "Caller address is not valid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a4b892cd51309e0da45f8f3cba80a0441ed1d715f40ceaa6fcbace1bdb9e9407",
                          "typeString": "literal_string \"Caller address is not valid\""
                        }
                      ],
                      "id": 3361,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10869:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10869:75:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3370,
                  "nodeType": "ExpressionStatement",
                  "src": "10869:75:18"
                },
                {
                  "assignments": [
                    3372
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3372,
                      "mutability": "mutable",
                      "name": "challengerAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 3453,
                      "src": "10954:25:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3371,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10954:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3376,
                  "initialValue": {
                    "baseExpression": {
                      "id": 3373,
                      "name": "_challengerMap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3046,
                      "src": "10982:14:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                        "typeString": "mapping(string memory => address)"
                      }
                    },
                    "id": 3375,
                    "indexExpression": {
                      "id": 3374,
                      "name": "gameId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3352,
                      "src": "10997:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10982:22:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10954:50:18"
                },
                {
                  "assignments": [
                    3378
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3378,
                      "mutability": "mutable",
                      "name": "gameExists",
                      "nodeType": "VariableDeclaration",
                      "scope": 3453,
                      "src": "11014:15:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3377,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "11014:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3384,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3379,
                      "name": "challengerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3372,
                      "src": "11032:17:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 3380,
                          "name": "Helpers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3724,
                          "src": "11053:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Helpers_$3724_$",
                            "typeString": "type(library Helpers)"
                          }
                        },
                        "id": 3381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nullAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3723,
                        "src": "11053:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                          "typeString": "function () pure returns (address)"
                        }
                      },
                      "id": 3382,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11053:21:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11032:42:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11014:60:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3386,
                        "name": "gameExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3378,
                        "src": "11165:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "412067616d6520776974682073706563696669656420494420646f6573206e6f74206578697374",
                        "id": 3387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11177:41:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f7dc31d37f22a0c3019738b1f6a4333a15b2f3e1259556e5217d5220d6a5c8b",
                          "typeString": "literal_string \"A game with specified ID does not exist\""
                        },
                        "value": "A game with specified ID does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f7dc31d37f22a0c3019738b1f6a4333a15b2f3e1259556e5217d5220d6a5c8b",
                          "typeString": "literal_string \"A game with specified ID does not exist\""
                        }
                      ],
                      "id": 3385,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11157:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11157:62:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3389,
                  "nodeType": "ExpressionStatement",
                  "src": "11157:62:18"
                },
                {
                  "assignments": [
                    3391
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3391,
                      "mutability": "mutable",
                      "name": "challengerExists",
                      "nodeType": "VariableDeclaration",
                      "scope": 3453,
                      "src": "11289:21:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3390,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "11289:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3397,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3392,
                      "name": "challengerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3372,
                      "src": "11313:17:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 3393,
                          "name": "Helpers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3724,
                          "src": "11334:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Helpers_$3724_$",
                            "typeString": "type(library Helpers)"
                          }
                        },
                        "id": 3394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nullAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3723,
                        "src": "11334:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                          "typeString": "function () pure returns (address)"
                        }
                      },
                      "id": 3395,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11334:21:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11313:42:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11289:66:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3399,
                        "name": "challengerExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3391,
                        "src": "11373:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4368616c6c656e676572206164647265737320646f6573206e6f7420657869737473",
                        "id": 3400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11391:36:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b9473895da364a7789cb188ddf4707e9ccd10108e8b86a29f646c1c2ddedb59",
                          "typeString": "literal_string \"Challenger address does not exists\""
                        },
                        "value": "Challenger address does not exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1b9473895da364a7789cb188ddf4707e9ccd10108e8b86a29f646c1c2ddedb59",
                          "typeString": "literal_string \"Challenger address does not exists\""
                        }
                      ],
                      "id": 3398,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11365:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11365:63:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3402,
                  "nodeType": "ExpressionStatement",
                  "src": "11365:63:18"
                },
                {
                  "assignments": [
                    3404
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3404,
                      "mutability": "mutable",
                      "name": "challengeAcceptorExists",
                      "nodeType": "VariableDeclaration",
                      "scope": 3453,
                      "src": "11506:28:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3403,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "11506:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3412,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 3405,
                        "name": "_opponentMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3050,
                        "src": "11537:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 3407,
                      "indexExpression": {
                        "id": 3406,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3352,
                        "src": "11550:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "11537:20:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 3408,
                          "name": "Helpers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3724,
                          "src": "11561:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Helpers_$3724_$",
                            "typeString": "type(library Helpers)"
                          }
                        },
                        "id": 3409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nullAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3723,
                        "src": "11561:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                          "typeString": "function () pure returns (address)"
                        }
                      },
                      "id": 3410,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11561:21:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11537:45:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11506:76:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3414,
                        "name": "challengeAcceptorExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3404,
                        "src": "11600:23:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4368616c6c656e6765206163636570746f72206164647265737320646f6573206e6f7420657869737473",
                        "id": 3415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11625:44:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fe06faf37cda370a654f841f9f831b8a98317fbeaa08d7b9d20865898b72e84b",
                          "typeString": "literal_string \"Challenge acceptor address does not exists\""
                        },
                        "value": "Challenge acceptor address does not exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fe06faf37cda370a654f841f9f831b8a98317fbeaa08d7b9d20865898b72e84b",
                          "typeString": "literal_string \"Challenge acceptor address does not exists\""
                        }
                      ],
                      "id": 3413,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11592:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11592:78:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3417,
                  "nodeType": "ExpressionStatement",
                  "src": "11592:78:18"
                },
                {
                  "assignments": [
                    3419
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3419,
                      "mutability": "mutable",
                      "name": "winnerExists",
                      "nodeType": "VariableDeclaration",
                      "scope": 3453,
                      "src": "11742:17:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3418,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "11742:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3427,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 3420,
                        "name": "_winnersMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3054,
                        "src": "11762:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 3422,
                      "indexExpression": {
                        "id": 3421,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3352,
                        "src": "11774:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "11762:19:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 3423,
                          "name": "Helpers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3724,
                          "src": "11785:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Helpers_$3724_$",
                            "typeString": "type(library Helpers)"
                          }
                        },
                        "id": 3424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nullAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3723,
                        "src": "11785:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                          "typeString": "function () pure returns (address)"
                        }
                      },
                      "id": 3425,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11785:21:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11762:44:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11742:64:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "11824:13:18",
                        "subExpression": {
                          "id": 3429,
                          "name": "winnerExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3419,
                          "src": "11825:12:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57696e6e6572206164647265737320616c726561647920657869737473",
                        "id": 3431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11839:31:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e847f006cd3c0cbaf5b5933b91dc31baf34d94621db9cbe303ee666bd61052a0",
                          "typeString": "literal_string \"Winner address already exists\""
                        },
                        "value": "Winner address already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e847f006cd3c0cbaf5b5933b91dc31baf34d94621db9cbe303ee666bd61052a0",
                          "typeString": "literal_string \"Winner address already exists\""
                        }
                      ],
                      "id": 3428,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11816:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11816:55:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3433,
                  "nodeType": "ExpressionStatement",
                  "src": "11816:55:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3435,
                          "name": "gameTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3354,
                          "src": "11952:8:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 3436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11963:1:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "11952:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57696e54696d652068617320746f2062652067726561746572207468616e2030",
                        "id": 3438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11966:34:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bc8d2fed5afaed2003118c6d2d57c190b97774656cbdf614096c6cb13ffe22e6",
                          "typeString": "literal_string \"WinTime has to be greater than 0\""
                        },
                        "value": "WinTime has to be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bc8d2fed5afaed2003118c6d2d57c190b97774656cbdf614096c6cb13ffe22e6",
                          "typeString": "literal_string \"WinTime has to be greater than 0\""
                        }
                      ],
                      "id": 3434,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11944:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11944:57:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3440,
                  "nodeType": "ExpressionStatement",
                  "src": "11944:57:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3442,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "12078:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12078:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3444,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3352,
                        "src": "12090:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3441,
                      "name": "_endGame",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3593,
                      "src": "12069:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory)"
                      }
                    },
                    "id": 3445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12069:28:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3446,
                  "nodeType": "ExpressionStatement",
                  "src": "12069:28:18"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3448,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "12151:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12151:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3450,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3352,
                        "src": "12163:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3447,
                      "name": "GameEnd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3030,
                      "src": "12143:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory)"
                      }
                    },
                    "id": 3451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12143:27:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3452,
                  "nodeType": "EmitStatement",
                  "src": "12138:32:18"
                }
              ]
            },
            "documentation": {
              "id": 3350,
              "nodeType": "StructuredDocumentation",
              "src": "10397:288:18",
              "text": " @dev Call this to end a game with specified `gameId`. A game would end either when one player wins or if no \n player accepts a challenge within 30 minutes.\n \n @param gameId id of this game\n @param gameTime time taken (in seconds) to win the game"
            },
            "functionSelector": "3862efbe",
            "id": 3454,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3357,
                "modifierName": {
                  "id": 3356,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 142,
                  "src": "10775:12:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "10775:12:18"
              },
              {
                "arguments": [],
                "id": 3359,
                "modifierName": {
                  "id": 3358,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "10788:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "10788:11:18"
              }
            ],
            "name": "endGame",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3355,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3352,
                  "mutability": "mutable",
                  "name": "gameId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3454,
                  "src": "10716:20:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3351,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10716:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3354,
                  "mutability": "mutable",
                  "name": "gameTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 3454,
                  "src": "10746:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3353,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "10746:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10706:59:18"
            },
            "returnParameters": {
              "id": 3360,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10800:0:18"
            },
            "scope": 3624,
            "src": "10690:1487:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3547,
              "nodeType": "Block",
              "src": "12662:1222:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3469,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "12739:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "12739:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 3471,
                              "name": "Helpers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3724,
                              "src": "12753:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Helpers_$3724_$",
                                "typeString": "type(library Helpers)"
                              }
                            },
                            "id": 3472,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nullAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3723,
                            "src": "12753:19:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                              "typeString": "function () pure returns (address)"
                            }
                          },
                          "id": 3473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12753:21:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12739:35:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c65722061646472657373206973206e6f742076616c6964",
                        "id": 3475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12776:29:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a4b892cd51309e0da45f8f3cba80a0441ed1d715f40ceaa6fcbace1bdb9e9407",
                          "typeString": "literal_string \"Caller address is not valid\""
                        },
                        "value": "Caller address is not valid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a4b892cd51309e0da45f8f3cba80a0441ed1d715f40ceaa6fcbace1bdb9e9407",
                          "typeString": "literal_string \"Caller address is not valid\""
                        }
                      ],
                      "id": 3468,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12731:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12731:75:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3477,
                  "nodeType": "ExpressionStatement",
                  "src": "12731:75:18"
                },
                {
                  "assignments": [
                    3479
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3479,
                      "mutability": "mutable",
                      "name": "challengerAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 3547,
                      "src": "12816:25:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3478,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "12816:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3483,
                  "initialValue": {
                    "baseExpression": {
                      "id": 3480,
                      "name": "_challengerMap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3046,
                      "src": "12844:14:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                        "typeString": "mapping(string memory => address)"
                      }
                    },
                    "id": 3482,
                    "indexExpression": {
                      "id": 3481,
                      "name": "gameId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3457,
                      "src": "12859:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12844:22:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12816:50:18"
                },
                {
                  "assignments": [
                    3485
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3485,
                      "mutability": "mutable",
                      "name": "gameExists",
                      "nodeType": "VariableDeclaration",
                      "scope": 3547,
                      "src": "12876:15:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3484,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "12876:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3491,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3486,
                      "name": "challengerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3479,
                      "src": "12894:17:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 3487,
                          "name": "Helpers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3724,
                          "src": "12915:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Helpers_$3724_$",
                            "typeString": "type(library Helpers)"
                          }
                        },
                        "id": 3488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nullAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3723,
                        "src": "12915:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                          "typeString": "function () pure returns (address)"
                        }
                      },
                      "id": 3489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12915:21:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12894:42:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12876:60:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3493,
                        "name": "gameExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3485,
                        "src": "13027:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "412067616d6520776974682073706563696669656420494420646f6573206e6f74206578697374",
                        "id": 3494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13039:41:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f7dc31d37f22a0c3019738b1f6a4333a15b2f3e1259556e5217d5220d6a5c8b",
                          "typeString": "literal_string \"A game with specified ID does not exist\""
                        },
                        "value": "A game with specified ID does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f7dc31d37f22a0c3019738b1f6a4333a15b2f3e1259556e5217d5220d6a5c8b",
                          "typeString": "literal_string \"A game with specified ID does not exist\""
                        }
                      ],
                      "id": 3492,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "13019:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13019:62:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3496,
                  "nodeType": "ExpressionStatement",
                  "src": "13019:62:18"
                },
                {
                  "assignments": [
                    3498
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3498,
                      "mutability": "mutable",
                      "name": "challengeAcceptorExists",
                      "nodeType": "VariableDeclaration",
                      "scope": 3547,
                      "src": "13159:28:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3497,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "13159:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3506,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 3499,
                        "name": "_opponentMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3050,
                        "src": "13190:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 3501,
                      "indexExpression": {
                        "id": 3500,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3457,
                        "src": "13203:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "13190:20:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 3502,
                          "name": "Helpers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3724,
                          "src": "13214:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Helpers_$3724_$",
                            "typeString": "type(library Helpers)"
                          }
                        },
                        "id": 3503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nullAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3723,
                        "src": "13214:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                          "typeString": "function () pure returns (address)"
                        }
                      },
                      "id": 3504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13214:21:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "13190:45:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13159:76:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3508,
                        "name": "challengeAcceptorExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3498,
                        "src": "13253:23:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4368616c6c656e6765206163636570746f722061646472657373206973206e6f7420736574",
                        "id": 3509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13278:39:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6c747a3591d8de281882c4b0bf919d0370aa943ae4c917debdd549a6f4d800e5",
                          "typeString": "literal_string \"Challenge acceptor address is not set\""
                        },
                        "value": "Challenge acceptor address is not set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6c747a3591d8de281882c4b0bf919d0370aa943ae4c917debdd549a6f4d800e5",
                          "typeString": "literal_string \"Challenge acceptor address is not set\""
                        }
                      ],
                      "id": 3507,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "13245:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13245:73:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3511,
                  "nodeType": "ExpressionStatement",
                  "src": "13245:73:18"
                },
                {
                  "assignments": [
                    3513
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3513,
                      "mutability": "mutable",
                      "name": "winnerAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 3547,
                      "src": "13328:21:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3512,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "13328:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3517,
                  "initialValue": {
                    "baseExpression": {
                      "id": 3514,
                      "name": "_winnersMap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3054,
                      "src": "13352:11:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                        "typeString": "mapping(string memory => address)"
                      }
                    },
                    "id": 3516,
                    "indexExpression": {
                      "id": 3515,
                      "name": "gameId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3457,
                      "src": "13364:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13352:19:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13328:43:18"
                },
                {
                  "assignments": [
                    3519
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3519,
                      "mutability": "mutable",
                      "name": "winnerExists",
                      "nodeType": "VariableDeclaration",
                      "scope": 3547,
                      "src": "13381:17:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3518,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "13381:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3525,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3520,
                      "name": "winnerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3513,
                      "src": "13401:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 3521,
                          "name": "Helpers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3724,
                          "src": "13418:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Helpers_$3724_$",
                            "typeString": "type(library Helpers)"
                          }
                        },
                        "id": 3522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nullAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3723,
                        "src": "13418:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                          "typeString": "function () pure returns (address)"
                        }
                      },
                      "id": 3523,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13418:21:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "13401:38:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13381:58:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3527,
                        "name": "winnerExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3519,
                        "src": "13519:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57696e6e65722061646472657373206973206e6f7420736574",
                        "id": 3528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13533:27:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_08f7f19b860a6435dcb3482da5e7773745b04bf817fd4d889727a6dd3dae8840",
                          "typeString": "literal_string \"Winner address is not set\""
                        },
                        "value": "Winner address is not set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_08f7f19b860a6435dcb3482da5e7773745b04bf817fd4d889727a6dd3dae8840",
                          "typeString": "literal_string \"Winner address is not set\""
                        }
                      ],
                      "id": 3526,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "13511:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13511:50:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3530,
                  "nodeType": "ExpressionStatement",
                  "src": "13511:50:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3532,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "13655:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3533,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "13655:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3534,
                          "name": "winnerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3513,
                          "src": "13669:13:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "13655:27:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79207468652077696e6e6572206f66207468652067616d652063616e206d696e7420746865204e46542063617264",
                        "id": 3536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13684:51:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ff18751b5f206aacdadff35ff3a51ed08756a18f98b91fa5ffe57695be6a2c19",
                          "typeString": "literal_string \"Only the winner of the game can mint the NFT card\""
                        },
                        "value": "Only the winner of the game can mint the NFT card"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ff18751b5f206aacdadff35ff3a51ed08756a18f98b91fa5ffe57695be6a2c19",
                          "typeString": "literal_string \"Only the winner of the game can mint the NFT card\""
                        }
                      ],
                      "id": 3531,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "13647:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13647:89:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3538,
                  "nodeType": "ExpressionStatement",
                  "src": "13647:89:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3540,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3457,
                        "src": "13827:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 3541,
                        "name": "winnerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3513,
                        "src": "13835:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3542,
                        "name": "isRare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3459,
                        "src": "13850:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 3543,
                        "name": "winTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3461,
                        "src": "13858:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3544,
                        "name": "killScore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3463,
                        "src": "13867:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 3539,
                      "name": "_createAndMintNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3623,
                      "src": "13809:17:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$_t_bool_$_t_uint256_$_t_uint8_$returns$__$",
                        "typeString": "function (string memory,address,bool,uint256,uint8)"
                      }
                    },
                    "id": 3545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13809:68:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3546,
                  "nodeType": "ExpressionStatement",
                  "src": "13809:68:18"
                }
              ]
            },
            "documentation": {
              "id": 3455,
              "nodeType": "StructuredDocumentation",
              "src": "12187:325:18",
              "text": " @dev Winner of the game can call this to mint the winning card NFT.\n @param gameId id of this game\n @param isRare true if this NFT is rare\n @param winTime time taken (in seconds) to win the game\n @param killScore count of longest consecutive kill by one single piece on board"
            },
            "functionSelector": "c4c5a854",
            "id": 3548,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3466,
                "modifierName": {
                  "id": 3465,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 142,
                  "src": "12649:12:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "12649:12:18"
              }
            ],
            "name": "mintNFT",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3457,
                  "mutability": "mutable",
                  "name": "gameId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3548,
                  "src": "12543:20:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3456,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "12543:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3459,
                  "mutability": "mutable",
                  "name": "isRare",
                  "nodeType": "VariableDeclaration",
                  "scope": 3548,
                  "src": "12574:11:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3458,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12574:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3461,
                  "mutability": "mutable",
                  "name": "winTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 3548,
                  "src": "12595:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3460,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "12595:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3463,
                  "mutability": "mutable",
                  "name": "killScore",
                  "nodeType": "VariableDeclaration",
                  "scope": 3548,
                  "src": "12618:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 3462,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "12618:5:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12533:106:18"
            },
            "returnParameters": {
              "id": 3467,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12662:0:18"
            },
            "scope": 3624,
            "src": "12517:1367:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3563,
              "nodeType": "Block",
              "src": "14093:52:18",
              "statements": [
                {
                  "expression": {
                    "id": 3561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3556,
                        "name": "_challengerMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3046,
                        "src": "14103:14:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 3558,
                      "indexExpression": {
                        "id": 3557,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3551,
                        "src": "14118:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "14103:22:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3559,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "14128:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3560,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "14128:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "14103:35:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3562,
                  "nodeType": "ExpressionStatement",
                  "src": "14103:35:18"
                }
              ]
            },
            "documentation": {
              "id": 3549,
              "nodeType": "StructuredDocumentation",
              "src": "13894:131:18",
              "text": " @dev Create a new game and update the mapping for `games`.\n \n @param gameId id of game to be started"
            },
            "id": 3564,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 3554,
                "modifierName": {
                  "id": 3553,
                  "name": "increment",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2978,
                  "src": "14081:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "14081:11:18"
              }
            ],
            "name": "_createGame",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3552,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3551,
                  "mutability": "mutable",
                  "name": "gameId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3564,
                  "src": "14051:20:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3550,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14051:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14050:22:18"
            },
            "returnParameters": {
              "id": 3555,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14093:0:18"
            },
            "scope": 3624,
            "src": "14030:115:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 3577,
              "nodeType": "Block",
              "src": "14333:50:18",
              "statements": [
                {
                  "expression": {
                    "id": 3575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3570,
                        "name": "_opponentMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3050,
                        "src": "14343:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 3572,
                      "indexExpression": {
                        "id": 3571,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3567,
                        "src": "14356:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "14343:20:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3573,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "14366:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3574,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "14366:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "14343:33:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3576,
                  "nodeType": "ExpressionStatement",
                  "src": "14343:33:18"
                }
              ]
            },
            "documentation": {
              "id": 3565,
              "nodeType": "StructuredDocumentation",
              "src": "14155:124:18",
              "text": " @dev Call this to join a game with provided `gameId`.\n \n @param gameId id of game to be ended"
            },
            "id": 3578,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_joinGame",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3568,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3567,
                  "mutability": "mutable",
                  "name": "gameId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3578,
                  "src": "14303:20:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3566,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14303:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14302:22:18"
            },
            "returnParameters": {
              "id": 3569,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14333:0:18"
            },
            "scope": 3624,
            "src": "14284:99:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 3592,
              "nodeType": "Block",
              "src": "14658:52:18",
              "statements": [
                {
                  "expression": {
                    "id": 3590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3586,
                        "name": "_winnersMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3054,
                        "src": "14668:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 3588,
                      "indexExpression": {
                        "id": 3587,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3583,
                        "src": "14680:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "14668:19:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3589,
                      "name": "winnerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3581,
                      "src": "14690:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "14668:35:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3591,
                  "nodeType": "ExpressionStatement",
                  "src": "14668:35:18"
                }
              ]
            },
            "documentation": {
              "id": 3579,
              "nodeType": "StructuredDocumentation",
              "src": "14393:189:18",
              "text": " @dev Call this to set the `winnerAddress` when a game finishes\n \n @param winnerAddress address of player who won the game\n @param gameId id of this game"
            },
            "id": 3593,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_endGame",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3584,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3581,
                  "mutability": "mutable",
                  "name": "winnerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3593,
                  "src": "14605:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3580,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14605:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3583,
                  "mutability": "mutable",
                  "name": "gameId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3593,
                  "src": "14628:20:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3582,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14628:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14604:45:18"
            },
            "returnParameters": {
              "id": 3585,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14658:0:18"
            },
            "scope": 3624,
            "src": "14587:123:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 3622,
              "nodeType": "Block",
              "src": "15281:211:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3610,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3596,
                        "src": "15394:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 3611,
                        "name": "winTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3602,
                        "src": "15402:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3612,
                        "name": "killScore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3604,
                        "src": "15411:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 3613,
                        "name": "isRare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3600,
                        "src": "15422:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 3607,
                        "name": "nftContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3078,
                        "src": "15363:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTContract_$4100",
                          "typeString": "contract NFTContract"
                        }
                      },
                      "id": 3609,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createAndMintToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3983,
                      "src": "15363:30:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint8_$_t_bool_$returns$__$",
                        "typeString": "function (string memory,uint256,uint8,bool) external"
                      }
                    },
                    "id": 3614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15363:66:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3615,
                  "nodeType": "ExpressionStatement",
                  "src": "15363:66:18"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3617,
                        "name": "winnerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3598,
                        "src": "15455:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3618,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3596,
                        "src": "15470:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 3619,
                        "name": "isRare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3600,
                        "src": "15478:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3616,
                      "name": "NFTCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3038,
                      "src": "15444:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,string memory,bool)"
                      }
                    },
                    "id": 3620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15444:41:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3621,
                  "nodeType": "EmitStatement",
                  "src": "15439:46:18"
                }
              ]
            },
            "documentation": {
              "id": 3594,
              "nodeType": "StructuredDocumentation",
              "src": "14716:387:18",
              "text": " @dev Call this method when the game ends to create and mint NFT.\n \n @param gameId id of this game.\n @param winnerAddress address of player who won the game\n @param isRare true if this NFT is rare\n @param winTime time taken (in seconds) to win the game\n @param killScore count of longest consecutive kill by one single piece on board"
            },
            "id": 3623,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_createAndMintNFT",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3605,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3596,
                  "mutability": "mutable",
                  "name": "gameId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3623,
                  "src": "15144:20:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3595,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "15144:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3598,
                  "mutability": "mutable",
                  "name": "winnerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3623,
                  "src": "15175:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3597,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15175:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3600,
                  "mutability": "mutable",
                  "name": "isRare",
                  "nodeType": "VariableDeclaration",
                  "scope": 3623,
                  "src": "15207:11:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3599,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "15207:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3602,
                  "mutability": "mutable",
                  "name": "winTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 3623,
                  "src": "15228:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3601,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "15228:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3604,
                  "mutability": "mutable",
                  "name": "killScore",
                  "nodeType": "VariableDeclaration",
                  "scope": 3623,
                  "src": "15251:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 3603,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "15251:5:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15134:138:18"
            },
            "returnParameters": {
              "id": 3606,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15281:0:18"
            },
            "scope": 3624,
            "src": "15108:384:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 3625,
        "src": "487:15007:18"
      }
    ],
    "src": "33:15461:18"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/GameContract.sol",
    "exportedSymbols": {
      "Address": [
        2290
      ],
      "BaseContract": [
        2990
      ],
      "Context": [
        2312
      ],
      "Counters": [
        2386
      ],
      "ERC165": [
        2613
      ],
      "ERC20": [
        689
      ],
      "ERC721": [
        1832
      ],
      "GameContract": [
        3624
      ],
      "Helpers": [
        3724
      ],
      "IERC165": [
        2625
      ],
      "IERC20": [
        767
      ],
      "IERC20Metadata": [
        792
      ],
      "IERC721": [
        1948
      ],
      "IERC721Metadata": [
        1993
      ],
      "IERC721Receiver": [
        1966
      ],
      "NFTContract": [
        4100
      ],
      "Ownable": [
        103
      ],
      "ReentrancyGuard": [
        143
      ],
      "SafeERC20": [
        1016
      ],
      "SafeMath": [
        2937
      ],
      "Strings": [
        2589
      ]
    },
    "id": 3625,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2992,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:18"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 2993,
        "nodeType": "ImportDirective",
        "scope": 3625,
        "sourceUnit": 1017,
        "src": "58:65:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 2994,
        "nodeType": "ImportDirective",
        "scope": 3625,
        "sourceUnit": 690,
        "src": "124:55:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 2995,
        "nodeType": "ImportDirective",
        "scope": 3625,
        "sourceUnit": 768,
        "src": "180:56:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 2996,
        "nodeType": "ImportDirective",
        "scope": 3625,
        "sourceUnit": 144,
        "src": "237:62:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "id": 2997,
        "nodeType": "ImportDirective",
        "scope": 3625,
        "sourceUnit": 2291,
        "src": "300:51:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2998,
        "nodeType": "ImportDirective",
        "scope": 3625,
        "sourceUnit": 104,
        "src": "352:52:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/BaseContract.sol",
        "file": "./BaseContract.sol",
        "id": 2999,
        "nodeType": "ImportDirective",
        "scope": 3625,
        "sourceUnit": 2991,
        "src": "405:28:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/NFTContract.sol",
        "file": "./NFTContract.sol",
        "id": 3000,
        "nodeType": "ImportDirective",
        "scope": 3625,
        "sourceUnit": 4101,
        "src": "434:27:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Helpers.sol",
        "file": "./Helpers.sol",
        "id": 3001,
        "nodeType": "ImportDirective",
        "scope": 3625,
        "sourceUnit": 3725,
        "src": "462:23:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3002,
              "name": "BaseContract",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2990,
              "src": "512:12:18"
            },
            "id": 3003,
            "nodeType": "InheritanceSpecifier",
            "src": "512:12:18"
          }
        ],
        "contractDependencies": [
          103,
          143,
          689,
          2312,
          2990,
          4100
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3624,
        "linearizedBaseContracts": [
          3624,
          2990,
          103,
          2312,
          143
        ],
        "name": "GameContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3007,
            "libraryName": {
              "id": 3004,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1016,
              "src": "542:9:18"
            },
            "nodeType": "UsingForDirective",
            "src": "536:27:18",
            "typeName": {
              "id": 3006,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3005,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 767,
                "src": "556:6:18"
              },
              "referencedDeclaration": 767,
              "src": "556:6:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$767",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 3010,
            "libraryName": {
              "id": 3008,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2290,
              "src": "574:7:18"
            },
            "nodeType": "UsingForDirective",
            "src": "568:26:18",
            "typeName": {
              "id": 3009,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "586:7:18",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "anonymous": false,
            "id": 3016,
            "name": "GameCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3015,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3012,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "challengerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3016,
                  "src": "622:33:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3011,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "622:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3014,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "gameId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3016,
                  "src": "657:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3013,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "657:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "621:50:18"
            },
            "src": "604:68:18"
          },
          {
            "anonymous": false,
            "id": 3024,
            "name": "GameJoined",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3023,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3018,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "challengerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3024,
                  "src": "694:33:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3017,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "694:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3020,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "challengeAcceptorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3024,
                  "src": "729:40:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3019,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "729:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3022,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "gameId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3024,
                  "src": "771:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3021,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "771:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "693:92:18"
            },
            "src": "677:109:18"
          },
          {
            "anonymous": false,
            "id": 3030,
            "name": "GameEnd",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3029,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3026,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "winnerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3030,
                  "src": "805:29:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3025,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "805:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3028,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "gameId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3030,
                  "src": "836:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3027,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "836:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "804:46:18"
            },
            "src": "791:60:18"
          },
          {
            "anonymous": false,
            "id": 3038,
            "name": "NFTCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3037,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3032,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "winnerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3038,
                  "src": "873:29:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3031,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "873:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3034,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "gameId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3038,
                  "src": "904:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3033,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "904:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3036,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "isRare",
                  "nodeType": "VariableDeclaration",
                  "scope": 3038,
                  "src": "919:11:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3035,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "919:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "872:59:18"
            },
            "src": "856:76:18"
          },
          {
            "canonicalName": "GameContract.ActionType",
            "id": 3042,
            "members": [
              {
                "id": 3039,
                "name": "CreateGame",
                "nodeType": "EnumValue",
                "src": "968:10:18"
              },
              {
                "id": 3040,
                "name": "JoinGame",
                "nodeType": "EnumValue",
                "src": "988:8:18"
              },
              {
                "id": 3041,
                "name": "EndGame",
                "nodeType": "EnumValue",
                "src": "1006:7:18"
              }
            ],
            "name": "ActionType",
            "nodeType": "EnumDefinition",
            "src": "942:77:18"
          },
          {
            "constant": false,
            "id": 3046,
            "mutability": "mutable",
            "name": "_challengerMap",
            "nodeType": "VariableDeclaration",
            "scope": 3624,
            "src": "5460:49:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 3045,
              "keyType": {
                "id": 3043,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "5468:6:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "5460:26:18",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 3044,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "5478:7:18",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3050,
            "mutability": "mutable",
            "name": "_opponentMap",
            "nodeType": "VariableDeclaration",
            "scope": 3624,
            "src": "5515:47:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 3049,
              "keyType": {
                "id": 3047,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "5523:6:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "5515:26:18",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 3048,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "5533:7:18",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3054,
            "mutability": "mutable",
            "name": "_winnersMap",
            "nodeType": "VariableDeclaration",
            "scope": 3624,
            "src": "5568:46:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 3053,
              "keyType": {
                "id": 3051,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "5576:6:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "5568:26:18",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 3052,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "5586:7:18",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3058,
            "mutability": "mutable",
            "name": "_baseGameFee",
            "nodeType": "VariableDeclaration",
            "scope": 3624,
            "src": "5621:44:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3055,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "5621:4:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "expression": {
                "id": 3056,
                "name": "Helpers",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 3724,
                "src": "5649:7:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_Helpers_$3724_$",
                  "typeString": "type(library Helpers)"
                }
              },
              "id": 3057,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "memberName": "GAME_FEE",
              "nodeType": "MemberAccess",
              "referencedDeclaration": 3634,
              "src": "5649:16:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3067,
            "mutability": "mutable",
            "name": "_token",
            "nodeType": "VariableDeclaration",
            "scope": 3624,
            "src": "5671:49:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$767",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 3060,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3059,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 767,
                "src": "5671:6:18"
              },
              "referencedDeclaration": 767,
              "src": "5671:6:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$767",
                "typeString": "contract IERC20"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "6574686572",
                  "id": 3064,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "5705:7:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_13730b0d8e1bdbdc293b62ba010b1eede56b412ea2980defabe3d0b6c7844c3a",
                    "typeString": "literal_string \"ether\""
                  },
                  "value": "ether"
                },
                {
                  "hexValue": "455448",
                  "id": 3065,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "5714:5:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_aaaebeba3810b1e6b70781f14b2d72c1cb89c0b2b320c43bb67ff79f562f5ff4",
                    "typeString": "literal_string \"ETH\""
                  },
                  "value": "ETH"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_13730b0d8e1bdbdc293b62ba010b1eede56b412ea2980defabe3d0b6c7844c3a",
                    "typeString": "literal_string \"ether\""
                  },
                  {
                    "typeIdentifier": "t_stringliteral_aaaebeba3810b1e6b70781f14b2d72c1cb89c0b2b320c43bb67ff79f562f5ff4",
                    "typeString": "literal_string \"ETH\""
                  }
                ],
                "id": 3063,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "nodeType": "NewExpression",
                "src": "5695:9:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_ERC20_$689_$",
                  "typeString": "function (string memory,string memory) returns (contract ERC20)"
                },
                "typeName": {
                  "id": 3062,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 3061,
                    "name": "ERC20",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 689,
                    "src": "5699:5:18"
                  },
                  "referencedDeclaration": 689,
                  "src": "5699:5:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$689",
                    "typeString": "contract ERC20"
                  }
                }
              },
              "id": 3066,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "5695:25:18",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$689",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3078,
            "mutability": "mutable",
            "name": "nftContract",
            "nodeType": "VariableDeclaration",
            "scope": 3624,
            "src": "5726:64:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_NFTContract_$4100",
              "typeString": "contract NFTContract"
            },
            "typeName": {
              "id": 3069,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3068,
                "name": "NFTContract",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4100,
                "src": "5726:11:18"
              },
              "referencedDeclaration": 4100,
              "src": "5726:11:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NFTContract_$4100",
                "typeString": "contract NFTContract"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "id": 3075,
                      "name": "this",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967268,
                      "src": "5784:4:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GameContract_$3624",
                        "typeString": "contract GameContract"
                      }
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_contract$_GameContract_$3624",
                        "typeString": "contract GameContract"
                      }
                    ],
                    "id": 3074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "5776:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_address_$",
                      "typeString": "type(address)"
                    },
                    "typeName": {
                      "id": 3073,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5776:7:18",
                      "typeDescriptions": {}
                    }
                  },
                  "id": 3076,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": false,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "5776:13:18",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 3072,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "nodeType": "NewExpression",
                "src": "5760:15:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_NFTContract_$4100_$",
                  "typeString": "function (address) returns (contract NFTContract)"
                },
                "typeName": {
                  "id": 3071,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 3070,
                    "name": "NFTContract",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 4100,
                    "src": "5764:11:18"
                  },
                  "referencedDeclaration": 4100,
                  "src": "5764:11:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_NFTContract_$4100",
                    "typeString": "contract NFTContract"
                  }
                }
              },
              "id": 3077,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "5760:30:18",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NFTContract_$4100",
                "typeString": "contract NFTContract"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 3090,
              "nodeType": "Block",
              "src": "5929:45:18",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 3086,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "5954:4:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GameContract_$3624",
                            "typeString": "contract GameContract"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_GameContract_$3624",
                            "typeString": "contract GameContract"
                          }
                        ],
                        "id": 3085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5946:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 3084,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5946:7:18",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3087,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5946:13:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "5946:21:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3083,
                  "id": 3089,
                  "nodeType": "Return",
                  "src": "5939:28:18"
                }
              ]
            },
            "documentation": {
              "id": 3079,
              "nodeType": "StructuredDocumentation",
              "src": "5801:64:18",
              "text": " @dev Call this to get the current balance of "
            },
            "functionSelector": "6f9fb98a",
            "id": 3091,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getContractBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3080,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5897:2:18"
            },
            "returnParameters": {
              "id": 3083,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3082,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3091,
                  "src": "5923:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3081,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5923:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5922:6:18"
            },
            "scope": 3624,
            "src": "5870:104:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3099,
              "nodeType": "Block",
              "src": "6112:36:18",
              "statements": [
                {
                  "expression": {
                    "id": 3097,
                    "name": "_baseGameFee",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3058,
                    "src": "6129:12:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3096,
                  "id": 3098,
                  "nodeType": "Return",
                  "src": "6122:19:18"
                }
              ]
            },
            "documentation": {
              "id": 3092,
              "nodeType": "StructuredDocumentation",
              "src": "5984:68:18",
              "text": " @dev Call this to get the current `_baseGameFee` "
            },
            "functionSelector": "d06894ce",
            "id": 3100,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBaseGameFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3093,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6080:2:18"
            },
            "returnParameters": {
              "id": 3096,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3095,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3100,
                  "src": "6106:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3094,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6106:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6105:6:18"
            },
            "scope": 3624,
            "src": "6057:91:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3112,
              "nodeType": "Block",
              "src": "6440:40:18",
              "statements": [
                {
                  "expression": {
                    "id": 3110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3108,
                      "name": "_baseGameFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3058,
                      "src": "6448:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3109,
                      "name": "newGameFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3103,
                      "src": "6463:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6448:25:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3111,
                  "nodeType": "ExpressionStatement",
                  "src": "6448:25:18"
                }
              ]
            },
            "documentation": {
              "id": 3101,
              "nodeType": "StructuredDocumentation",
              "src": "6158:211:18",
              "text": " @dev Call this to update the current base game fee. This method can only be called via owner of this contract.\n @param newGameFee new fee value to be used for creating a new game."
            },
            "functionSelector": "b9223488",
            "id": 3113,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 3106,
                "modifierName": {
                  "id": 3105,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "6428:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "6428:11:18"
              }
            ],
            "name": "updateBaseGameFees",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3103,
                  "mutability": "mutable",
                  "name": "newGameFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 3113,
                  "src": "6402:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3102,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6402:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6401:17:18"
            },
            "returnParameters": {
              "id": 3107,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6440:0:18"
            },
            "scope": 3624,
            "src": "6374:106:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3226,
              "nodeType": "Block",
              "src": "6638:1666:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3122,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "6715:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6715:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 3124,
                              "name": "Helpers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3724,
                              "src": "6729:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Helpers_$3724_$",
                                "typeString": "type(library Helpers)"
                              }
                            },
                            "id": 3125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nullAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3723,
                            "src": "6729:19:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                              "typeString": "function () pure returns (address)"
                            }
                          },
                          "id": 3126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6729:21:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6715:35:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c65722061646472657373206973206e6f742076616c6964",
                        "id": 3128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6752:29:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a4b892cd51309e0da45f8f3cba80a0441ed1d715f40ceaa6fcbace1bdb9e9407",
                          "typeString": "literal_string \"Caller address is not valid\""
                        },
                        "value": "Caller address is not valid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a4b892cd51309e0da45f8f3cba80a0441ed1d715f40ceaa6fcbace1bdb9e9407",
                          "typeString": "literal_string \"Caller address is not valid\""
                        }
                      ],
                      "id": 3121,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6707:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6707:75:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3130,
                  "nodeType": "ExpressionStatement",
                  "src": "6707:75:18"
                },
                {
                  "assignments": [
                    3132
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3132,
                      "mutability": "mutable",
                      "name": "challengerAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 3226,
                      "src": "6792:25:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3131,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6792:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3136,
                  "initialValue": {
                    "baseExpression": {
                      "id": 3133,
                      "name": "_challengerMap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3046,
                      "src": "6820:14:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                        "typeString": "mapping(string memory => address)"
                      }
                    },
                    "id": 3135,
                    "indexExpression": {
                      "id": 3134,
                      "name": "gameId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3116,
                      "src": "6835:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6820:22:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6792:50:18"
                },
                {
                  "assignments": [
                    3138
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3138,
                      "mutability": "mutable",
                      "name": "gameExists",
                      "nodeType": "VariableDeclaration",
                      "scope": 3226,
                      "src": "6852:15:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3137,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "6852:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3144,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3139,
                      "name": "challengerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3132,
                      "src": "6870:17:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 3140,
                          "name": "Helpers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3724,
                          "src": "6891:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Helpers_$3724_$",
                            "typeString": "type(library Helpers)"
                          }
                        },
                        "id": 3141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nullAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3723,
                        "src": "6891:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                          "typeString": "function () pure returns (address)"
                        }
                      },
                      "id": 3142,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6891:21:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6870:42:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6852:60:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7003:11:18",
                        "subExpression": {
                          "id": 3146,
                          "name": "gameExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3138,
                          "src": "7004:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "412067616d6520776974682073706563696669656420494420616c726561647920657869737473",
                        "id": 3148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7016:41:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ef530aef35b7ebd85e02b04c89bc924be091da1add3fbe37c0d633b4df1bacc7",
                          "typeString": "literal_string \"A game with specified ID already exists\""
                        },
                        "value": "A game with specified ID already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ef530aef35b7ebd85e02b04c89bc924be091da1add3fbe37c0d633b4df1bacc7",
                          "typeString": "literal_string \"A game with specified ID already exists\""
                        }
                      ],
                      "id": 3145,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6995:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6995:63:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3150,
                  "nodeType": "ExpressionStatement",
                  "src": "6995:63:18"
                },
                {
                  "assignments": [
                    3152
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3152,
                      "mutability": "mutable",
                      "name": "challengerExists",
                      "nodeType": "VariableDeclaration",
                      "scope": 3226,
                      "src": "7145:21:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3151,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7145:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3158,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3153,
                      "name": "challengerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3132,
                      "src": "7169:17:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 3154,
                          "name": "Helpers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3724,
                          "src": "7190:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Helpers_$3724_$",
                            "typeString": "type(library Helpers)"
                          }
                        },
                        "id": 3155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nullAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3723,
                        "src": "7190:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                          "typeString": "function () pure returns (address)"
                        }
                      },
                      "id": 3156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7190:21:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7169:42:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7145:66:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7229:17:18",
                        "subExpression": {
                          "id": 3160,
                          "name": "challengerExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3152,
                          "src": "7230:16:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4368616c6c656e676572206164647265737320616c726561647920657869737473",
                        "id": 3162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7248:35:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_68b39e6bbbcb2d117ba637aa448afe60242e2493a24dec03fcbf894585f88e1c",
                          "typeString": "literal_string \"Challenger address already exists\""
                        },
                        "value": "Challenger address already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_68b39e6bbbcb2d117ba637aa448afe60242e2493a24dec03fcbf894585f88e1c",
                          "typeString": "literal_string \"Challenger address already exists\""
                        }
                      ],
                      "id": 3159,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7221:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7221:63:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3164,
                  "nodeType": "ExpressionStatement",
                  "src": "7221:63:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3166,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "7418:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "7418:9:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 3168,
                          "name": "_baseGameFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3058,
                          "src": "7431:12:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7418:25:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656e742076616c75652073686f756c6420626520657175616c20746f2067616d6520666565",
                        "id": 3170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7445:40:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df6e2fc9ec87ba64888d1696bf27ec602b6cc570464535b02f1632bf6809e249",
                          "typeString": "literal_string \"Sent value should be equal to game fee\""
                        },
                        "value": "Sent value should be equal to game fee"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df6e2fc9ec87ba64888d1696bf27ec602b6cc570464535b02f1632bf6809e249",
                          "typeString": "literal_string \"Sent value should be equal to game fee\""
                        }
                      ],
                      "id": 3165,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7410:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7410:76:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3172,
                  "nodeType": "ExpressionStatement",
                  "src": "7410:76:18"
                },
                {
                  "assignments": [
                    3174
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3174,
                      "mutability": "mutable",
                      "name": "challengeAcceptorNotExists",
                      "nodeType": "VariableDeclaration",
                      "scope": 3226,
                      "src": "7564:31:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3173,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7564:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3182,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 3175,
                        "name": "_opponentMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3050,
                        "src": "7598:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 3177,
                      "indexExpression": {
                        "id": 3176,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3116,
                        "src": "7611:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7598:20:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 3178,
                          "name": "Helpers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3724,
                          "src": "7622:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Helpers_$3724_$",
                            "typeString": "type(library Helpers)"
                          }
                        },
                        "id": 3179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nullAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3723,
                        "src": "7622:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                          "typeString": "function () pure returns (address)"
                        }
                      },
                      "id": 3180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7622:21:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7598:45:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7564:79:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3184,
                        "name": "challengeAcceptorNotExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3174,
                        "src": "7661:26:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4368616c6c656e6765206163636570746f72206164647265737320616c726561647920657869737473",
                        "id": 3185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7689:43:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ea8ebe73274229663547b3915a848de50064adefc44a9d5e0584f9c02299fb2a",
                          "typeString": "literal_string \"Challenge acceptor address already exists\""
                        },
                        "value": "Challenge acceptor address already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ea8ebe73274229663547b3915a848de50064adefc44a9d5e0584f9c02299fb2a",
                          "typeString": "literal_string \"Challenge acceptor address already exists\""
                        }
                      ],
                      "id": 3183,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7653:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7653:80:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3187,
                  "nodeType": "ExpressionStatement",
                  "src": "7653:80:18"
                },
                {
                  "assignments": [
                    3189
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3189,
                      "mutability": "mutable",
                      "name": "winnerExists",
                      "nodeType": "VariableDeclaration",
                      "scope": 3226,
                      "src": "7743:17:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3188,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7743:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3197,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 3190,
                        "name": "_winnersMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3054,
                        "src": "7763:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 3192,
                      "indexExpression": {
                        "id": 3191,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3116,
                        "src": "7775:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7763:19:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 3193,
                          "name": "Helpers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3724,
                          "src": "7786:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Helpers_$3724_$",
                            "typeString": "type(library Helpers)"
                          }
                        },
                        "id": 3194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nullAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3723,
                        "src": "7786:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                          "typeString": "function () pure returns (address)"
                        }
                      },
                      "id": 3195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7786:21:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7763:44:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7743:64:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7887:13:18",
                        "subExpression": {
                          "id": 3199,
                          "name": "winnerExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3189,
                          "src": "7888:12:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57696e6e657220616464726573732063616e6e6f7420626520736574206265666f7265207468652067616d6520737461727473",
                        "id": 3201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7902:53:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0b62f49c2e764ec89feead20bcc961c1ed56ada4c0696cd3b425ec7059801051",
                          "typeString": "literal_string \"Winner address cannot be set before the game starts\""
                        },
                        "value": "Winner address cannot be set before the game starts"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0b62f49c2e764ec89feead20bcc961c1ed56ada4c0696cd3b425ec7059801051",
                          "typeString": "literal_string \"Winner address cannot be set before the game starts\""
                        }
                      ],
                      "id": 3198,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7879:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7879:77:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3203,
                  "nodeType": "ExpressionStatement",
                  "src": "7879:77:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3205,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3116,
                        "src": "8034:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3204,
                      "name": "_createGame",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3564,
                      "src": "8022:11:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 3206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8022:19:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3207,
                  "nodeType": "ExpressionStatement",
                  "src": "8022:19:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3211,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3067,
                        "src": "8187:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$767",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3214,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "8203:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GameContract_$3624",
                              "typeString": "contract GameContract"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GameContract_$3624",
                              "typeString": "contract GameContract"
                            }
                          ],
                          "id": 3213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8195:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3212,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8195:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8195:13:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3216,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8210:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "8210:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$767",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3208,
                        "name": "SafeERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1016,
                        "src": "8155:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20_$1016_$",
                          "typeString": "type(library SafeERC20)"
                        }
                      },
                      "id": 3210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeIncreaseAllowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 929,
                      "src": "8155:31:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$767_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 3218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8155:65:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3219,
                  "nodeType": "ExpressionStatement",
                  "src": "8155:65:18"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3221,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8278:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8278:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3223,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3116,
                        "src": "8290:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3220,
                      "name": "GameCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3016,
                      "src": "8266:11:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory)"
                      }
                    },
                    "id": 3224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8266:31:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3225,
                  "nodeType": "EmitStatement",
                  "src": "8261:36:18"
                }
              ]
            },
            "documentation": {
              "id": 3114,
              "nodeType": "StructuredDocumentation",
              "src": "6490:71:18",
              "text": " @dev Create a new game by depositing a gameFee.\n "
            },
            "functionSelector": "2ebc0504",
            "id": 3227,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3119,
                "modifierName": {
                  "id": 3118,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 142,
                  "src": "6625:12:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "6625:12:18"
              }
            ],
            "name": "createGame",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3116,
                  "mutability": "mutable",
                  "name": "gameId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3227,
                  "src": "6586:20:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3115,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6586:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6585:22:18"
            },
            "returnParameters": {
              "id": 3120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6638:0:18"
            },
            "scope": 3624,
            "src": "6566:1738:18",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3348,
              "nodeType": "Block",
              "src": "8568:1819:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3236,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "8645:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "8645:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 3238,
                              "name": "Helpers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3724,
                              "src": "8659:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Helpers_$3724_$",
                                "typeString": "type(library Helpers)"
                              }
                            },
                            "id": 3239,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nullAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3723,
                            "src": "8659:19:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                              "typeString": "function () pure returns (address)"
                            }
                          },
                          "id": 3240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8659:21:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8645:35:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c65722061646472657373206973206e6f742076616c6964",
                        "id": 3242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8682:29:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a4b892cd51309e0da45f8f3cba80a0441ed1d715f40ceaa6fcbace1bdb9e9407",
                          "typeString": "literal_string \"Caller address is not valid\""
                        },
                        "value": "Caller address is not valid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a4b892cd51309e0da45f8f3cba80a0441ed1d715f40ceaa6fcbace1bdb9e9407",
                          "typeString": "literal_string \"Caller address is not valid\""
                        }
                      ],
                      "id": 3235,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8637:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8637:75:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3244,
                  "nodeType": "ExpressionStatement",
                  "src": "8637:75:18"
                },
                {
                  "assignments": [
                    3246
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3246,
                      "mutability": "mutable",
                      "name": "challengerAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 3348,
                      "src": "8722:25:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3245,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8722:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3250,
                  "initialValue": {
                    "baseExpression": {
                      "id": 3247,
                      "name": "_challengerMap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3046,
                      "src": "8750:14:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                        "typeString": "mapping(string memory => address)"
                      }
                    },
                    "id": 3249,
                    "indexExpression": {
                      "id": 3248,
                      "name": "gameId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3230,
                      "src": "8765:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8750:22:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8722:50:18"
                },
                {
                  "assignments": [
                    3252
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3252,
                      "mutability": "mutable",
                      "name": "gameExists",
                      "nodeType": "VariableDeclaration",
                      "scope": 3348,
                      "src": "8782:15:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3251,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "8782:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3258,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3253,
                      "name": "challengerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3246,
                      "src": "8800:17:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 3254,
                          "name": "Helpers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3724,
                          "src": "8821:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Helpers_$3724_$",
                            "typeString": "type(library Helpers)"
                          }
                        },
                        "id": 3255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nullAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3723,
                        "src": "8821:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                          "typeString": "function () pure returns (address)"
                        }
                      },
                      "id": 3256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8821:21:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8800:42:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8782:60:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3260,
                        "name": "gameExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3252,
                        "src": "8933:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "412067616d6520776974682073706563696669656420494420646f6573206e6f74206578697374",
                        "id": 3261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8945:41:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f7dc31d37f22a0c3019738b1f6a4333a15b2f3e1259556e5217d5220d6a5c8b",
                          "typeString": "literal_string \"A game with specified ID does not exist\""
                        },
                        "value": "A game with specified ID does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f7dc31d37f22a0c3019738b1f6a4333a15b2f3e1259556e5217d5220d6a5c8b",
                          "typeString": "literal_string \"A game with specified ID does not exist\""
                        }
                      ],
                      "id": 3259,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8925:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8925:62:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3263,
                  "nodeType": "ExpressionStatement",
                  "src": "8925:62:18"
                },
                {
                  "assignments": [
                    3265
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3265,
                      "mutability": "mutable",
                      "name": "challengerExists",
                      "nodeType": "VariableDeclaration",
                      "scope": 3348,
                      "src": "9057:21:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3264,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "9057:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3271,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3266,
                      "name": "challengerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3246,
                      "src": "9081:17:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 3267,
                          "name": "Helpers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3724,
                          "src": "9102:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Helpers_$3724_$",
                            "typeString": "type(library Helpers)"
                          }
                        },
                        "id": 3268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nullAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3723,
                        "src": "9102:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                          "typeString": "function () pure returns (address)"
                        }
                      },
                      "id": 3269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9102:21:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9081:42:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9057:66:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3273,
                        "name": "challengerExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3265,
                        "src": "9141:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4368616c6c656e676572206164647265737320646f6573206e6f7420657869737473",
                        "id": 3274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9159:36:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b9473895da364a7789cb188ddf4707e9ccd10108e8b86a29f646c1c2ddedb59",
                          "typeString": "literal_string \"Challenger address does not exists\""
                        },
                        "value": "Challenger address does not exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1b9473895da364a7789cb188ddf4707e9ccd10108e8b86a29f646c1c2ddedb59",
                          "typeString": "literal_string \"Challenger address does not exists\""
                        }
                      ],
                      "id": 3272,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9133:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9133:63:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3276,
                  "nodeType": "ExpressionStatement",
                  "src": "9133:63:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3278,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "9330:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "9330:9:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 3280,
                          "name": "_baseGameFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3058,
                          "src": "9343:12:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9330:25:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656e742076616c75652073686f756c6420626520657175616c20746f2067616d6520666565",
                        "id": 3282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9357:40:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df6e2fc9ec87ba64888d1696bf27ec602b6cc570464535b02f1632bf6809e249",
                          "typeString": "literal_string \"Sent value should be equal to game fee\""
                        },
                        "value": "Sent value should be equal to game fee"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df6e2fc9ec87ba64888d1696bf27ec602b6cc570464535b02f1632bf6809e249",
                          "typeString": "literal_string \"Sent value should be equal to game fee\""
                        }
                      ],
                      "id": 3277,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9322:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9322:76:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3284,
                  "nodeType": "ExpressionStatement",
                  "src": "9322:76:18"
                },
                {
                  "assignments": [
                    3286
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3286,
                      "mutability": "mutable",
                      "name": "challengeAcceptorExists",
                      "nodeType": "VariableDeclaration",
                      "scope": 3348,
                      "src": "9476:28:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3285,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "9476:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3294,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 3287,
                        "name": "_opponentMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3050,
                        "src": "9507:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 3289,
                      "indexExpression": {
                        "id": 3288,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3230,
                        "src": "9520:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9507:20:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 3290,
                          "name": "Helpers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3724,
                          "src": "9531:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Helpers_$3724_$",
                            "typeString": "type(library Helpers)"
                          }
                        },
                        "id": 3291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nullAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3723,
                        "src": "9531:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                          "typeString": "function () pure returns (address)"
                        }
                      },
                      "id": 3292,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9531:21:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9507:45:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9476:76:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9570:24:18",
                        "subExpression": {
                          "id": 3296,
                          "name": "challengeAcceptorExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3286,
                          "src": "9571:23:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4368616c6c656e6765206163636570746f72206164647265737320616c726561647920657869737473",
                        "id": 3298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9596:43:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ea8ebe73274229663547b3915a848de50064adefc44a9d5e0584f9c02299fb2a",
                          "typeString": "literal_string \"Challenge acceptor address already exists\""
                        },
                        "value": "Challenge acceptor address already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ea8ebe73274229663547b3915a848de50064adefc44a9d5e0584f9c02299fb2a",
                          "typeString": "literal_string \"Challenge acceptor address already exists\""
                        }
                      ],
                      "id": 3295,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9562:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9562:78:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3300,
                  "nodeType": "ExpressionStatement",
                  "src": "9562:78:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3302,
                          "name": "challengerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3246,
                          "src": "9720:17:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "id": 3303,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "9741:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "9741:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9720:31:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "426f746820706c6179657220616464726573732073686f756c6420626520756e69717565",
                        "id": 3306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9753:38:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4c5d4640df8142cd1bce516517b32af75fc4f9f4196c87f10075d45756729a96",
                          "typeString": "literal_string \"Both player address should be unique\""
                        },
                        "value": "Both player address should be unique"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4c5d4640df8142cd1bce516517b32af75fc4f9f4196c87f10075d45756729a96",
                          "typeString": "literal_string \"Both player address should be unique\""
                        }
                      ],
                      "id": 3301,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9712:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9712:80:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3308,
                  "nodeType": "ExpressionStatement",
                  "src": "9712:80:18"
                },
                {
                  "assignments": [
                    3310
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3310,
                      "mutability": "mutable",
                      "name": "winnerExists",
                      "nodeType": "VariableDeclaration",
                      "scope": 3348,
                      "src": "9864:17:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3309,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "9864:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3318,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 3311,
                        "name": "_winnersMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3054,
                        "src": "9884:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 3313,
                      "indexExpression": {
                        "id": 3312,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3230,
                        "src": "9896:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9884:19:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 3314,
                          "name": "Helpers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3724,
                          "src": "9907:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Helpers_$3724_$",
                            "typeString": "type(library Helpers)"
                          }
                        },
                        "id": 3315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nullAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3723,
                        "src": "9907:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                          "typeString": "function () pure returns (address)"
                        }
                      },
                      "id": 3316,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9907:21:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9884:44:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9864:64:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9946:13:18",
                        "subExpression": {
                          "id": 3320,
                          "name": "winnerExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3310,
                          "src": "9947:12:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57696e6e657220616464726573732063616e6e6f7420626520736574206265666f7265207468652067616d6520737461727473",
                        "id": 3322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9961:53:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0b62f49c2e764ec89feead20bcc961c1ed56ada4c0696cd3b425ec7059801051",
                          "typeString": "literal_string \"Winner address cannot be set before the game starts\""
                        },
                        "value": "Winner address cannot be set before the game starts"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0b62f49c2e764ec89feead20bcc961c1ed56ada4c0696cd3b425ec7059801051",
                          "typeString": "literal_string \"Winner address cannot be set before the game starts\""
                        }
                      ],
                      "id": 3319,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9938:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9938:77:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3324,
                  "nodeType": "ExpressionStatement",
                  "src": "9938:77:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3326,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3230,
                        "src": "10099:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3325,
                      "name": "_joinGame",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3578,
                      "src": "10089:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 3327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10089:17:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3328,
                  "nodeType": "ExpressionStatement",
                  "src": "10089:17:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3332,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3067,
                        "src": "10249:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$767",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3335,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "10265:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GameContract_$3624",
                              "typeString": "contract GameContract"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GameContract_$3624",
                              "typeString": "contract GameContract"
                            }
                          ],
                          "id": 3334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10257:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3333,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10257:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10257:13:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3337,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "10272:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "10272:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$767",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3329,
                        "name": "SafeERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1016,
                        "src": "10217:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20_$1016_$",
                          "typeString": "type(library SafeERC20)"
                        }
                      },
                      "id": 3331,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeIncreaseAllowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 929,
                      "src": "10217:31:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$767_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 3339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10217:65:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3340,
                  "nodeType": "ExpressionStatement",
                  "src": "10217:65:18"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3342,
                        "name": "challengerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3246,
                        "src": "10342:17:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3343,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "10361:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10361:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3345,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3230,
                        "src": "10373:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3341,
                      "name": "GameJoined",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3024,
                      "src": "10331:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory)"
                      }
                    },
                    "id": 3346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10331:49:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3347,
                  "nodeType": "EmitStatement",
                  "src": "10326:54:18"
                }
              ]
            },
            "documentation": {
              "id": 3228,
              "nodeType": "StructuredDocumentation",
              "src": "8314:179:18",
              "text": " @dev Call this to join a game with provided `gameId`. Throw an exeption if no game for this `gameId` exists.\n \n @param gameId id of game to be ended"
            },
            "functionSelector": "3d536a2e",
            "id": 3349,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3233,
                "modifierName": {
                  "id": 3232,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 142,
                  "src": "8555:12:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "8555:12:18"
              }
            ],
            "name": "joinGame",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3231,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3230,
                  "mutability": "mutable",
                  "name": "gameId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3349,
                  "src": "8516:20:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3229,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8516:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8515:22:18"
            },
            "returnParameters": {
              "id": 3234,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8568:0:18"
            },
            "scope": 3624,
            "src": "8498:1889:18",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3453,
              "nodeType": "Block",
              "src": "10800:1377:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3362,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "10877:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "10877:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 3364,
                              "name": "Helpers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3724,
                              "src": "10891:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Helpers_$3724_$",
                                "typeString": "type(library Helpers)"
                              }
                            },
                            "id": 3365,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nullAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3723,
                            "src": "10891:19:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                              "typeString": "function () pure returns (address)"
                            }
                          },
                          "id": 3366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10891:21:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10877:35:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c65722061646472657373206973206e6f742076616c6964",
                        "id": 3368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10914:29:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a4b892cd51309e0da45f8f3cba80a0441ed1d715f40ceaa6fcbace1bdb9e9407",
                          "typeString": "literal_string \"Caller address is not valid\""
                        },
                        "value": "Caller address is not valid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a4b892cd51309e0da45f8f3cba80a0441ed1d715f40ceaa6fcbace1bdb9e9407",
                          "typeString": "literal_string \"Caller address is not valid\""
                        }
                      ],
                      "id": 3361,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10869:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10869:75:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3370,
                  "nodeType": "ExpressionStatement",
                  "src": "10869:75:18"
                },
                {
                  "assignments": [
                    3372
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3372,
                      "mutability": "mutable",
                      "name": "challengerAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 3453,
                      "src": "10954:25:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3371,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10954:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3376,
                  "initialValue": {
                    "baseExpression": {
                      "id": 3373,
                      "name": "_challengerMap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3046,
                      "src": "10982:14:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                        "typeString": "mapping(string memory => address)"
                      }
                    },
                    "id": 3375,
                    "indexExpression": {
                      "id": 3374,
                      "name": "gameId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3352,
                      "src": "10997:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10982:22:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10954:50:18"
                },
                {
                  "assignments": [
                    3378
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3378,
                      "mutability": "mutable",
                      "name": "gameExists",
                      "nodeType": "VariableDeclaration",
                      "scope": 3453,
                      "src": "11014:15:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3377,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "11014:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3384,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3379,
                      "name": "challengerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3372,
                      "src": "11032:17:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 3380,
                          "name": "Helpers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3724,
                          "src": "11053:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Helpers_$3724_$",
                            "typeString": "type(library Helpers)"
                          }
                        },
                        "id": 3381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nullAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3723,
                        "src": "11053:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                          "typeString": "function () pure returns (address)"
                        }
                      },
                      "id": 3382,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11053:21:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11032:42:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11014:60:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3386,
                        "name": "gameExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3378,
                        "src": "11165:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "412067616d6520776974682073706563696669656420494420646f6573206e6f74206578697374",
                        "id": 3387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11177:41:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f7dc31d37f22a0c3019738b1f6a4333a15b2f3e1259556e5217d5220d6a5c8b",
                          "typeString": "literal_string \"A game with specified ID does not exist\""
                        },
                        "value": "A game with specified ID does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f7dc31d37f22a0c3019738b1f6a4333a15b2f3e1259556e5217d5220d6a5c8b",
                          "typeString": "literal_string \"A game with specified ID does not exist\""
                        }
                      ],
                      "id": 3385,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11157:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11157:62:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3389,
                  "nodeType": "ExpressionStatement",
                  "src": "11157:62:18"
                },
                {
                  "assignments": [
                    3391
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3391,
                      "mutability": "mutable",
                      "name": "challengerExists",
                      "nodeType": "VariableDeclaration",
                      "scope": 3453,
                      "src": "11289:21:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3390,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "11289:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3397,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3392,
                      "name": "challengerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3372,
                      "src": "11313:17:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 3393,
                          "name": "Helpers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3724,
                          "src": "11334:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Helpers_$3724_$",
                            "typeString": "type(library Helpers)"
                          }
                        },
                        "id": 3394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nullAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3723,
                        "src": "11334:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                          "typeString": "function () pure returns (address)"
                        }
                      },
                      "id": 3395,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11334:21:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11313:42:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11289:66:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3399,
                        "name": "challengerExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3391,
                        "src": "11373:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4368616c6c656e676572206164647265737320646f6573206e6f7420657869737473",
                        "id": 3400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11391:36:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b9473895da364a7789cb188ddf4707e9ccd10108e8b86a29f646c1c2ddedb59",
                          "typeString": "literal_string \"Challenger address does not exists\""
                        },
                        "value": "Challenger address does not exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1b9473895da364a7789cb188ddf4707e9ccd10108e8b86a29f646c1c2ddedb59",
                          "typeString": "literal_string \"Challenger address does not exists\""
                        }
                      ],
                      "id": 3398,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11365:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11365:63:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3402,
                  "nodeType": "ExpressionStatement",
                  "src": "11365:63:18"
                },
                {
                  "assignments": [
                    3404
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3404,
                      "mutability": "mutable",
                      "name": "challengeAcceptorExists",
                      "nodeType": "VariableDeclaration",
                      "scope": 3453,
                      "src": "11506:28:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3403,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "11506:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3412,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 3405,
                        "name": "_opponentMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3050,
                        "src": "11537:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 3407,
                      "indexExpression": {
                        "id": 3406,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3352,
                        "src": "11550:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "11537:20:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 3408,
                          "name": "Helpers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3724,
                          "src": "11561:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Helpers_$3724_$",
                            "typeString": "type(library Helpers)"
                          }
                        },
                        "id": 3409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nullAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3723,
                        "src": "11561:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                          "typeString": "function () pure returns (address)"
                        }
                      },
                      "id": 3410,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11561:21:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11537:45:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11506:76:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3414,
                        "name": "challengeAcceptorExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3404,
                        "src": "11600:23:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4368616c6c656e6765206163636570746f72206164647265737320646f6573206e6f7420657869737473",
                        "id": 3415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11625:44:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fe06faf37cda370a654f841f9f831b8a98317fbeaa08d7b9d20865898b72e84b",
                          "typeString": "literal_string \"Challenge acceptor address does not exists\""
                        },
                        "value": "Challenge acceptor address does not exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fe06faf37cda370a654f841f9f831b8a98317fbeaa08d7b9d20865898b72e84b",
                          "typeString": "literal_string \"Challenge acceptor address does not exists\""
                        }
                      ],
                      "id": 3413,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11592:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11592:78:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3417,
                  "nodeType": "ExpressionStatement",
                  "src": "11592:78:18"
                },
                {
                  "assignments": [
                    3419
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3419,
                      "mutability": "mutable",
                      "name": "winnerExists",
                      "nodeType": "VariableDeclaration",
                      "scope": 3453,
                      "src": "11742:17:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3418,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "11742:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3427,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 3420,
                        "name": "_winnersMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3054,
                        "src": "11762:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 3422,
                      "indexExpression": {
                        "id": 3421,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3352,
                        "src": "11774:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "11762:19:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 3423,
                          "name": "Helpers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3724,
                          "src": "11785:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Helpers_$3724_$",
                            "typeString": "type(library Helpers)"
                          }
                        },
                        "id": 3424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nullAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3723,
                        "src": "11785:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                          "typeString": "function () pure returns (address)"
                        }
                      },
                      "id": 3425,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11785:21:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11762:44:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11742:64:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "11824:13:18",
                        "subExpression": {
                          "id": 3429,
                          "name": "winnerExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3419,
                          "src": "11825:12:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57696e6e6572206164647265737320616c726561647920657869737473",
                        "id": 3431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11839:31:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e847f006cd3c0cbaf5b5933b91dc31baf34d94621db9cbe303ee666bd61052a0",
                          "typeString": "literal_string \"Winner address already exists\""
                        },
                        "value": "Winner address already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e847f006cd3c0cbaf5b5933b91dc31baf34d94621db9cbe303ee666bd61052a0",
                          "typeString": "literal_string \"Winner address already exists\""
                        }
                      ],
                      "id": 3428,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11816:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11816:55:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3433,
                  "nodeType": "ExpressionStatement",
                  "src": "11816:55:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3435,
                          "name": "gameTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3354,
                          "src": "11952:8:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 3436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11963:1:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "11952:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57696e54696d652068617320746f2062652067726561746572207468616e2030",
                        "id": 3438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11966:34:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bc8d2fed5afaed2003118c6d2d57c190b97774656cbdf614096c6cb13ffe22e6",
                          "typeString": "literal_string \"WinTime has to be greater than 0\""
                        },
                        "value": "WinTime has to be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bc8d2fed5afaed2003118c6d2d57c190b97774656cbdf614096c6cb13ffe22e6",
                          "typeString": "literal_string \"WinTime has to be greater than 0\""
                        }
                      ],
                      "id": 3434,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11944:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11944:57:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3440,
                  "nodeType": "ExpressionStatement",
                  "src": "11944:57:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3442,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "12078:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12078:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3444,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3352,
                        "src": "12090:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3441,
                      "name": "_endGame",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3593,
                      "src": "12069:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory)"
                      }
                    },
                    "id": 3445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12069:28:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3446,
                  "nodeType": "ExpressionStatement",
                  "src": "12069:28:18"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3448,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "12151:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12151:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3450,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3352,
                        "src": "12163:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3447,
                      "name": "GameEnd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3030,
                      "src": "12143:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory)"
                      }
                    },
                    "id": 3451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12143:27:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3452,
                  "nodeType": "EmitStatement",
                  "src": "12138:32:18"
                }
              ]
            },
            "documentation": {
              "id": 3350,
              "nodeType": "StructuredDocumentation",
              "src": "10397:288:18",
              "text": " @dev Call this to end a game with specified `gameId`. A game would end either when one player wins or if no \n player accepts a challenge within 30 minutes.\n \n @param gameId id of this game\n @param gameTime time taken (in seconds) to win the game"
            },
            "functionSelector": "3862efbe",
            "id": 3454,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3357,
                "modifierName": {
                  "id": 3356,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 142,
                  "src": "10775:12:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "10775:12:18"
              },
              {
                "arguments": [],
                "id": 3359,
                "modifierName": {
                  "id": 3358,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "10788:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "10788:11:18"
              }
            ],
            "name": "endGame",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3355,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3352,
                  "mutability": "mutable",
                  "name": "gameId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3454,
                  "src": "10716:20:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3351,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10716:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3354,
                  "mutability": "mutable",
                  "name": "gameTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 3454,
                  "src": "10746:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3353,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "10746:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10706:59:18"
            },
            "returnParameters": {
              "id": 3360,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10800:0:18"
            },
            "scope": 3624,
            "src": "10690:1487:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3547,
              "nodeType": "Block",
              "src": "12662:1222:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3469,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "12739:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "12739:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 3471,
                              "name": "Helpers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3724,
                              "src": "12753:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Helpers_$3724_$",
                                "typeString": "type(library Helpers)"
                              }
                            },
                            "id": 3472,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nullAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3723,
                            "src": "12753:19:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                              "typeString": "function () pure returns (address)"
                            }
                          },
                          "id": 3473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12753:21:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12739:35:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c65722061646472657373206973206e6f742076616c6964",
                        "id": 3475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12776:29:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a4b892cd51309e0da45f8f3cba80a0441ed1d715f40ceaa6fcbace1bdb9e9407",
                          "typeString": "literal_string \"Caller address is not valid\""
                        },
                        "value": "Caller address is not valid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a4b892cd51309e0da45f8f3cba80a0441ed1d715f40ceaa6fcbace1bdb9e9407",
                          "typeString": "literal_string \"Caller address is not valid\""
                        }
                      ],
                      "id": 3468,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12731:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12731:75:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3477,
                  "nodeType": "ExpressionStatement",
                  "src": "12731:75:18"
                },
                {
                  "assignments": [
                    3479
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3479,
                      "mutability": "mutable",
                      "name": "challengerAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 3547,
                      "src": "12816:25:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3478,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "12816:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3483,
                  "initialValue": {
                    "baseExpression": {
                      "id": 3480,
                      "name": "_challengerMap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3046,
                      "src": "12844:14:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                        "typeString": "mapping(string memory => address)"
                      }
                    },
                    "id": 3482,
                    "indexExpression": {
                      "id": 3481,
                      "name": "gameId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3457,
                      "src": "12859:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12844:22:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12816:50:18"
                },
                {
                  "assignments": [
                    3485
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3485,
                      "mutability": "mutable",
                      "name": "gameExists",
                      "nodeType": "VariableDeclaration",
                      "scope": 3547,
                      "src": "12876:15:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3484,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "12876:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3491,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3486,
                      "name": "challengerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3479,
                      "src": "12894:17:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 3487,
                          "name": "Helpers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3724,
                          "src": "12915:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Helpers_$3724_$",
                            "typeString": "type(library Helpers)"
                          }
                        },
                        "id": 3488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nullAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3723,
                        "src": "12915:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                          "typeString": "function () pure returns (address)"
                        }
                      },
                      "id": 3489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12915:21:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12894:42:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12876:60:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3493,
                        "name": "gameExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3485,
                        "src": "13027:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "412067616d6520776974682073706563696669656420494420646f6573206e6f74206578697374",
                        "id": 3494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13039:41:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f7dc31d37f22a0c3019738b1f6a4333a15b2f3e1259556e5217d5220d6a5c8b",
                          "typeString": "literal_string \"A game with specified ID does not exist\""
                        },
                        "value": "A game with specified ID does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f7dc31d37f22a0c3019738b1f6a4333a15b2f3e1259556e5217d5220d6a5c8b",
                          "typeString": "literal_string \"A game with specified ID does not exist\""
                        }
                      ],
                      "id": 3492,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "13019:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13019:62:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3496,
                  "nodeType": "ExpressionStatement",
                  "src": "13019:62:18"
                },
                {
                  "assignments": [
                    3498
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3498,
                      "mutability": "mutable",
                      "name": "challengeAcceptorExists",
                      "nodeType": "VariableDeclaration",
                      "scope": 3547,
                      "src": "13159:28:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3497,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "13159:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3506,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 3499,
                        "name": "_opponentMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3050,
                        "src": "13190:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 3501,
                      "indexExpression": {
                        "id": 3500,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3457,
                        "src": "13203:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "13190:20:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 3502,
                          "name": "Helpers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3724,
                          "src": "13214:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Helpers_$3724_$",
                            "typeString": "type(library Helpers)"
                          }
                        },
                        "id": 3503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nullAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3723,
                        "src": "13214:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                          "typeString": "function () pure returns (address)"
                        }
                      },
                      "id": 3504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13214:21:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "13190:45:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13159:76:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3508,
                        "name": "challengeAcceptorExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3498,
                        "src": "13253:23:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4368616c6c656e6765206163636570746f722061646472657373206973206e6f7420736574",
                        "id": 3509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13278:39:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6c747a3591d8de281882c4b0bf919d0370aa943ae4c917debdd549a6f4d800e5",
                          "typeString": "literal_string \"Challenge acceptor address is not set\""
                        },
                        "value": "Challenge acceptor address is not set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6c747a3591d8de281882c4b0bf919d0370aa943ae4c917debdd549a6f4d800e5",
                          "typeString": "literal_string \"Challenge acceptor address is not set\""
                        }
                      ],
                      "id": 3507,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "13245:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13245:73:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3511,
                  "nodeType": "ExpressionStatement",
                  "src": "13245:73:18"
                },
                {
                  "assignments": [
                    3513
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3513,
                      "mutability": "mutable",
                      "name": "winnerAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 3547,
                      "src": "13328:21:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3512,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "13328:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3517,
                  "initialValue": {
                    "baseExpression": {
                      "id": 3514,
                      "name": "_winnersMap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3054,
                      "src": "13352:11:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                        "typeString": "mapping(string memory => address)"
                      }
                    },
                    "id": 3516,
                    "indexExpression": {
                      "id": 3515,
                      "name": "gameId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3457,
                      "src": "13364:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13352:19:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13328:43:18"
                },
                {
                  "assignments": [
                    3519
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3519,
                      "mutability": "mutable",
                      "name": "winnerExists",
                      "nodeType": "VariableDeclaration",
                      "scope": 3547,
                      "src": "13381:17:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3518,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "13381:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3525,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3520,
                      "name": "winnerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3513,
                      "src": "13401:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 3521,
                          "name": "Helpers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3724,
                          "src": "13418:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Helpers_$3724_$",
                            "typeString": "type(library Helpers)"
                          }
                        },
                        "id": 3522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nullAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3723,
                        "src": "13418:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                          "typeString": "function () pure returns (address)"
                        }
                      },
                      "id": 3523,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13418:21:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "13401:38:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13381:58:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3527,
                        "name": "winnerExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3519,
                        "src": "13519:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57696e6e65722061646472657373206973206e6f7420736574",
                        "id": 3528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13533:27:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_08f7f19b860a6435dcb3482da5e7773745b04bf817fd4d889727a6dd3dae8840",
                          "typeString": "literal_string \"Winner address is not set\""
                        },
                        "value": "Winner address is not set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_08f7f19b860a6435dcb3482da5e7773745b04bf817fd4d889727a6dd3dae8840",
                          "typeString": "literal_string \"Winner address is not set\""
                        }
                      ],
                      "id": 3526,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "13511:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13511:50:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3530,
                  "nodeType": "ExpressionStatement",
                  "src": "13511:50:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3532,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "13655:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3533,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "13655:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3534,
                          "name": "winnerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3513,
                          "src": "13669:13:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "13655:27:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79207468652077696e6e6572206f66207468652067616d652063616e206d696e7420746865204e46542063617264",
                        "id": 3536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13684:51:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ff18751b5f206aacdadff35ff3a51ed08756a18f98b91fa5ffe57695be6a2c19",
                          "typeString": "literal_string \"Only the winner of the game can mint the NFT card\""
                        },
                        "value": "Only the winner of the game can mint the NFT card"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ff18751b5f206aacdadff35ff3a51ed08756a18f98b91fa5ffe57695be6a2c19",
                          "typeString": "literal_string \"Only the winner of the game can mint the NFT card\""
                        }
                      ],
                      "id": 3531,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "13647:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13647:89:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3538,
                  "nodeType": "ExpressionStatement",
                  "src": "13647:89:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3540,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3457,
                        "src": "13827:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 3541,
                        "name": "winnerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3513,
                        "src": "13835:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3542,
                        "name": "isRare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3459,
                        "src": "13850:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 3543,
                        "name": "winTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3461,
                        "src": "13858:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3544,
                        "name": "killScore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3463,
                        "src": "13867:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 3539,
                      "name": "_createAndMintNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3623,
                      "src": "13809:17:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$_t_bool_$_t_uint256_$_t_uint8_$returns$__$",
                        "typeString": "function (string memory,address,bool,uint256,uint8)"
                      }
                    },
                    "id": 3545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13809:68:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3546,
                  "nodeType": "ExpressionStatement",
                  "src": "13809:68:18"
                }
              ]
            },
            "documentation": {
              "id": 3455,
              "nodeType": "StructuredDocumentation",
              "src": "12187:325:18",
              "text": " @dev Winner of the game can call this to mint the winning card NFT.\n @param gameId id of this game\n @param isRare true if this NFT is rare\n @param winTime time taken (in seconds) to win the game\n @param killScore count of longest consecutive kill by one single piece on board"
            },
            "functionSelector": "c4c5a854",
            "id": 3548,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3466,
                "modifierName": {
                  "id": 3465,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 142,
                  "src": "12649:12:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "12649:12:18"
              }
            ],
            "name": "mintNFT",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3457,
                  "mutability": "mutable",
                  "name": "gameId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3548,
                  "src": "12543:20:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3456,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "12543:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3459,
                  "mutability": "mutable",
                  "name": "isRare",
                  "nodeType": "VariableDeclaration",
                  "scope": 3548,
                  "src": "12574:11:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3458,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12574:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3461,
                  "mutability": "mutable",
                  "name": "winTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 3548,
                  "src": "12595:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3460,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "12595:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3463,
                  "mutability": "mutable",
                  "name": "killScore",
                  "nodeType": "VariableDeclaration",
                  "scope": 3548,
                  "src": "12618:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 3462,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "12618:5:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12533:106:18"
            },
            "returnParameters": {
              "id": 3467,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12662:0:18"
            },
            "scope": 3624,
            "src": "12517:1367:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3563,
              "nodeType": "Block",
              "src": "14093:52:18",
              "statements": [
                {
                  "expression": {
                    "id": 3561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3556,
                        "name": "_challengerMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3046,
                        "src": "14103:14:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 3558,
                      "indexExpression": {
                        "id": 3557,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3551,
                        "src": "14118:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "14103:22:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3559,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "14128:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3560,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "14128:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "14103:35:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3562,
                  "nodeType": "ExpressionStatement",
                  "src": "14103:35:18"
                }
              ]
            },
            "documentation": {
              "id": 3549,
              "nodeType": "StructuredDocumentation",
              "src": "13894:131:18",
              "text": " @dev Create a new game and update the mapping for `games`.\n \n @param gameId id of game to be started"
            },
            "id": 3564,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 3554,
                "modifierName": {
                  "id": 3553,
                  "name": "increment",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2978,
                  "src": "14081:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "14081:11:18"
              }
            ],
            "name": "_createGame",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3552,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3551,
                  "mutability": "mutable",
                  "name": "gameId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3564,
                  "src": "14051:20:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3550,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14051:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14050:22:18"
            },
            "returnParameters": {
              "id": 3555,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14093:0:18"
            },
            "scope": 3624,
            "src": "14030:115:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 3577,
              "nodeType": "Block",
              "src": "14333:50:18",
              "statements": [
                {
                  "expression": {
                    "id": 3575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3570,
                        "name": "_opponentMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3050,
                        "src": "14343:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 3572,
                      "indexExpression": {
                        "id": 3571,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3567,
                        "src": "14356:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "14343:20:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3573,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "14366:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3574,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "14366:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "14343:33:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3576,
                  "nodeType": "ExpressionStatement",
                  "src": "14343:33:18"
                }
              ]
            },
            "documentation": {
              "id": 3565,
              "nodeType": "StructuredDocumentation",
              "src": "14155:124:18",
              "text": " @dev Call this to join a game with provided `gameId`.\n \n @param gameId id of game to be ended"
            },
            "id": 3578,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_joinGame",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3568,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3567,
                  "mutability": "mutable",
                  "name": "gameId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3578,
                  "src": "14303:20:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3566,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14303:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14302:22:18"
            },
            "returnParameters": {
              "id": 3569,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14333:0:18"
            },
            "scope": 3624,
            "src": "14284:99:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 3592,
              "nodeType": "Block",
              "src": "14658:52:18",
              "statements": [
                {
                  "expression": {
                    "id": 3590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3586,
                        "name": "_winnersMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3054,
                        "src": "14668:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 3588,
                      "indexExpression": {
                        "id": 3587,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3583,
                        "src": "14680:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "14668:19:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3589,
                      "name": "winnerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3581,
                      "src": "14690:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "14668:35:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3591,
                  "nodeType": "ExpressionStatement",
                  "src": "14668:35:18"
                }
              ]
            },
            "documentation": {
              "id": 3579,
              "nodeType": "StructuredDocumentation",
              "src": "14393:189:18",
              "text": " @dev Call this to set the `winnerAddress` when a game finishes\n \n @param winnerAddress address of player who won the game\n @param gameId id of this game"
            },
            "id": 3593,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_endGame",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3584,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3581,
                  "mutability": "mutable",
                  "name": "winnerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3593,
                  "src": "14605:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3580,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14605:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3583,
                  "mutability": "mutable",
                  "name": "gameId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3593,
                  "src": "14628:20:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3582,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14628:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14604:45:18"
            },
            "returnParameters": {
              "id": 3585,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14658:0:18"
            },
            "scope": 3624,
            "src": "14587:123:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 3622,
              "nodeType": "Block",
              "src": "15281:211:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3610,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3596,
                        "src": "15394:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 3611,
                        "name": "winTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3602,
                        "src": "15402:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3612,
                        "name": "killScore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3604,
                        "src": "15411:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 3613,
                        "name": "isRare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3600,
                        "src": "15422:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 3607,
                        "name": "nftContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3078,
                        "src": "15363:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTContract_$4100",
                          "typeString": "contract NFTContract"
                        }
                      },
                      "id": 3609,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createAndMintToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3983,
                      "src": "15363:30:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint8_$_t_bool_$returns$__$",
                        "typeString": "function (string memory,uint256,uint8,bool) external"
                      }
                    },
                    "id": 3614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15363:66:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3615,
                  "nodeType": "ExpressionStatement",
                  "src": "15363:66:18"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3617,
                        "name": "winnerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3598,
                        "src": "15455:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3618,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3596,
                        "src": "15470:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 3619,
                        "name": "isRare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3600,
                        "src": "15478:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3616,
                      "name": "NFTCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3038,
                      "src": "15444:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,string memory,bool)"
                      }
                    },
                    "id": 3620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15444:41:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3621,
                  "nodeType": "EmitStatement",
                  "src": "15439:46:18"
                }
              ]
            },
            "documentation": {
              "id": 3594,
              "nodeType": "StructuredDocumentation",
              "src": "14716:387:18",
              "text": " @dev Call this method when the game ends to create and mint NFT.\n \n @param gameId id of this game.\n @param winnerAddress address of player who won the game\n @param isRare true if this NFT is rare\n @param winTime time taken (in seconds) to win the game\n @param killScore count of longest consecutive kill by one single piece on board"
            },
            "id": 3623,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_createAndMintNFT",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3605,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3596,
                  "mutability": "mutable",
                  "name": "gameId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3623,
                  "src": "15144:20:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3595,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "15144:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3598,
                  "mutability": "mutable",
                  "name": "winnerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3623,
                  "src": "15175:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3597,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15175:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3600,
                  "mutability": "mutable",
                  "name": "isRare",
                  "nodeType": "VariableDeclaration",
                  "scope": 3623,
                  "src": "15207:11:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3599,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "15207:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3602,
                  "mutability": "mutable",
                  "name": "winTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 3623,
                  "src": "15228:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3601,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "15228:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3604,
                  "mutability": "mutable",
                  "name": "killScore",
                  "nodeType": "VariableDeclaration",
                  "scope": 3623,
                  "src": "15251:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 3603,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "15251:5:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15134:138:18"
            },
            "returnParameters": {
              "id": 3606,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15281:0:18"
            },
            "scope": 3624,
            "src": "15108:384:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 3625,
        "src": "487:15007:18"
      }
    ],
    "src": "33:15461:18"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x306841c3fce8498c2d9b7194b8da4c04d03847394e237b625ce6d029b107f077": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "challengerAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "gameId",
              "type": "uint256"
            }
          ],
          "name": "GameCreated",
          "type": "event"
        },
        "0xc7f886847371dba98b78e0d0d59e29f4abfaf6e953d6897a761992cb2627e687": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "challengeAcceptorAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "gameId",
              "type": "uint256"
            }
          ],
          "name": "GameJoined",
          "type": "event"
        },
        "0x3de783f9d670d5639f2acef925c39a874e41e3aa39966962eb1b3aaa6177c0c4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "winnerAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "gameId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "isRare",
              "type": "bool"
            }
          ],
          "name": "NFTCreated",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0x2a2354125f81ee487bda88be7f56f045ff7d068431bfdb0ddb0a286c17b95244": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "winnerAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "gameId",
              "type": "uint256"
            }
          ],
          "name": "GameEnd",
          "type": "event"
        },
        "0x35d26844d53f502705f032c5740880dacbfb67e9ce4906507947c665fd4a9996": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "challengerAddress",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "challengeAcceptorAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "gameId",
              "type": "uint256"
            }
          ],
          "name": "GameJoined",
          "type": "event"
        },
        "0xab9e6b2a615855ce1ed5dc476076888910d7776481a5fc561e17d72a842fd726": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "challengerAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "gameId",
              "type": "string"
            }
          ],
          "name": "GameCreated",
          "type": "event"
        },
        "0x6763b8a4888eb1fb9140d4cb14e1fc7f987fc1699c6cb8b39d63b7517c55b010": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "winnerAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "gameId",
              "type": "string"
            }
          ],
          "name": "GameEnd",
          "type": "event"
        },
        "0xb0cbb988a88555f6347923839ff18c8c159a347bb5c40d0786ed40ee06e9f470": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "challengerAddress",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "challengeAcceptorAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "gameId",
              "type": "string"
            }
          ],
          "name": "GameJoined",
          "type": "event"
        },
        "0x8d11d8f75b99dce1ca13d075bd170d592c3c7291c30de9f88f714bb640d8c0b5": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "winnerAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "gameId",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "isRare",
              "type": "bool"
            }
          ],
          "name": "NFTCreated",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x1039b95f713A2B9797B72B3307De5321Ed9ce17A",
      "transactionHash": "0xaef5cc3ab3977a9b91182c0311f4fe2d493cc59c7f1853735136381b46bd0145"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-10-10T00:49:27.891Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "createGame(string)": {
        "details": "Create a new game by depositing a gameFee. "
      },
      "endGame(string,uint256)": {
        "details": "Call this to end a game with specified `gameId`. A game would end either when one player wins or if no  player accepts a challenge within 30 minutes. ",
        "params": {
          "gameId": "id of this game",
          "gameTime": "time taken (in seconds) to win the game"
        }
      },
      "getBaseGameFee()": {
        "details": "Call this to get the current `_baseGameFee` "
      },
      "getContractBalance()": {
        "details": "Call this to get the current balance of "
      },
      "joinGame(string)": {
        "details": "Call this to join a game with provided `gameId`. Throw an exeption if no game for this `gameId` exists. ",
        "params": {
          "gameId": "id of game to be ended"
        }
      },
      "mintNFT(string,bool,uint256,uint8)": {
        "details": "Winner of the game can call this to mint the winning card NFT.",
        "params": {
          "gameId": "id of this game",
          "isRare": "true if this NFT is rare",
          "killScore": "count of longest consecutive kill by one single piece on board",
          "winTime": "time taken (in seconds) to win the game"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setOwnership(address)": {
        "details": "Call this method to update ownership in future (if needed). This external  method can only be called by the owner of this contract. Since `transferOwnership()` already have this check it's not required for this method. ",
        "params": {
          "newOwnerAddress": "address of new owner to which ownership is to be transfered."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "updateBaseGameFees(uint256)": {
        "details": "Call this to update the current base game fee. This method can only be called via owner of this contract.",
        "params": {
          "newGameFee": "new fee value to be used for creating a new game."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}