{
  "contractName": "GameContract",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "challengerAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "gameId",
          "type": "string"
        }
      ],
      "name": "GameCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "winnerAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "gameId",
          "type": "string"
        }
      ],
      "name": "GameEnd",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "challengerAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "challengeAcceptorAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "gameId",
          "type": "string"
        }
      ],
      "name": "GameJoined",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "winnerAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "gameId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isRare",
          "type": "bool"
        }
      ],
      "name": "NFTCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwnerAddress",
          "type": "address"
        }
      ],
      "name": "setOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getContractBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getBaseGameFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newGameFee",
          "type": "uint256"
        }
      ],
      "name": "updateBaseGameFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "gameId",
          "type": "string"
        }
      ],
      "name": "createGame",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "gameId",
          "type": "string"
        }
      ],
      "name": "joinGame",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "gameId",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "winnerAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "winTime",
          "type": "uint256"
        }
      ],
      "name": "endGame",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "gameId",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "isRare",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "winTime",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "killScore",
          "type": "uint8"
        }
      ],
      "name": "mintNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"challengerAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"gameId\",\"type\":\"string\"}],\"name\":\"GameCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winnerAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"gameId\",\"type\":\"string\"}],\"name\":\"GameEnd\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"challengerAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"challengeAcceptorAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"gameId\",\"type\":\"string\"}],\"name\":\"GameJoined\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winnerAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"gameId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isRare\",\"type\":\"bool\"}],\"name\":\"NFTCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"gameId\",\"type\":\"string\"}],\"name\":\"createGame\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"gameId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"winnerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"winTime\",\"type\":\"uint256\"}],\"name\":\"endGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaseGameFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"gameId\",\"type\":\"string\"}],\"name\":\"joinGame\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"gameId\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isRare\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"winTime\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"killScore\",\"type\":\"uint8\"}],\"name\":\"mintNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwnerAddress\",\"type\":\"address\"}],\"name\":\"setOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newGameFee\",\"type\":\"uint256\"}],\"name\":\"updateBaseGameFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createGame(string)\":{\"details\":\"Create a new game by depositing a gameFee. \"},\"endGame(string,address,uint256)\":{\"details\":\"Call this to end a game with specified `gameId`. A game would end either when one player wins or if no  player accepts a challenge within 30 minutes. \",\"params\":{\"gameId\":\"id of this game\",\"winTime\":\"time taken (in seconds) to win the game\",\"winnerAddress\":\"address of player who won the game\"}},\"getBaseGameFee()\":{\"details\":\"Call this to get the current `_baseGameFee` \"},\"getContractBalance()\":{\"details\":\"Call this to get the current balance of \"},\"joinGame(string)\":{\"details\":\"Call this to join a game with provided `gameId`. Throw an exeption if no game for this `gameId` exists. \",\"params\":{\"gameId\":\"id of game to be ended\"}},\"mintNFT(string,bool,uint256,uint8)\":{\"details\":\"Winner of the game can call this to mint the winning card NFT.\",\"params\":{\"gameId\":\"id of this game\",\"isRare\":\"true if this NFT is rare\",\"killScore\":\"count of longest consecutive kill by one single piece on board\",\"winTime\":\"time taken (in seconds) to win the game\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setOwnership(address)\":{\"details\":\"Call this method to update ownership in future (if needed). This external  method can only be called by the owner of this contract. Since `transferOwnership()` already have this check it's not required for this method. \",\"params\":{\"newOwnerAddress\":\"address of new owner to which ownership is to be transfered.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateBaseGameFees(uint256)\":{\"details\":\"Call this to update the current base game fee. This method can only be called via owner of this contract.\",\"params\":{\"newGameFee\":\"new fee value to be used for creating a new game.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/GameContract.sol\":\"GameContract\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x842ccf9a6cd33e17b7acef8372ca42090755217b358fe0c44c98e951ea549d3a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cc5f36034a77d105263ae6d8cc18b16260b4a0f6cdb1a26f21ba3670fdd06dd\",\"dweb:/ipfs/QmdJrJ2LoG546BkfyZPta96BNmaVBfqZoh8kq7PqHuQyPk\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xb03df8481a954604ad0c9125680893b2e3f7ff770fe470e38b89ac61b84e8072\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b34655953d18ba3a45b762fb6bdbb6549af69a27435e10ece178742bf70baf45\",\"dweb:/ipfs/QmcqjUoFLLMyx7dbwSHUnDBH6aphkVHXWQvQRRev5EAWEh\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x02348b2e4b9f3200c7e3907c5c2661643a6d8520e9f79939fbb9b4005a54894d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d41d627f4ef9c6006df8c2d01227d3cf4a6c3359b5704c629d88933272eecadd\",\"dweb:/ipfs/QmYDo7MvMsvuDxuJZ9RC9zFganS3Tm8RYzSmBP5qSmJfuY\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x7d2b8ba4b256bfcac347991b75242f9bc37f499c5236af50cf09d0b35943dc0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8eeaf6afe00229af4c232ca058bb08b7a24cc3886f0b387159ac49ffd8b5312\",\"dweb:/ipfs/QmdnVKmDDWDvdRr6vtrxy3G6WafqA2TAhUZv1UFMsm4B4r\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf101e8720213560fab41104d53b3cc7ba0456ef3a98455aa7f022391783144a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e7820bcf567e6892d937c3cb10db263a4042e446799bca602535868d822384e\",\"dweb:/ipfs/QmPG2oeDjKncqsEeyYGjAN7CwAJmMgHterXGGnpzhha4z7\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd9517254724276e2e8de3769183c1f738f445f0095c26fd9b86d3c6687e887b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e604bcdcd5e5b2fb299ad09769cde6db19d5aa1929d1b5e939234a0f10d7eb8\",\"dweb:/ipfs/Qmd8hXE3GZfBHuWx3RNiYgFW2ci7KvHtib8DiwzJ2dgo9V\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xd32fb7f530a914b1083d10a6bed3a586f2451952fec04fe542bcc670a82f7ba5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af63ab940a34687c45f0ad84960b048fc5f49330c92ccb422db7822a444733b9\",\"dweb:/ipfs/QmUShaQEu8HS1GjDnsMJQ8jkZEBrecn6NuDZ3pfjY1gVck\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39a05eec7083dfa0cc7e0cbfe6cd1bd085a340af1ede93fdff3ad047c5fb3d8e\",\"dweb:/ipfs/QmVApz5fCUq2QC8gKTsNNdCmcedJ3ETHp68zR5N3WUKS4r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0x78450f4e3b722cce467b21e285f72ce5eaf361e9ba9dd2241a413926246773cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103065051300cd995fd4599ba91188d4071b92175b52f26110e02db091617c0\",\"dweb:/ipfs/QmSyDz67R2HCypDE8Pacn3voVwxw9x17NM66q47YgBnGqc\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x391d3ba97ab6856a16b225d6ee29617ad15ff00db70f3b4df1ab5ea33aa47c9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d636ba90bbbeed04a1ea7fe9ec2466757e30fd38ba2ca173636dbf69a518735e\",\"dweb:/ipfs/QmQwCB2BHnEuYR22PYt9HkpbgeFDhq4rHmaYqAZbX3WRC7\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d10e1d9b26042424789246603906ad06143bf9a928f4e99de8b5e3bdc662f549\",\"dweb:/ipfs/Qmejonoaj5MLekPus229rJQHcC6E9dz2xorjHJR84fMfmn\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x8666f020bd8fc9dc14f07e2ebc52b5f236ab4cdde7c77679b08cb2f94730043b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://163776cbf565c722232393aa2d62cbe8a2ffb5805986abf4906c00e1e07450a6\",\"dweb:/ipfs/QmPZoN9T3cb6o8bGhjBPZcz7im8T8DWhpr3tjLwhJJHx9N\"]},\"project:/contracts/BaseContract.sol\":{\"keccak256\":\"0xb8acdf3a17d947da69bae01a7f80210973113c124c9436cdfc2778fe5357e288\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ba6107de07fdd30422f820d9635b45ef18daba389b1904961c5301c4fe120cf\",\"dweb:/ipfs/QmTkZtWBZNpZN362H2juhFwDkc1jewUEuo2L46iqCeLbNm\"]},\"project:/contracts/GameContract.sol\":{\"keccak256\":\"0xd38b17f3e0fbf6e23e2a57ba8e84925f7fa7bdcda65f126392d45d86297ceda9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b1a52a2892325d135d2f3c82cb769ee817b0dee486da90261d385ac4c0b264\",\"dweb:/ipfs/QmcKSwFktux2s3cd4MVz57tvqg7ztxQJ8nXKoD6kzqQKtj\"]},\"project:/contracts/Helpers.sol\":{\"keccak256\":\"0x2f8985ccc2efa29f4c709f4a71491259fc16066220c7067dfc7949fdd12119c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://479a2914b94b1dd206d41cb15af749c4caf6a81cd6e46db7f933d3b95fa188c9\",\"dweb:/ipfs/QmXLXoiu4mdX6CBvJ249HH38PzqtbhRkNtiP7m6LqZnpNQ\"]},\"project:/contracts/NFTContract.sol\":{\"keccak256\":\"0x19942707dec384b9abb7eaf36fdf1e9976ad60c4a3531aa407a4fd7f8ce0454b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c54000f1cb37085761bbaaa3065c1ebf8c1f97ff9025902f05edfcc42d47e534\",\"dweb:/ipfs/QmbnjQ1LPXumbEWKSrRaS5UHxqfP9dBZeCbghuKpZwAoXh\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x60806040526004361061009c5760003560e01c80638da5cb5b116100645780638da5cb5b14610129578063a70160231461014b578063b92234881461016b578063c4c5a8541461018b578063d06894ce146101ab578063f2fde38b146101c05761009c565b80631402cf03146100a15780632ebc0504146100c35780633d536a2e146100d65780636f9fb98a146100e9578063715018a614610114575b600080fd5b3480156100ad57600080fd5b506100c16100bc366004611025565b6101e0565b005b6100c16100d1366004610fea565b6102c5565b6100c16100e4366004610fea565b61051a565b3480156100f557600080fd5b506100fe6107a1565b60405161010b91906116fc565b60405180910390f35b34801561012057600080fd5b506100c16107a5565b34801561013557600080fd5b5061013e6107f0565b60405161010b9190611161565b34801561015757600080fd5b506100c1610166366004610fb4565b6107ff565b34801561017757600080fd5b506100c16101863660046110e9565b61080b565b34801561019757600080fd5b506100c16101a636600461107a565b61084f565b3480156101b757600080fd5b506100fe610a28565b3480156101cc57600080fd5b506100c16101db366004610fb4565b610a2e565b6002600054141561020c5760405162461bcd60e51b81526004016102039061162d565b60405180910390fd5b6002600055610219610a9c565b6001600160a01b031661022a6107f0565b6001600160a01b0316146102505760405162461bcd60e51b81526004016102039061147c565b600081116102705760405162461bcd60e51b8152600401610203906114e8565b61027a8284610aa0565b816001600160a01b03167f6763b8a4888eb1fb9140d4cb14e1fc7f987fc1699c6cb8b39d63b7517c55b010846040516102b391906111a8565b60405180910390a25050600160005550565b600260005414156102e85760405162461bcd60e51b81526004016102039061162d565b60026000556102f5610ae4565b6001600160a01b0316336001600160a01b031614156103265760405162461bcd60e51b8152600401610203906114b1565b60006003826040516103389190611145565b908152604051908190036020019020546001600160a01b03169050600061035d610ae4565b6001600160a01b0316826001600160a01b03161415905080156103925760405162461bcd60e51b815260040161020390611664565b600061039c610ae4565b6001600160a01b0316836001600160a01b03161415905080156103d15760405162461bcd60e51b8152600401610203906113af565b6006543410156103f35760405162461bcd60e51b815260040161020390611554565b60006103fd610ae4565b6001600160a01b03166004866040516104169190611145565b908152604051908190036020019020546001600160a01b03161490508061044f5760405162461bcd60e51b8152600401610203906115e4565b6000610459610ae4565b6001600160a01b03166005876040516104729190611145565b908152604051908190036020019020546001600160a01b031614801591506104ac5760405162461bcd60e51b81526004016102039061124a565b6104b586610ae9565b6007546104cc906001600160a01b03163034610b33565b336001600160a01b03167fab9e6b2a615855ce1ed5dc476076888910d7776481a5fc561e17d72a842fd7268760405161050591906111a8565b60405180910390a25050600160005550505050565b6002600054141561053d5760405162461bcd60e51b81526004016102039061162d565b600260005561054a610ae4565b6001600160a01b0316336001600160a01b0316141561057b5760405162461bcd60e51b8152600401610203906114b1565b600060038260405161058d9190611145565b908152604051908190036020019020546001600160a01b0316905060006105b2610ae4565b6001600160a01b0316826001600160a01b031614159050806105e65760405162461bcd60e51b815260040161020390611435565b60006105f0610ae4565b6001600160a01b0316836001600160a01b031614159050806106245760405162461bcd60e51b81526004016102039061129d565b6006543410156106465760405162461bcd60e51b815260040161020390611554565b6000610650610ae4565b6001600160a01b03166004866040516106699190611145565b908152604051908190036020019020546001600160a01b031614801591506106a35760405162461bcd60e51b8152600401610203906115e4565b6001600160a01b0384163314156106cc5760405162461bcd60e51b815260040161020390611325565b60006106d6610ae4565b6001600160a01b03166005876040516106ef9190611145565b908152604051908190036020019020546001600160a01b031614801591506107295760405162461bcd60e51b81526004016102039061124a565b61073286610c1c565b600754610749906001600160a01b03163034610b33565b336001600160a01b0316856001600160a01b03167fb0cbb988a88555f6347923839ff18c8c159a347bb5c40d0786ed40ee06e9f4708860405161078c91906111a8565b60405180910390a35050600160005550505050565b4790565b6107ad610a9c565b6001600160a01b03166107be6107f0565b6001600160a01b0316146107e45760405162461bcd60e51b81526004016102039061147c565b6107ee6000610c5f565b565b6001546001600160a01b031690565b61080881610a2e565b50565b610813610a9c565b6001600160a01b03166108246107f0565b6001600160a01b03161461084a5760405162461bcd60e51b81526004016102039061147c565b600655565b600260005414156108725760405162461bcd60e51b81526004016102039061162d565b600260005561087f610ae4565b6001600160a01b0316336001600160a01b031614156108b05760405162461bcd60e51b8152600401610203906114b1565b60006003856040516108c29190611145565b908152604051908190036020019020546001600160a01b0316905060006108e7610ae4565b6001600160a01b0316826001600160a01b0316141590508061091b5760405162461bcd60e51b815260040161020390611435565b6000610925610ae4565b6001600160a01b031660048860405161093e9190611145565b908152604051908190036020019020546001600160a01b031614159050806109785760405162461bcd60e51b8152600401610203906113f0565b600060058860405161098a9190611145565b908152604051908190036020019020546001600160a01b0316905060006109af610ae4565b6001600160a01b0316826001600160a01b031614159050806109e35760405162461bcd60e51b815260040161020390611213565b336001600160a01b03831614610a0b5760405162461bcd60e51b8152600401610203906116ab565b610a1889838a8a8a610cb1565b5050600160005550505050505050565b60065490565b610a36610a9c565b6001600160a01b0316610a476107f0565b6001600160a01b031614610a6d5760405162461bcd60e51b81526004016102039061147c565b6001600160a01b038116610a935760405162461bcd60e51b8152600401610203906112df565b61080881610c5f565b3390565b81600582604051610ab19190611145565b90815260405190819003602001902080546001600160a01b03929092166001600160a01b03199092169190911790555050565b600090565b33600382604051610afa9190611145565b90815260405190819003602001902080546001600160a01b03929092166001600160a01b03199092169190911790556108086002610d63565b600081846001600160a01b031663dd62ed3e30866040518363ffffffff1660e01b8152600401610b64929190611175565b60206040518083038186803b158015610b7c57600080fd5b505afa158015610b90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb49190611101565b610bbe9190611705565b9050610c168463095ea7b360e01b8584604051602401610bdf92919061118f565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610d6c565b50505050565b33600482604051610c2d9190611145565b90815260405190819003602001902080546001600160a01b03929092166001600160a01b031990921691909117905550565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60085460405163b87d733960e01b81526001600160a01b039091169063b87d733990610ce79088908690869089906004016111df565b600060405180830381600087803b158015610d0157600080fd5b505af1158015610d15573d6000803e3d6000fd5b50505050836001600160a01b03167f8d11d8f75b99dce1ca13d075bd170d592c3c7291c30de9f88f714bb640d8c0b58685604051610d549291906111bb565b60405180910390a25050505050565b80546001019055565b6000610dc1826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610e009092919063ffffffff16565b805190915015610dfb5780806020019051810190610ddf9190610fce565b610dfb5760405162461bcd60e51b81526004016102039061159a565b505050565b6060610e0f8484600085610e19565b90505b9392505050565b606082471015610e3b5760405162461bcd60e51b815260040161020390611369565b610e4485610ed9565b610e605760405162461bcd60e51b81526004016102039061151d565b600080866001600160a01b03168587604051610e7c9190611145565b60006040518083038185875af1925050503d8060008114610eb9576040519150601f19603f3d011682016040523d82523d6000602084013e610ebe565b606091505b5091509150610ece828286610ee3565b979650505050505050565b803b15155b919050565b60608315610ef2575081610e12565b825115610f025782518084602001fd5b8160405162461bcd60e51b815260040161020391906111a8565b80356001600160a01b0381168114610ede57600080fd5b600082601f830112610f43578081fd5b813567ffffffffffffffff80821115610f5e57610f5e611755565b604051601f8301601f191681016020018281118282101715610f8257610f82611755565b604052828152848301602001861015610f99578384fd5b82602086016020830137918201602001929092529392505050565b600060208284031215610fc5578081fd5b610e1282610f1c565b600060208284031215610fdf578081fd5b8151610e128161176b565b600060208284031215610ffb578081fd5b813567ffffffffffffffff811115611011578182fd5b61101d84828501610f33565b949350505050565b600080600060608486031215611039578182fd5b833567ffffffffffffffff81111561104f578283fd5b61105b86828701610f33565b93505061106a60208501610f1c565b9150604084013590509250925092565b6000806000806080858703121561108f578081fd5b843567ffffffffffffffff8111156110a5578182fd5b6110b187828801610f33565b94505060208501356110c28161176b565b925060408501359150606085013560ff811681146110de578182fd5b939692955090935050565b6000602082840312156110fa578081fd5b5035919050565b600060208284031215611112578081fd5b5051919050565b60008151808452611131816020860160208601611729565b601f01601f19169290920160200192915050565b60008251611157818460208701611729565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b03929092168252602082015260400190565b600060208252610e126020830184611119565b6000604082526111ce6040830185611119565b905082151560208301529392505050565b6000608082526111f26080830187611119565b60208301959095525060ff9290921660408301521515606090910152919050565b60208082526019908201527f57696e6e65722061646472657373206973206e6f742073657400000000000000604082015260600190565b60208082526033908201527f57696e6e657220616464726573732063616e6e6f7420626520736574206265666040820152726f7265207468652067616d652073746172747360681b606082015260800190565b60208082526022908201527f4368616c6c656e676572206164647265737320646f6573206e6f742065786973604082015261747360f01b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526024908201527f426f746820706c6179657220616464726573732073686f756c6420626520756e6040820152636971756560e01b606082015260800190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b60208082526021908201527f4368616c6c656e676572206164647265737320616c72656164792065786973746040820152607360f81b606082015260800190565b60208082526025908201527f4368616c6c656e6765206163636570746f722061646472657373206973206e6f6040820152641d081cd95d60da1b606082015260800190565b60208082526027908201527f412067616d6520776974682073706563696669656420494420646f6573206e6f6040820152661d08195e1a5cdd60ca1b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601b908201527f43616c6c65722061646472657373206973206e6f742076616c69640000000000604082015260600190565b6020808252818101527f57696e54696d652068617320746f2062652067726561746572207468616e2030604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b60208082526026908201527f53656e742076616c75652073686f756c6420626520657175616c20746f2067616040820152656d652066656560d01b606082015260800190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b60208082526029908201527f4368616c6c656e6765206163636570746f72206164647265737320616c72656160408201526864792065786973747360b81b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60208082526027908201527f412067616d6520776974682073706563696669656420494420616c72656164796040820152662065786973747360c81b606082015260800190565b60208082526031908201527f4f6e6c79207468652077696e6e6572206f66207468652067616d652063616e206040820152701b5a5b9d081d1a19481391950818d85c99607a1b606082015260800190565b90815260200190565b6000821982111561172457634e487b7160e01b81526011600452602481fd5b500190565b60005b8381101561174457818101518382015260200161172c565b83811115610c165750506000910152565b634e487b7160e01b600052604160045260246000fd5b801515811461080857600080fdfea26469706673582212203baf66a24132c77588fa9a7c4e450fa012e0c164eddb25f65df5cd863459997b64736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:778:21",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:21",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:102:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:21"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "182:6:21"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "198:3:21",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "203:1:21",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "194:3:21"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "194:11:21"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "207:1:21",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "190:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "190:19:21"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "178:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "178:32:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:51:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:51:21"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:21",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:21",
                "type": ""
              }
            ],
            "src": "14:203:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "497:279:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "514:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "525:2:21",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "507:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "507:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "507:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "548:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "559:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "544:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "544:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "564:1:21",
                        "type": "",
                        "value": "5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "537:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "537:29:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "537:29:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "586:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "597:2:21",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "582:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "582:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "602:7:21",
                        "type": "",
                        "value": "ether"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "575:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "575:35:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "575:35:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "630:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "641:4:21",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "626:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "626:20:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "648:3:21",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "619:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "619:33:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "619:33:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "672:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "683:3:21",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "668:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "668:19:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "689:1:21",
                        "type": "",
                        "value": "3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "661:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "661:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "661:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "711:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "722:3:21",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "707:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "707:19:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "728:5:21",
                        "type": "",
                        "value": "ETH"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "700:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "700:34:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "700:34:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "743:27:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "755:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "766:3:21",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "751:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "751:19:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "743:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_13730b0d8e1bdbdc293b62ba010b1eede56b412ea2980defabe3d0b6c7844c3a_t_stringliteral_aaaebeba3810b1e6b70781f14b2d72c1cb89c0b2b320c43bb67ff79f562f5ff4__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "474:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "488:4:21",
                "type": ""
              }
            ],
            "src": "222:554:21"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_13730b0d8e1bdbdc293b62ba010b1eede56b412ea2980defabe3d0b6c7844c3a_t_stringliteral_aaaebeba3810b1e6b70781f14b2d72c1cb89c0b2b320c43bb67ff79f562f5ff4__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 64)\n        mstore(add(headStart, 64), 5)\n        mstore(add(headStart, 96), \"ether\")\n        mstore(add(headStart, 0x20), 128)\n        mstore(add(headStart, 128), 3)\n        mstore(add(headStart, 160), \"ETH\")\n        tail := add(headStart, 192)\n    }\n}",
      "id": 21,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:14347:21",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:21",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "65:124:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "75:29:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "97:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "84:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "84:20:21"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "75:5:21"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "167:16:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "176:1:21",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "179:1:21",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "169:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "169:12:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "169:12:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "126:5:21"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "137:5:21"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "152:3:21",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "157:1:21",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "148:3:21"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "148:11:21"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "161:1:21",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "144:3:21"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "144:19:21"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "133:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "133:31:21"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "123:2:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "123:42:21"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "116:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "116:50:21"
                  },
                  "nodeType": "YulIf",
                  "src": "113:2:21"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "44:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "55:5:21",
                "type": ""
              }
            ],
            "src": "14:175:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "249:658:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "298:24:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "307:5:21"
                            },
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "314:5:21"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "300:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "300:20:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "300:20:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "277:6:21"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "285:4:21",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "273:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "273:17:21"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "292:3:21"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "269:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "269:27:21"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "262:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "262:35:21"
                  },
                  "nodeType": "YulIf",
                  "src": "259:2:21"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "331:30:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "354:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "341:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "341:20:21"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "335:2:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "370:28:21",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "380:18:21",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "374:2:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "421:22:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "423:16:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "423:18:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "423:18:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "413:2:21"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "417:2:21"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "410:2:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "410:10:21"
                  },
                  "nodeType": "YulIf",
                  "src": "407:2:21"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "452:23:21",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "472:2:21",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "466:5:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "466:9:21"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "456:6:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "484:69:21",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "510:6:21"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "526:2:21"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "530:4:21",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "522:3:21"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "522:13:21"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "541:2:21",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "537:3:21"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "537:7:21"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "518:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "518:27:21"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "506:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "506:40:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "548:4:21",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "502:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "502:51:21"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "488:10:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "612:22:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "614:16:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "614:18:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "614:18:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "571:10:21"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "583:2:21"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "568:2:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "568:18:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "591:10:21"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "603:6:21"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "588:2:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "588:22:21"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "565:2:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "565:46:21"
                  },
                  "nodeType": "YulIf",
                  "src": "562:2:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "650:2:21",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "654:10:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "643:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "643:22:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "643:22:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "681:6:21"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "689:2:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "674:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "674:18:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "674:18:21"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "740:24:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "749:5:21"
                            },
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "756:5:21"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "742:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "742:20:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "742:20:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "715:6:21"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "723:2:21"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "711:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "711:15:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "728:4:21",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "707:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "707:26:21"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "735:3:21"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "704:2:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "704:35:21"
                  },
                  "nodeType": "YulIf",
                  "src": "701:2:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "790:6:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "798:4:21",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "786:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "786:17:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "809:6:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "817:4:21",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "805:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "805:17:21"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "824:2:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "773:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "773:54:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "773:54:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "851:6:21"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "859:2:21"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "847:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "847:15:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "864:4:21",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "843:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "843:26:21"
                      },
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "871:5:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "836:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "836:41:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "836:41:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "886:15:21",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "895:6:21"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "886:5:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "223:6:21",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "231:3:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "239:5:21",
                "type": ""
              }
            ],
            "src": "194:713:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "982:128:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1028:26:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1037:6:21"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1045:6:21"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1030:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1030:22:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1030:22:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1003:7:21"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1012:9:21"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "999:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "999:23:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1024:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "995:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "995:32:21"
                  },
                  "nodeType": "YulIf",
                  "src": "992:2:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1063:41:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1094:9:21"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1073:20:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1073:31:21"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1063:6:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "948:9:21",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "959:7:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "971:6:21",
                "type": ""
              }
            ],
            "src": "912:198:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1193:179:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1239:26:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1248:6:21"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1256:6:21"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1241:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1241:22:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1241:22:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1214:7:21"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1223:9:21"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1210:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1210:23:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1235:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1206:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1206:32:21"
                  },
                  "nodeType": "YulIf",
                  "src": "1203:2:21"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1274:29:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1293:9:21"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1287:5:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1287:16:21"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1278:5:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1336:5:21"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "1312:23:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1312:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1312:30:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1351:15:21",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1361:5:21"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1351:6:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1159:9:21",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1170:7:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1182:6:21",
                "type": ""
              }
            ],
            "src": "1115:257:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1457:264:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1503:26:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1512:6:21"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1520:6:21"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1505:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1505:22:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1505:22:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1478:7:21"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1487:9:21"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1474:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1474:23:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1499:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1470:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1470:32:21"
                  },
                  "nodeType": "YulIf",
                  "src": "1467:2:21"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1538:37:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1565:9:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1552:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1552:23:21"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1542:6:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1618:26:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1627:6:21"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1635:6:21"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1620:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1620:22:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1620:22:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1590:6:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1598:18:21",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1587:2:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1587:30:21"
                  },
                  "nodeType": "YulIf",
                  "src": "1584:2:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1653:62:21",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1687:9:21"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1698:6:21"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1683:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1683:22:21"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1707:7:21"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_string",
                      "nodeType": "YulIdentifier",
                      "src": "1663:19:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1663:52:21"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1653:6:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1423:9:21",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1434:7:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1446:6:21",
                "type": ""
              }
            ],
            "src": "1377:344:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1840:374:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1886:26:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1895:6:21"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1903:6:21"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1888:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1888:22:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1888:22:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1861:7:21"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1870:9:21"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1857:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1857:23:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1882:2:21",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1853:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1853:32:21"
                  },
                  "nodeType": "YulIf",
                  "src": "1850:2:21"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1921:37:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1948:9:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1935:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1935:23:21"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1925:6:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2001:26:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "2010:6:21"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "2018:6:21"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2003:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2003:22:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2003:22:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1973:6:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1981:18:21",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1970:2:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1970:30:21"
                  },
                  "nodeType": "YulIf",
                  "src": "1967:2:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2036:62:21",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2070:9:21"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2081:6:21"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2066:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2066:22:21"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2090:7:21"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_string",
                      "nodeType": "YulIdentifier",
                      "src": "2046:19:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2046:52:21"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2036:6:21"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2107:50:21",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2142:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2153:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2138:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2138:18:21"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2117:20:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2117:40:21"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2107:6:21"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2166:42:21",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2193:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2204:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2189:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2189:18:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2176:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2176:32:21"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2166:6:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1790:9:21",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1801:7:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1813:6:21",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1821:6:21",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1829:6:21",
                "type": ""
              }
            ],
            "src": "1726:488:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2345:593:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2392:26:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "2401:6:21"
                            },
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "2409:6:21"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2394:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2394:22:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2394:22:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2366:7:21"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2375:9:21"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2362:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2362:23:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2387:3:21",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2358:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2358:33:21"
                  },
                  "nodeType": "YulIf",
                  "src": "2355:2:21"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2427:37:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2454:9:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2441:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2441:23:21"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "2431:6:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2507:26:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "2516:6:21"
                            },
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "2524:6:21"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2509:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2509:22:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2509:22:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2479:6:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2487:18:21",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2476:2:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2476:30:21"
                  },
                  "nodeType": "YulIf",
                  "src": "2473:2:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2542:62:21",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2576:9:21"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2587:6:21"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2572:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2572:22:21"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2596:7:21"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_string",
                      "nodeType": "YulIdentifier",
                      "src": "2552:19:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2552:52:21"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2542:6:21"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2613:45:21",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2643:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2654:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2639:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2639:18:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2626:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2626:32:21"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2617:5:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2691:5:21"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "2667:23:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2667:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2667:30:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2706:15:21",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2716:5:21"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2706:6:21"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2730:42:21",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2757:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2768:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2753:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2753:18:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2740:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2740:32:21"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2730:6:21"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2781:47:21",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2813:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2824:2:21",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2809:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2809:18:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2796:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2796:32:21"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "2785:7:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2880:26:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "2889:6:21"
                            },
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "2897:6:21"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2882:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2882:22:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2882:22:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value_1",
                            "nodeType": "YulIdentifier",
                            "src": "2850:7:21"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value_1",
                                "nodeType": "YulIdentifier",
                                "src": "2863:7:21"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2872:4:21",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2859:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2859:18:21"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2847:2:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2847:31:21"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2840:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2840:39:21"
                  },
                  "nodeType": "YulIf",
                  "src": "2837:2:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2915:17:21",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "2925:7:21"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "2915:6:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_boolt_uint256t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2287:9:21",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2298:7:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2310:6:21",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2318:6:21",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2326:6:21",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2334:6:21",
                "type": ""
              }
            ],
            "src": "2219:719:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3013:120:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3059:26:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3068:6:21"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3076:6:21"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3061:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3061:22:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3061:22:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3034:7:21"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3043:9:21"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3030:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3030:23:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3055:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3026:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3026:32:21"
                  },
                  "nodeType": "YulIf",
                  "src": "3023:2:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3094:33:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3117:9:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3104:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3104:23:21"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3094:6:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2979:9:21",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2990:7:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3002:6:21",
                "type": ""
              }
            ],
            "src": "2943:190:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3219:113:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3265:26:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3274:6:21"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3282:6:21"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3267:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3267:22:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3267:22:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3240:7:21"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3249:9:21"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3236:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3236:23:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3261:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3232:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3232:32:21"
                  },
                  "nodeType": "YulIf",
                  "src": "3229:2:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3300:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3316:9:21"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3310:5:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3310:16:21"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3300:6:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3185:9:21",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3196:7:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3208:6:21",
                "type": ""
              }
            ],
            "src": "3138:194:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3389:208:21",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3399:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3419:5:21"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3413:5:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3413:12:21"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3403:6:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3441:3:21"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3446:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3434:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3434:19:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3434:19:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3488:5:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3495:4:21",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3484:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3484:16:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3506:3:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3511:4:21",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3502:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3502:14:21"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3518:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "3462:21:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3462:63:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3462:63:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3534:57:21",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3549:3:21"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3562:6:21"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3570:2:21",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3558:3:21"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3558:15:21"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3579:2:21",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "3575:3:21"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3575:7:21"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3554:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3554:29:21"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3545:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3545:39:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3586:4:21",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3541:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3541:50:21"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3534:3:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3366:5:21",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3373:3:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3381:3:21",
                "type": ""
              }
            ],
            "src": "3337:260:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3739:137:21",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3749:27:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3769:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3763:5:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3763:13:21"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3753:6:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3811:6:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3819:4:21",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3807:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3807:17:21"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3826:3:21"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3831:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "3785:21:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3785:53:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3785:53:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3847:23:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3858:3:21"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3863:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3854:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3854:16:21"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3847:3:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3715:3:21",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3720:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3731:3:21",
                "type": ""
              }
            ],
            "src": "3602:274:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4020:137:21",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4030:27:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4050:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4044:5:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4044:13:21"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "4034:6:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4092:6:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4100:4:21",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4088:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4088:17:21"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4107:3:21"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4112:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "4066:21:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4066:53:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4066:53:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4128:23:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4139:3:21"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4144:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4135:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4135:16:21"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4128:3:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3996:3:21",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4001:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4012:3:21",
                "type": ""
              }
            ],
            "src": "3881:276:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4263:102:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4273:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4285:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4296:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4281:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4281:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4273:4:21"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4315:9:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4330:6:21"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4346:3:21",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4351:1:21",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4342:3:21"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4342:11:21"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4355:1:21",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4338:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4338:19:21"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4326:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4326:32:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4308:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4308:51:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4308:51:21"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4232:9:21",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4243:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4254:4:21",
                "type": ""
              }
            ],
            "src": "4162:203:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4499:175:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4509:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4521:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4532:2:21",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4517:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4517:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4509:4:21"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4544:29:21",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4562:3:21",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4567:1:21",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "4558:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4558:11:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4571:1:21",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "4554:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4554:19:21"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4548:2:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4589:9:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4604:6:21"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4612:2:21"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4600:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4600:15:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4582:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4582:34:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4582:34:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4636:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4647:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4632:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4632:18:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "4656:6:21"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4664:2:21"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4652:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4652:15:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4625:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4625:43:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4625:43:21"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4460:9:21",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4471:6:21",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4479:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4490:4:21",
                "type": ""
              }
            ],
            "src": "4370:304:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4808:145:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4818:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4830:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4841:2:21",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4826:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4826:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4818:4:21"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4860:9:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4875:6:21"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4891:3:21",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4896:1:21",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4887:3:21"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4887:11:21"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4900:1:21",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4883:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4883:19:21"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4871:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4871:32:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4853:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4853:51:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4853:51:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4924:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4935:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4920:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4920:18:21"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4940:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4913:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4913:34:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4913:34:21"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4769:9:21",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4780:6:21",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4788:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4799:4:21",
                "type": ""
              }
            ],
            "src": "4679:274:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5079:101:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5096:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5107:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5089:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5089:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5089:21:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5119:55:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5147:6:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5159:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5170:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5155:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5155:18:21"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string",
                      "nodeType": "YulIdentifier",
                      "src": "5127:19:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5127:47:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5119:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5048:9:21",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5059:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5070:4:21",
                "type": ""
              }
            ],
            "src": "4958:222:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5328:160:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5345:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5356:2:21",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5338:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5338:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5338:21:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5368:55:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5396:6:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5408:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5419:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5404:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5404:18:21"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string",
                      "nodeType": "YulIdentifier",
                      "src": "5376:19:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5376:47:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5368:4:21"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5443:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5454:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5439:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5439:18:21"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "5473:6:21"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "5466:6:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5466:14:21"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "5459:6:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5459:22:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5432:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5432:50:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5432:50:21"
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr_t_bool__to_t_string_memory_ptr_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5289:9:21",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5300:6:21",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5308:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5319:4:21",
                "type": ""
              }
            ],
            "src": "5185:303:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5688:259:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5705:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5716:3:21",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5698:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5698:22:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5698:22:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5729:56:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5757:6:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5769:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5780:3:21",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5765:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5765:19:21"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string",
                      "nodeType": "YulIdentifier",
                      "src": "5737:19:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5737:48:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5729:4:21"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5805:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5816:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5801:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5801:18:21"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5821:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5794:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5794:34:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5794:34:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5848:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5859:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5844:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5844:18:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "5868:6:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5876:4:21",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5864:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5864:17:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5837:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5837:45:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5837:45:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5902:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5913:2:21",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5898:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5898:18:21"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value3",
                                "nodeType": "YulIdentifier",
                                "src": "5932:6:21"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "5925:6:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5925:14:21"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "5918:6:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5918:22:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5891:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5891:50:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5891:50:21"
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint8_t_bool__to_t_string_memory_ptr_t_uint256_t_uint8_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5633:9:21",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "5644:6:21",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5652:6:21",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5660:6:21",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5668:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5679:4:21",
                "type": ""
              }
            ],
            "src": "5493:454:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6126:175:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6143:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6154:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6136:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6136:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6136:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6177:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6188:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6173:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6173:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6193:2:21",
                        "type": "",
                        "value": "25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6166:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6166:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6166:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6216:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6227:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6212:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6212:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6232:27:21",
                        "type": "",
                        "value": "Winner address is not set"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6205:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6205:55:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6205:55:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6269:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6281:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6292:2:21",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6277:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6277:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6269:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_08f7f19b860a6435dcb3482da5e7773745b04bf817fd4d889727a6dd3dae8840__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6103:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6117:4:21",
                "type": ""
              }
            ],
            "src": "5952:349:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6480:241:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6497:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6508:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6490:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6490:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6490:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6531:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6542:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6527:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6527:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6547:2:21",
                        "type": "",
                        "value": "51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6520:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6520:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6520:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6570:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6581:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6566:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6566:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6586:34:21",
                        "type": "",
                        "value": "Winner address cannot be set bef"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6559:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6559:62:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6559:62:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6641:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6652:2:21",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6637:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6637:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6657:21:21",
                        "type": "",
                        "value": "ore the game starts"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6630:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6630:49:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6630:49:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6688:27:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6700:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6711:3:21",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6696:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6696:19:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6688:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0b62f49c2e764ec89feead20bcc961c1ed56ada4c0696cd3b425ec7059801051__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6457:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6471:4:21",
                "type": ""
              }
            ],
            "src": "6306:415:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6900:224:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6917:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6928:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6910:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6910:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6910:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6951:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6962:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6947:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6947:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6967:2:21",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6940:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6940:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6940:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6990:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7001:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6986:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6986:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7006:34:21",
                        "type": "",
                        "value": "Challenger address does not exis"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6979:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6979:62:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6979:62:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7061:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7072:2:21",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7057:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7057:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7077:4:21",
                        "type": "",
                        "value": "ts"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7050:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7050:32:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7050:32:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7091:27:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7103:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7114:3:21",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7099:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7099:19:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7091:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1b9473895da364a7789cb188ddf4707e9ccd10108e8b86a29f646c1c2ddedb59__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6877:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6891:4:21",
                "type": ""
              }
            ],
            "src": "6726:398:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7303:228:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7320:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7331:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7313:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7313:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7313:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7354:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7365:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7350:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7350:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7370:2:21",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7343:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7343:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7343:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7393:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7404:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7389:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7389:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7409:34:21",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7382:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7382:62:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7382:62:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7464:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7475:2:21",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7460:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7460:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7480:8:21",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7453:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7453:36:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7453:36:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7498:27:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7510:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7521:3:21",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7506:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7506:19:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7498:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7280:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7294:4:21",
                "type": ""
              }
            ],
            "src": "7129:402:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7710:226:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7727:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7738:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7720:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7720:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7720:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7761:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7772:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7757:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7757:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7777:2:21",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7750:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7750:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7750:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7800:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7811:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7796:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7796:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7816:34:21",
                        "type": "",
                        "value": "Both player address should be un"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7789:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7789:62:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7789:62:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7871:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7882:2:21",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7867:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7867:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7887:6:21",
                        "type": "",
                        "value": "ique"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7860:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7860:34:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7860:34:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7903:27:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7915:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7926:3:21",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7911:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7911:19:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7903:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4c5d4640df8142cd1bce516517b32af75fc4f9f4196c87f10075d45756729a96__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7687:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7701:4:21",
                "type": ""
              }
            ],
            "src": "7536:400:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8115:228:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8132:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8143:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8125:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8125:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8125:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8166:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8177:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8162:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8162:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8182:2:21",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8155:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8155:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8155:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8205:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8216:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8201:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8201:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8221:34:21",
                        "type": "",
                        "value": "Address: insufficient balance fo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8194:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8194:62:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8194:62:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8276:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8287:2:21",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8272:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8272:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8292:8:21",
                        "type": "",
                        "value": "r call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8265:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8265:36:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8265:36:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8310:27:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8322:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8333:3:21",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8318:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8318:19:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8310:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8092:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8106:4:21",
                "type": ""
              }
            ],
            "src": "7941:402:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8522:223:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8539:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8550:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8532:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8532:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8532:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8573:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8584:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8569:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8569:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8589:2:21",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8562:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8562:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8562:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8612:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8623:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8608:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8608:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8628:34:21",
                        "type": "",
                        "value": "Challenger address already exist"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8601:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8601:62:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8601:62:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8683:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8694:2:21",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8679:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8679:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8699:3:21",
                        "type": "",
                        "value": "s"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8672:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8672:31:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8672:31:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8712:27:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8724:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8735:3:21",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8720:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8720:19:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8712:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_68b39e6bbbcb2d117ba637aa448afe60242e2493a24dec03fcbf894585f88e1c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8499:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8513:4:21",
                "type": ""
              }
            ],
            "src": "8348:397:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8924:227:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8941:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8952:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8934:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8934:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8934:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8975:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8986:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8971:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8971:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8991:2:21",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8964:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8964:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8964:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9014:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9025:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9010:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9010:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9030:34:21",
                        "type": "",
                        "value": "Challenge acceptor address is no"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9003:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9003:62:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9003:62:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9085:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9096:2:21",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9081:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9081:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9101:7:21",
                        "type": "",
                        "value": "t set"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9074:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9074:35:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9074:35:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9118:27:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9130:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9141:3:21",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9126:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9126:19:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9118:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6c747a3591d8de281882c4b0bf919d0370aa943ae4c917debdd549a6f4d800e5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8901:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8915:4:21",
                "type": ""
              }
            ],
            "src": "8750:401:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9330:229:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9347:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9358:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9340:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9340:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9340:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9381:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9392:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9377:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9377:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9397:2:21",
                        "type": "",
                        "value": "39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9370:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9370:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9370:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9420:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9431:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9416:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9416:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9436:34:21",
                        "type": "",
                        "value": "A game with specified ID does no"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9409:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9409:62:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9409:62:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9491:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9502:2:21",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9487:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9487:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9507:9:21",
                        "type": "",
                        "value": "t exist"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9480:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9480:37:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9480:37:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9526:27:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9538:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9549:3:21",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9534:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9534:19:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9526:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7f7dc31d37f22a0c3019738b1f6a4333a15b2f3e1259556e5217d5220d6a5c8b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9307:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9321:4:21",
                "type": ""
              }
            ],
            "src": "9156:403:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9738:182:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9755:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9766:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9748:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9748:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9748:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9789:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9800:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9785:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9785:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9805:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9778:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9778:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9778:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9828:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9839:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9824:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9824:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9844:34:21",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9817:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9817:62:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9817:62:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9888:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9900:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9911:2:21",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9896:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9896:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9888:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9715:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9729:4:21",
                "type": ""
              }
            ],
            "src": "9564:356:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10099:177:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10116:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10127:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10109:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10109:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10109:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10150:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10161:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10146:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10146:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10166:2:21",
                        "type": "",
                        "value": "27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10139:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10139:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10139:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10189:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10200:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10185:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10185:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10205:29:21",
                        "type": "",
                        "value": "Caller address is not valid"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10178:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10178:57:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10178:57:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10244:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10256:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10267:2:21",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10252:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10252:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10244:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a4b892cd51309e0da45f8f3cba80a0441ed1d715f40ceaa6fcbace1bdb9e9407__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10076:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10090:4:21",
                "type": ""
              }
            ],
            "src": "9925:351:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10455:182:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10472:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10483:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10465:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10465:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10465:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10506:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10517:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10502:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10502:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10522:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10495:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10495:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10495:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10545:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10556:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10541:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10541:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10561:34:21",
                        "type": "",
                        "value": "WinTime has to be greater than 0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10534:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10534:62:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10534:62:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10605:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10617:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10628:2:21",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10613:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10613:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10605:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_bc8d2fed5afaed2003118c6d2d57c190b97774656cbdf614096c6cb13ffe22e6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10432:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10446:4:21",
                "type": ""
              }
            ],
            "src": "10281:356:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10816:179:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10833:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10844:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10826:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10826:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10826:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10867:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10878:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10863:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10863:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10883:2:21",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10856:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10856:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10856:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10906:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10917:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10902:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10902:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10922:31:21",
                        "type": "",
                        "value": "Address: call to non-contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10895:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10895:59:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10895:59:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10963:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10975:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10986:2:21",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10971:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10971:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10963:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10793:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10807:4:21",
                "type": ""
              }
            ],
            "src": "10642:353:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11174:228:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11191:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11202:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11184:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11184:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11184:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11225:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11236:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11221:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11221:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11241:2:21",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11214:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11214:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11214:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11264:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11275:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11260:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11260:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11280:34:21",
                        "type": "",
                        "value": "Sent value should be equal to ga"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11253:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11253:62:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11253:62:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11335:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11346:2:21",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11331:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11331:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11351:8:21",
                        "type": "",
                        "value": "me fee"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11324:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11324:36:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11324:36:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11369:27:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11381:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11392:3:21",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11377:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11377:19:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11369:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_df6e2fc9ec87ba64888d1696bf27ec602b6cc570464535b02f1632bf6809e249__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11151:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11165:4:21",
                "type": ""
              }
            ],
            "src": "11000:402:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11581:232:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11598:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11609:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11591:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11591:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11591:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11632:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11643:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11628:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11628:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11648:2:21",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11621:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11621:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11621:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11671:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11682:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11667:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11667:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11687:34:21",
                        "type": "",
                        "value": "SafeERC20: ERC20 operation did n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11660:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11660:62:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11660:62:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11742:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11753:2:21",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11738:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11738:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11758:12:21",
                        "type": "",
                        "value": "ot succeed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11731:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11731:40:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11731:40:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11780:27:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11792:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11803:3:21",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11788:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11788:19:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11780:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11558:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11572:4:21",
                "type": ""
              }
            ],
            "src": "11407:406:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11992:231:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12009:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12020:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12002:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12002:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12002:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12043:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12054:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12039:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12039:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12059:2:21",
                        "type": "",
                        "value": "41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12032:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12032:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12032:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12082:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12093:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12078:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12078:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12098:34:21",
                        "type": "",
                        "value": "Challenge acceptor address alrea"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12071:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12071:62:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12071:62:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12153:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12164:2:21",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12149:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12149:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12169:11:21",
                        "type": "",
                        "value": "dy exists"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12142:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12142:39:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12142:39:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12190:27:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12202:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12213:3:21",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12198:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12198:19:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12190:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ea8ebe73274229663547b3915a848de50064adefc44a9d5e0584f9c02299fb2a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11969:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11983:4:21",
                "type": ""
              }
            ],
            "src": "11818:405:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12402:181:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12419:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12430:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12412:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12412:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12412:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12453:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12464:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12449:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12449:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12469:2:21",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12442:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12442:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12442:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12492:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12503:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12488:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12488:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12508:33:21",
                        "type": "",
                        "value": "ReentrancyGuard: reentrant call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12481:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12481:61:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12481:61:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12551:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12563:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12574:2:21",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12559:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12559:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12551:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12379:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12393:4:21",
                "type": ""
              }
            ],
            "src": "12228:355:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12762:229:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12779:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12790:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12772:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12772:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12772:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12813:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12824:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12809:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12809:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12829:2:21",
                        "type": "",
                        "value": "39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12802:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12802:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12802:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12852:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12863:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12848:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12848:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12868:34:21",
                        "type": "",
                        "value": "A game with specified ID already"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12841:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12841:62:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12841:62:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12923:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12934:2:21",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12919:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12919:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12939:9:21",
                        "type": "",
                        "value": " exists"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12912:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12912:37:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12912:37:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12958:27:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12970:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12981:3:21",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12966:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12966:19:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12958:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ef530aef35b7ebd85e02b04c89bc924be091da1add3fbe37c0d633b4df1bacc7__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12739:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12753:4:21",
                "type": ""
              }
            ],
            "src": "12588:403:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13170:239:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13187:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13198:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13180:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13180:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13180:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13221:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13232:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13217:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13217:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13237:2:21",
                        "type": "",
                        "value": "49"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13210:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13210:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13210:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13260:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13271:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13256:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13256:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13276:34:21",
                        "type": "",
                        "value": "Only the winner of the game can "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13249:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13249:62:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13249:62:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13331:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13342:2:21",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13327:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13327:18:21"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13347:19:21",
                        "type": "",
                        "value": "mint the NFT card"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13320:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13320:47:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13320:47:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13376:27:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13388:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13399:3:21",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13384:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13384:19:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13376:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ff18751b5f206aacdadff35ff3a51ed08756a18f98b91fa5ffe57695be6a2c19__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13147:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13161:4:21",
                "type": ""
              }
            ],
            "src": "12996:413:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13515:76:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13525:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13537:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13548:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13533:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13533:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13525:4:21"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13567:9:21"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "13578:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13560:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13560:25:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13560:25:21"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13484:9:21",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13495:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13506:4:21",
                "type": ""
              }
            ],
            "src": "13414:177:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13644:181:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13679:115:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "sum",
                              "nodeType": "YulIdentifier",
                              "src": "13700:3:21"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "13709:3:21",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "13714:10:21",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "13705:3:21"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "13705:20:21"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "13693:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13693:33:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13693:33:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13746:1:21",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13749:4:21",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "13739:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13739:15:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13739:15:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "sum",
                              "nodeType": "YulIdentifier",
                              "src": "13774:3:21"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13779:4:21",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "13767:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13767:17:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13767:17:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13660:1:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "13667:1:21"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "13663:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13663:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "13657:2:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13657:13:21"
                  },
                  "nodeType": "YulIf",
                  "src": "13654:2:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13803:16:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13814:1:21"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13817:1:21"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13810:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13810:9:21"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "13803:3:21"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "13627:1:21",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "13630:1:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "13636:3:21",
                "type": ""
              }
            ],
            "src": "13596:229:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13883:205:21",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13893:10:21",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "13902:1:21",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "13897:1:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13962:63:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "13987:3:21"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "13992:1:21"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "13983:3:21"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "13983:11:21"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "14006:3:21"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "14011:1:21"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "14002:3:21"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "14002:11:21"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "13996:5:21"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "13996:18:21"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "13976:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13976:39:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13976:39:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "13923:1:21"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "13926:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "13920:2:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13920:13:21"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "13934:19:21",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "13936:15:21",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "13945:1:21"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13948:2:21",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "13941:3:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13941:10:21"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "13936:1:21"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "13916:3:21",
                    "statements": []
                  },
                  "src": "13912:113:21"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14051:31:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "14064:3:21"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "14069:6:21"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "14060:3:21"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "14060:16:21"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14078:1:21",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "14053:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14053:27:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14053:27:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "14040:1:21"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "14043:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "14037:2:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14037:13:21"
                  },
                  "nodeType": "YulIf",
                  "src": "14034:2:21"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "13861:3:21",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "13866:3:21",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "13871:6:21",
                "type": ""
              }
            ],
            "src": "13830:258:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14125:95:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14142:1:21",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14149:3:21",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14154:10:21",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "14145:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14145:20:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14135:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14135:31:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14135:31:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14182:1:21",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14185:4:21",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14175:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14175:15:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14175:15:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14206:1:21",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14209:4:21",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "14199:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14199:15:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14199:15:21"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "14093:127:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14269:76:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14323:16:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14332:1:21",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14335:1:21",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "14325:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14325:12:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14325:12:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "14292:5:21"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "14313:5:21"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "14306:6:21"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14306:13:21"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "14299:6:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14299:21:21"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "14289:2:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14289:32:21"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "14282:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14282:40:21"
                  },
                  "nodeType": "YulIf",
                  "src": "14279:2:21"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14258:5:21",
                "type": ""
              }
            ],
            "src": "14225:120:21"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_t_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(add(memPtr, and(add(_1, 0x1f), not(31))), 0x20)\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(array, array) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), array)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(value0, value0) }\n        value0 := abi_decode_t_string(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value1, value1) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(value1, value1) }\n        value0 := abi_decode_t_string(add(headStart, offset), dataEnd)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_boolt_uint256t_uint8(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value3, value3) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(value3, value3) }\n        value0 := abi_decode_t_string(add(headStart, offset), dataEnd)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_t_bool(value)\n        value1 := value\n        value2 := calldataload(add(headStart, 64))\n        let value_1 := calldataload(add(headStart, 96))\n        if iszero(eq(value_1, and(value_1, 0xff))) { revert(value3, value3) }\n        value3 := value_1\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_t_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_t_string(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_bool__to_t_string_memory_ptr_t_bool__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        tail := abi_encode_t_string(value0, add(headStart, 64))\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint8_t_bool__to_t_string_memory_ptr_t_uint256_t_uint8_t_bool__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 128)\n        tail := abi_encode_t_string(value0, add(headStart, 128))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, 0xff))\n        mstore(add(headStart, 96), iszero(iszero(value3)))\n    }\n    function abi_encode_tuple_t_stringliteral_08f7f19b860a6435dcb3482da5e7773745b04bf817fd4d889727a6dd3dae8840__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Winner address is not set\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0b62f49c2e764ec89feead20bcc961c1ed56ada4c0696cd3b425ec7059801051__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 51)\n        mstore(add(headStart, 64), \"Winner address cannot be set bef\")\n        mstore(add(headStart, 96), \"ore the game starts\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1b9473895da364a7789cb188ddf4707e9ccd10108e8b86a29f646c1c2ddedb59__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Challenger address does not exis\")\n        mstore(add(headStart, 96), \"ts\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4c5d4640df8142cd1bce516517b32af75fc4f9f4196c87f10075d45756729a96__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"Both player address should be un\")\n        mstore(add(headStart, 96), \"ique\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_68b39e6bbbcb2d117ba637aa448afe60242e2493a24dec03fcbf894585f88e1c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Challenger address already exist\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6c747a3591d8de281882c4b0bf919d0370aa943ae4c917debdd549a6f4d800e5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"Challenge acceptor address is no\")\n        mstore(add(headStart, 96), \"t set\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7f7dc31d37f22a0c3019738b1f6a4333a15b2f3e1259556e5217d5220d6a5c8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"A game with specified ID does no\")\n        mstore(add(headStart, 96), \"t exist\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a4b892cd51309e0da45f8f3cba80a0441ed1d715f40ceaa6fcbace1bdb9e9407__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Caller address is not valid\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_bc8d2fed5afaed2003118c6d2d57c190b97774656cbdf614096c6cb13ffe22e6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"WinTime has to be greater than 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_df6e2fc9ec87ba64888d1696bf27ec602b6cc570464535b02f1632bf6809e249__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Sent value should be equal to ga\")\n        mstore(add(headStart, 96), \"me fee\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ea8ebe73274229663547b3915a848de50064adefc44a9d5e0584f9c02299fb2a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"Challenge acceptor address alrea\")\n        mstore(add(headStart, 96), \"dy exists\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ef530aef35b7ebd85e02b04c89bc924be091da1add3fbe37c0d633b4df1bacc7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"A game with specified ID already\")\n        mstore(add(headStart, 96), \" exists\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ff18751b5f206aacdadff35ff3a51ed08756a18f98b91fa5ffe57695be6a2c19__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"Only the winner of the game can \")\n        mstore(add(headStart, 96), \"mint the NFT card\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(sum, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(sum, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_t_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n}",
      "id": 21,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "380:19:17:-:0;487:14035:18;380:19:17;;;-1:-1:-1;487:14035:18;380:19:17;;;344:55;;250:10:19;5621:44:18;;5695:25;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5671:49:18;;;-1:-1:-1;;;;;;5671:49:18;-1:-1:-1;;;;;5671:49:18;;;;;;;;;;5760:30;;5784:4;;5760:30;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5726:64:18;;;-1:-1:-1;;;;;;5726:64:18;-1:-1:-1;;;;;5726:64:18;;;;;;;;;;487:14035;;;;;;;;;-1:-1:-1;1637:1:1;1742:7;:22;867:23:0;877:12;:10;:12::i;:::-;867:9;:23::i;:::-;487:14035:18;;587:96:11;666:10;587:96;:::o;2041:169:0:-;2115:6;;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;;2163:40;;2115:6;;;2131:17;2115:6;;2163:40;;2096:16;;2163:40;2041:169;;:::o;487:14035:18:-;;;;;;;;:::o;:::-;;;;;;;;:::o;14:203:21:-;-1:-1:-1;;;;;178:32:21;;;;160:51;;148:2;133:18;;115:102::o;222:554::-;525:2;507:21;;;564:1;544:18;;;537:29;-1:-1:-1;;;597:2:21;582:18;;575:35;648:3;641:4;626:20;;619:33;;;689:1;668:19;;;661:30;-1:-1:-1;;;722:3:21;707:19;;700:34;766:3;751:19;;497:279::o;:::-;487:14035:18;;;;;;",
  "deployedSourceMap": "487:14035:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10752:453;;;;;;;;;;-1:-1:-1;10752:453:18;;;;;:::i;:::-;;:::i;:::-;;6566:1738;;;;;;:::i;:::-;;:::i;8498:1889::-;;;;;;:::i;:::-;;:::i;5870:104::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1605:92:0;;;;;;;;;;;;;:::i;973:85::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1192:105:17:-;;;;;;;;;;-1:-1:-1;1192:105:17;;;;;:::i;:::-;;:::i;6374:106:18:-;;;;;;;;;;-1:-1:-1;6374:106:18;;;;;:::i;:::-;;:::i;11545:1367::-;;;;;;;;;;-1:-1:-1;11545:1367:18;;;;;:::i;:::-;;:::i;6057:91::-;;;;;;;;;;;;;:::i;1846:189:0:-;;;;;;;;;;-1:-1:-1;1846:189:0;;;;;:::i;:::-;;:::i;10752:453:18:-;1680:1:1;2259:7;;:19;;2251:63;;;;-1:-1:-1;;;2251:63:1;;;;;;;:::i;:::-;;;;;;;;;1680:1;2389:7;:18;1196:12:0::1;:10;:12::i;:::-;-1:-1:-1::0;;;;;1185:23:0::1;:7;:5;:7::i;:::-;-1:-1:-1::0;;;;;1185:23:0::1;;1177:68;;;;-1:-1:-1::0;;;1177:68:0::1;;;;;;;:::i;:::-;10985:1:18::2;10975:7;:11;10967:56;;;;-1:-1:-1::0;;;10967:56:18::2;;;;;;;:::i;:::-;11091:31;11100:13;11115:6;11091:8;:31::i;:::-;11176:13;-1:-1:-1::0;;;;;11168:30:18::2;;11191:6;11168:30;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;;1637:1:1;2562:7;:22;-1:-1:-1;10752:453:18:o;6566:1738::-;1680:1:1;2259:7;;:19;;2251:63;;;;-1:-1:-1;;;2251:63:1;;;;;;;:::i;:::-;1680:1;2389:7;:18;6729:21:18::1;:19;:21::i;:::-;-1:-1:-1::0;;;;;6715:35:18::1;:10;-1:-1:-1::0;;;;;6715:35:18::1;;;6707:75;;;;-1:-1:-1::0;;;6707:75:18::1;;;;;;;:::i;:::-;6792:25;6820:14;6835:6;6820:22;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;;-1:-1:-1;;;;;6820:22:18::1;::::0;-1:-1:-1;6820:22:18::1;6891:21;:19;:21::i;:::-;-1:-1:-1::0;;;;;6870:42:18::1;:17;-1:-1:-1::0;;;;;6870:42:18::1;;;6852:60;;7004:10;7003:11;6995:63;;;;-1:-1:-1::0;;;6995:63:18::1;;;;;;;:::i;:::-;7145:21;7190;:19;:21::i;:::-;-1:-1:-1::0;;;;;7169:42:18::1;:17;-1:-1:-1::0;;;;;7169:42:18::1;;;7145:66;;7230:16;7229:17;7221:63;;;;-1:-1:-1::0;;;7221:63:18::1;;;;;;;:::i;:::-;7431:12;;7418:9;:25;;7410:76;;;;-1:-1:-1::0;;;7410:76:18::1;;;;;;;:::i;:::-;7564:31;7622:21;:19;:21::i;:::-;-1:-1:-1::0;;;;;7598:45:18::1;:12;7611:6;7598:20;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;;-1:-1:-1;;;;;7598:20:18::1;:45;::::0;-1:-1:-1;7598:45:18;7653:80:::1;;;;-1:-1:-1::0;;;7653:80:18::1;;;;;;;:::i;:::-;7743:17;7786:21;:19;:21::i;:::-;-1:-1:-1::0;;;;;7763:44:18::1;:11;7775:6;7763:19;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;;-1:-1:-1;;;;;7763:19:18::1;:44;::::0;::::1;::::0;-1:-1:-1;7879:77:18::1;;;;-1:-1:-1::0;;;7879:77:18::1;;;;;;;:::i;:::-;8022:19;8034:6;8022:11;:19::i;:::-;8187:6;::::0;8155:65:::1;::::0;-1:-1:-1;;;;;8187:6:18::1;8203:4;8210:9;8155:31;:65::i;:::-;8278:10;-1:-1:-1::0;;;;;8266:31:18::1;;8290:6;8266:31;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;;1637:1:1;2562:7;:22;-1:-1:-1;;;;6566:1738:18:o;8498:1889::-;1680:1:1;2259:7;;:19;;2251:63;;;;-1:-1:-1;;;2251:63:1;;;;;;;:::i;:::-;1680:1;2389:7;:18;8659:21:18::1;:19;:21::i;:::-;-1:-1:-1::0;;;;;8645:35:18::1;:10;-1:-1:-1::0;;;;;8645:35:18::1;;;8637:75;;;;-1:-1:-1::0;;;8637:75:18::1;;;;;;;:::i;:::-;8722:25;8750:14;8765:6;8750:22;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;;-1:-1:-1;;;;;8750:22:18::1;::::0;-1:-1:-1;8750:22:18::1;8821:21;:19;:21::i;:::-;-1:-1:-1::0;;;;;8800:42:18::1;:17;-1:-1:-1::0;;;;;8800:42:18::1;;;8782:60;;8933:10;8925:62;;;;-1:-1:-1::0;;;8925:62:18::1;;;;;;;:::i;:::-;9057:21;9102;:19;:21::i;:::-;-1:-1:-1::0;;;;;9081:42:18::1;:17;-1:-1:-1::0;;;;;9081:42:18::1;;;9057:66;;9141:16;9133:63;;;;-1:-1:-1::0;;;9133:63:18::1;;;;;;;:::i;:::-;9343:12;;9330:9;:25;;9322:76;;;;-1:-1:-1::0;;;9322:76:18::1;;;;;;;:::i;:::-;9476:28;9531:21;:19;:21::i;:::-;-1:-1:-1::0;;;;;9507:45:18::1;:12;9520:6;9507:20;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;;-1:-1:-1;;;;;9507:20:18::1;:45;::::0;::::1;::::0;-1:-1:-1;9562:78:18::1;;;;-1:-1:-1::0;;;9562:78:18::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;9720:31:18;::::1;9741:10;9720:31;;9712:80;;;;-1:-1:-1::0;;;9712:80:18::1;;;;;;;:::i;:::-;9864:17;9907:21;:19;:21::i;:::-;-1:-1:-1::0;;;;;9884:44:18::1;:11;9896:6;9884:19;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;;-1:-1:-1;;;;;9884:19:18::1;:44;::::0;::::1;::::0;-1:-1:-1;9938:77:18::1;;;;-1:-1:-1::0;;;9938:77:18::1;;;;;;;:::i;:::-;10089:17;10099:6;10089:9;:17::i;:::-;10249:6;::::0;10217:65:::1;::::0;-1:-1:-1;;;;;10249:6:18::1;10265:4;10272:9;10217:31;:65::i;:::-;10361:10;-1:-1:-1::0;;;;;10331:49:18::1;10342:17;-1:-1:-1::0;;;;;10331:49:18::1;;10373:6;10331:49;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;;1637:1:1;2562:7;:22;-1:-1:-1;;;;8498:1889:18:o;5870:104::-;5946:21;5870:104;:::o;1605:92:0:-;1196:12;:10;:12::i;:::-;-1:-1:-1;;;;;1185:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:0;;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;973:85::-;1045:6;;-1:-1:-1;;;;;1045:6:0;973:85;:::o;1192:105:17:-;1256:34;1274:15;1256:17;:34::i;:::-;1192:105;:::o;6374:106:18:-;1196:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1185:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:0;;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;6448:12:18::1;:25:::0;6374:106::o;11545:1367::-;1680:1:1;2259:7;;:19;;2251:63;;;;-1:-1:-1;;;2251:63:1;;;;;;;:::i;:::-;1680:1;2389:7;:18;11781:21:18::1;:19;:21::i;:::-;-1:-1:-1::0;;;;;11767:35:18::1;:10;-1:-1:-1::0;;;;;11767:35:18::1;;;11759:75;;;;-1:-1:-1::0;;;11759:75:18::1;;;;;;;:::i;:::-;11844:25;11872:14;11887:6;11872:22;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;;-1:-1:-1;;;;;11872:22:18::1;::::0;-1:-1:-1;11872:22:18::1;11943:21;:19;:21::i;:::-;-1:-1:-1::0;;;;;11922:42:18::1;:17;-1:-1:-1::0;;;;;11922:42:18::1;;;11904:60;;12055:10;12047:62;;;;-1:-1:-1::0;;;12047:62:18::1;;;;;;;:::i;:::-;12187:28;12242:21;:19;:21::i;:::-;-1:-1:-1::0;;;;;12218:45:18::1;:12;12231:6;12218:20;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;;-1:-1:-1;;;;;12218:20:18::1;:45;;::::0;-1:-1:-1;12218:45:18;12273:73:::1;;;;-1:-1:-1::0;;;12273:73:18::1;;;;;;;:::i;:::-;12356:21;12380:11;12392:6;12380:19;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;;-1:-1:-1;;;;;12380:19:18::1;::::0;-1:-1:-1;12380:19:18::1;12446:21;:19;:21::i;:::-;-1:-1:-1::0;;;;;12429:38:18::1;:13;-1:-1:-1::0;;;;;12429:38:18::1;;;12409:58;;12547:12;12539:50;;;;-1:-1:-1::0;;;12539:50:18::1;;;;;;;:::i;:::-;12683:10;-1:-1:-1::0;;;;;12683:27:18;::::1;;12675:89;;;;-1:-1:-1::0;;;12675:89:18::1;;;;;;;:::i;:::-;12837:68;12855:6;12863:13;12878:6;12886:7;12895:9;12837:17;:68::i;:::-;-1:-1:-1::0;;1637:1:1;2562:7;:22;-1:-1:-1;;;;;;;11545:1367:18:o;6057:91::-;6129:12;;6057:91;:::o;1846:189:0:-;1196:12;:10;:12::i;:::-;-1:-1:-1;;;;;1185:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:0;;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:0;::::1;1926:73;;;;-1:-1:-1::0;;;1926:73:0::1;;;;;;;:::i;:::-;2009:19;2019:8;2009:9;:19::i;587:96:11:-:0;666:10;587:96;:::o;13615:123:18:-;13718:13;13696:11;13708:6;13696:19;;;;;;:::i;:::-;;;;;;;;;;;;;;:35;;-1:-1:-1;;;;;13696:35:18;;;;-1:-1:-1;;;;;;13696:35:18;;;;;;;;;-1:-1:-1;;13615:123:18:o;1165:89:19:-;1211:7;1165:89;:::o;13058:115:18:-;13156:10:::1;13131:14;13146:6;13131:22;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:35;;-1:-1:-1;;;;;13131:35:18;;;::::1;-1:-1:-1::0;;;;;;13131:35:18;;::::1;::::0;;;::::1;::::0;;794:20:17;:8;:18;:20::i;1955:310:5:-;2081:20;2146:5;2104;-1:-1:-1;;;;;2104:15:5;;2128:4;2135:7;2104:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:47;;;;:::i;:::-;2081:70;;2161:97;2181:5;2211:22;;;2235:7;2244:12;2188:69;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2188:69:5;;;;;;;;;;;;;;-1:-1:-1;;;;;2188:69:5;-1:-1:-1;;;;;;2188:69:5;;;;;;;;;;2161:19;:97::i;:::-;1955:310;;;;:::o;13312:99:18:-;13394:10;13371:12;13384:6;13371:20;;;;;;:::i;:::-;;;;;;;;;;;;;;:33;;-1:-1:-1;;;;;13371:33:18;;;;-1:-1:-1;;;;;;13371:33:18;;;;;;;;;-1:-1:-1;13312:99:18:o;2041:169:0:-;2115:6;;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;;2163:40;;2115:6;;;2131:17;2115:6;;2163:40;;2096:16;;2163:40;2041:169;;:::o;14136:384:18:-;14391:11;;:66;;-1:-1:-1;;;14391:66:18;;-1:-1:-1;;;;;14391:11:18;;;;:30;;:66;;14422:6;;14430:7;;14439:9;;14450:6;;14391:66;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14483:13;-1:-1:-1;;;;;14472:41:18;;14498:6;14506;14472:41;;;;;;;:::i;:::-;;;;;;;;14136:384;;;;;:::o;891:123:12:-;978:19;;996:1;978:19;;;891:123::o;3140:706:5:-;3559:23;3585:69;3613:4;3585:69;;;;;;;;;;;;;;;;;3593:5;-1:-1:-1;;;;;3585:27:5;;;:69;;;;;:::i;:::-;3668:17;;3559:95;;-1:-1:-1;3668:21:5;3664:176;;3763:10;3752:30;;;;;;;;;;;;:::i;:::-;3744:85;;;;-1:-1:-1;;;3744:85:5;;;;;;;:::i;:::-;3140:706;;;:::o;3461:223:10:-;3594:12;3625:52;3647:6;3655:4;3661:1;3664:12;3625:21;:52::i;:::-;3618:59;;3461:223;;;;;;:::o;4548:499::-;4713:12;4770:5;4745:21;:30;;4737:81;;;;-1:-1:-1;;;4737:81:10;;;;;;;:::i;:::-;4836:18;4847:6;4836:10;:18::i;:::-;4828:60;;;;-1:-1:-1;;;4828:60:10;;;;;;;:::i;:::-;4900:12;4914:23;4941:6;-1:-1:-1;;;;;4941:11:10;4960:5;4967:4;4941:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4899:73;;;;4989:51;5006:7;5015:10;5027:12;4989:16;:51::i;:::-;4982:58;4548:499;-1:-1:-1;;;;;;;4548:499:10:o;718:377::-;1034:20;;1080:8;;718:377;;;;:::o;7161:692::-;7307:12;7335:7;7331:516;;;-1:-1:-1;7365:10:10;7358:17;;7331:516;7476:17;;:21;7472:365;;7670:10;7664:17;7730:15;7717:10;7713:2;7709:19;7702:44;7619:145;7809:12;7802:20;;-1:-1:-1;;;7802:20:10;;;;;;;;:::i;14:175:21:-;84:20;;-1:-1:-1;;;;;133:31:21;;123:42;;113:2;;179:1;176;169:12;194:713;;292:3;285:4;277:6;273:17;269:27;259:2;;314:5;307;300:20;259:2;354:6;341:20;380:18;417:2;413;410:10;407:2;;;423:18;;:::i;:::-;472:2;466:9;541:2;522:13;;-1:-1:-1;;518:27:21;506:40;;548:4;502:51;568:18;;;588:22;;;565:46;562:2;;;614:18;;:::i;:::-;650:2;643:22;674:18;;;711:15;;;728:4;707:26;704:35;-1:-1:-1;701:2:21;;;756:5;749;742:20;701:2;824;817:4;809:6;805:17;798:4;790:6;786:17;773:54;847:15;;;864:4;843:26;836:41;;;;851:6;249:658;-1:-1:-1;;;249:658:21:o;912:198::-;;1024:2;1012:9;1003:7;999:23;995:32;992:2;;;1045:6;1037;1030:22;992:2;1073:31;1094:9;1073:31;:::i;1115:257::-;;1235:2;1223:9;1214:7;1210:23;1206:32;1203:2;;;1256:6;1248;1241:22;1203:2;1293:9;1287:16;1312:30;1336:5;1312:30;:::i;1377:344::-;;1499:2;1487:9;1478:7;1474:23;1470:32;1467:2;;;1520:6;1512;1505:22;1467:2;1565:9;1552:23;1598:18;1590:6;1587:30;1584:2;;;1635:6;1627;1620:22;1584:2;1663:52;1707:7;1698:6;1687:9;1683:22;1663:52;:::i;:::-;1653:62;1457:264;-1:-1:-1;;;;1457:264:21:o;1726:488::-;;;;1882:2;1870:9;1861:7;1857:23;1853:32;1850:2;;;1903:6;1895;1888:22;1850:2;1948:9;1935:23;1981:18;1973:6;1970:30;1967:2;;;2018:6;2010;2003:22;1967:2;2046:52;2090:7;2081:6;2070:9;2066:22;2046:52;:::i;:::-;2036:62;;;2117:40;2153:2;2142:9;2138:18;2117:40;:::i;:::-;2107:50;;2204:2;2193:9;2189:18;2176:32;2166:42;;1840:374;;;;;:::o;2219:719::-;;;;;2387:3;2375:9;2366:7;2362:23;2358:33;2355:2;;;2409:6;2401;2394:22;2355:2;2454:9;2441:23;2487:18;2479:6;2476:30;2473:2;;;2524:6;2516;2509:22;2473:2;2552:52;2596:7;2587:6;2576:9;2572:22;2552:52;:::i;:::-;2542:62;;;2654:2;2643:9;2639:18;2626:32;2667:30;2691:5;2667:30;:::i;:::-;2716:5;-1:-1:-1;2768:2:21;2753:18;;2740:32;;-1:-1:-1;2824:2:21;2809:18;;2796:32;2872:4;2859:18;;2847:31;;2837:2;;2897:6;2889;2882:22;2837:2;2345:593;;;;-1:-1:-1;2345:593:21;;-1:-1:-1;;2345:593:21:o;2943:190::-;;3055:2;3043:9;3034:7;3030:23;3026:32;3023:2;;;3076:6;3068;3061:22;3023:2;-1:-1:-1;3104:23:21;;3013:120;-1:-1:-1;3013:120:21:o;3138:194::-;;3261:2;3249:9;3240:7;3236:23;3232:32;3229:2;;;3282:6;3274;3267:22;3229:2;-1:-1:-1;3310:16:21;;3219:113;-1:-1:-1;3219:113:21:o;3337:260::-;;3419:5;3413:12;3446:6;3441:3;3434:19;3462:63;3518:6;3511:4;3506:3;3502:14;3495:4;3488:5;3484:16;3462:63;:::i;:::-;3579:2;3558:15;-1:-1:-1;;3554:29:21;3545:39;;;;3586:4;3541:50;;3389:208;-1:-1:-1;;3389:208:21:o;3602:274::-;;3769:6;3763:13;3785:53;3831:6;3826:3;3819:4;3811:6;3807:17;3785:53;:::i;:::-;3854:16;;;;;3739:137;-1:-1:-1;;3739:137:21:o;4162:203::-;-1:-1:-1;;;;;4326:32:21;;;;4308:51;;4296:2;4281:18;;4263:102::o;4370:304::-;-1:-1:-1;;;;;4600:15:21;;;4582:34;;4652:15;;4647:2;4632:18;;4625:43;4532:2;4517:18;;4499:175::o;4679:274::-;-1:-1:-1;;;;;4871:32:21;;;;4853:51;;4935:2;4920:18;;4913:34;4841:2;4826:18;;4808:145::o;4958:222::-;;5107:2;5096:9;5089:21;5127:47;5170:2;5159:9;5155:18;5147:6;5127:47;:::i;5185:303::-;;5356:2;5345:9;5338:21;5376:47;5419:2;5408:9;5404:18;5396:6;5376:47;:::i;:::-;5368:55;;5473:6;5466:14;5459:22;5454:2;5443:9;5439:18;5432:50;5328:160;;;;;:::o;5493:454::-;;5716:3;5705:9;5698:22;5737:48;5780:3;5769:9;5765:19;5757:6;5737:48;:::i;:::-;5816:2;5801:18;;5794:34;;;;-1:-1:-1;5876:4:21;5864:17;;;;5859:2;5844:18;;5837:45;5925:14;5918:22;5913:2;5898:18;;;5891:50;5729:56;5688:259;-1:-1:-1;5688:259:21:o;5952:349::-;6154:2;6136:21;;;6193:2;6173:18;;;6166:30;6232:27;6227:2;6212:18;;6205:55;6292:2;6277:18;;6126:175::o;6306:415::-;6508:2;6490:21;;;6547:2;6527:18;;;6520:30;6586:34;6581:2;6566:18;;6559:62;-1:-1:-1;;;6652:2:21;6637:18;;6630:49;6711:3;6696:19;;6480:241::o;6726:398::-;6928:2;6910:21;;;6967:2;6947:18;;;6940:30;7006:34;7001:2;6986:18;;6979:62;-1:-1:-1;;;7072:2:21;7057:18;;7050:32;7114:3;7099:19;;6900:224::o;7129:402::-;7331:2;7313:21;;;7370:2;7350:18;;;7343:30;7409:34;7404:2;7389:18;;7382:62;-1:-1:-1;;;7475:2:21;7460:18;;7453:36;7521:3;7506:19;;7303:228::o;7536:400::-;7738:2;7720:21;;;7777:2;7757:18;;;7750:30;7816:34;7811:2;7796:18;;7789:62;-1:-1:-1;;;7882:2:21;7867:18;;7860:34;7926:3;7911:19;;7710:226::o;7941:402::-;8143:2;8125:21;;;8182:2;8162:18;;;8155:30;8221:34;8216:2;8201:18;;8194:62;-1:-1:-1;;;8287:2:21;8272:18;;8265:36;8333:3;8318:19;;8115:228::o;8348:397::-;8550:2;8532:21;;;8589:2;8569:18;;;8562:30;8628:34;8623:2;8608:18;;8601:62;-1:-1:-1;;;8694:2:21;8679:18;;8672:31;8735:3;8720:19;;8522:223::o;8750:401::-;8952:2;8934:21;;;8991:2;8971:18;;;8964:30;9030:34;9025:2;9010:18;;9003:62;-1:-1:-1;;;9096:2:21;9081:18;;9074:35;9141:3;9126:19;;8924:227::o;9156:403::-;9358:2;9340:21;;;9397:2;9377:18;;;9370:30;9436:34;9431:2;9416:18;;9409:62;-1:-1:-1;;;9502:2:21;9487:18;;9480:37;9549:3;9534:19;;9330:229::o;9564:356::-;9766:2;9748:21;;;9785:18;;;9778:30;9844:34;9839:2;9824:18;;9817:62;9911:2;9896:18;;9738:182::o;9925:351::-;10127:2;10109:21;;;10166:2;10146:18;;;10139:30;10205:29;10200:2;10185:18;;10178:57;10267:2;10252:18;;10099:177::o;10281:356::-;10483:2;10465:21;;;10502:18;;;10495:30;10561:34;10556:2;10541:18;;10534:62;10628:2;10613:18;;10455:182::o;10642:353::-;10844:2;10826:21;;;10883:2;10863:18;;;10856:30;10922:31;10917:2;10902:18;;10895:59;10986:2;10971:18;;10816:179::o;11000:402::-;11202:2;11184:21;;;11241:2;11221:18;;;11214:30;11280:34;11275:2;11260:18;;11253:62;-1:-1:-1;;;11346:2:21;11331:18;;11324:36;11392:3;11377:19;;11174:228::o;11407:406::-;11609:2;11591:21;;;11648:2;11628:18;;;11621:30;11687:34;11682:2;11667:18;;11660:62;-1:-1:-1;;;11753:2:21;11738:18;;11731:40;11803:3;11788:19;;11581:232::o;11818:405::-;12020:2;12002:21;;;12059:2;12039:18;;;12032:30;12098:34;12093:2;12078:18;;12071:62;-1:-1:-1;;;12164:2:21;12149:18;;12142:39;12213:3;12198:19;;11992:231::o;12228:355::-;12430:2;12412:21;;;12469:2;12449:18;;;12442:30;12508:33;12503:2;12488:18;;12481:61;12574:2;12559:18;;12402:181::o;12588:403::-;12790:2;12772:21;;;12829:2;12809:18;;;12802:30;12868:34;12863:2;12848:18;;12841:62;-1:-1:-1;;;12934:2:21;12919:18;;12912:37;12981:3;12966:19;;12762:229::o;12996:413::-;13198:2;13180:21;;;13237:2;13217:18;;;13210:30;13276:34;13271:2;13256:18;;13249:62;-1:-1:-1;;;13342:2:21;13327:18;;13320:47;13399:3;13384:19;;13170:239::o;13414:177::-;13560:25;;;13548:2;13533:18;;13515:76::o;13596:229::-;;13667:1;13663:6;13660:1;13657:13;13654:2;;;-1:-1:-1;;;13693:33:21;;13749:4;13746:1;13739:15;13779:4;13700:3;13767:17;13654:2;-1:-1:-1;13810:9:21;;13644:181::o;13830:258::-;13902:1;13912:113;13926:6;13923:1;13920:13;13912:113;;;14002:11;;;13996:18;13983:11;;;13976:39;13948:2;13941:10;13912:113;;;14043:6;14040:1;14037:13;14034:2;;;-1:-1:-1;;14078:1:21;14060:16;;14053:27;13883:205::o;14093:127::-;14154:10;14149:3;14145:20;14142:1;14135:31;14185:4;14182:1;14175:15;14209:4;14206:1;14199:15;14225:120;14313:5;14306:13;14299:21;14292:5;14289:32;14279:2;;14335:1;14332;14325:12",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport './BaseContract.sol';\nimport \"./NFTContract.sol\";\nimport './Helpers.sol';\n\ncontract GameContract is BaseContract {\n    \n    using SafeERC20 for IERC20;\n    using Address for address;\n    \n    event GameCreated(address indexed challengerAddress, string gameId);\n    event GameJoined(address indexed challengerAddress, address indexed challengeAcceptorAddress, string gameId);\n    event GameEnd(address indexed winnerAddress, string gameId);\n    event NFTCreated(address indexed winnerAddress, string gameId, bool isRare);\n    \n    enum ActionType {\n        CreateGame,\n        JoinGame,\n        EndGame\n    }\n    \n    // modifier validGame(uint gameId, uint valuePassed, ActionType action, address _winnerAddress) {\n    //     // Check and verify if the caller address is valid\n    //     require(msg.sender != Helpers.nullAddress(), \"Caller address is not valid\");\n\n    //     AddressMapping memory addressMapping = _games[gameId];\n    //     address challengerAddress = addressMapping.challengerAddress;\n    //     address challengeAcceptorAddress = addressMapping.challengeAcceptorAddress;\n    //     address winnerAddress = addressMapping.winnerAddress;\n    //     bool gameExists = challengerAddress != Helpers.nullAddress() || challengeAcceptorAddress != Helpers.nullAddress() || winnerAddress != Helpers.nullAddress();\n\n    //     if (action == ActionType.CreateGame) {\n    //         // Check and verify if a game with specified ID  already exists.\n    //         require(!gameExists, \"A game with specified ID already exists\");\n    //         // Check and verify if a value equal to or greater than `_baseGameFee` was sent along with the transaction.\n    //         require(valuePassed == _baseGameFee, \"Sent value should be equal to game fee\");\n    //         // Check and verify if the winner address is not set.\n    //         require(challengerAddress == Helpers.nullAddress(), \"Challenger address is already set\");\n    //         // Check and verify if challenge acceptor address is not set yet.\n    //         require(challengeAcceptorAddress == Helpers.nullAddress(), \"Challenge acceptor address is already set\");\n    //         // Check and verify if the winner address is not set.\n    //         require(winnerAddress == Helpers.nullAddress(), \"Winner address cannot be set before the game ends\");\n    //     } else if (action == ActionType.JoinGame) {\n    //         // Check and verify if a game currently exists for specified `gameId`.\n    //         require(gameExists, \"A game with specified ID does not exists\");\n    //         // Check and verify if challenger address is already set for the game.\n    //         require(challengerAddress != Helpers.nullAddress(), \"No challenger address set for the game\");\n    //         // Check and verify if challenger address is not equal to caller address.\n    //         require(challengerAddress != msg.sender, \"Challenger and challenge acceptor address cannot be same address\");\n    //         // Check and verify if challenge acceptor address is not equal to caller address.\n    //         require(challengeAcceptorAddress != msg.sender, \"The player already accepted the challenge\");\n    //         // Check and verify if challenge acceptor address is not set yet.\n    //         require(challengeAcceptorAddress == Helpers.nullAddress(), \"A player already accepted this challenge\");\n    //         // Check and verify if a value equal to or greater than `_baseGameFee` was sent along with the transaction.\n    //         require(valuePassed == _baseGameFee, \"Sent value should be equal to game fee\");\n    //         // Check and verify if the winner address is not set.\n    //         require(winnerAddress == Helpers.nullAddress(), \"Winner address cannot be set before the game ends\");\n    //     } else if (action == ActionType.EndGame) {\n    //         // Check and verify if a game exists for the specified `gameId`.\n    //         require(gameExists, \"A game with specified ID does not exists.\");\n    //         // Check and verify if challengerAddress is valid.\n    //         require(challengerAddress != Helpers.nullAddress(), \"Challenger address is not valid.\");\n    //         // Check and verify if challenge acceptor address is valid.\n    //         require(challengeAcceptorAddress != Helpers.nullAddress(), \"Challenge acceptor address is not valid\");\n    //         // Check and verify if the winner address is not set.\n    //         require(winnerAddress == Helpers.nullAddress(), \"Winner address is already set\");\n    //         // Check and verify if the passed _winnerAddress is valid\n    //         require(_winnerAddress != Helpers.nullAddress(), \"Winner address is not valid\");\n    //         // Check and verify if passed _winnerAddress is equal to either player of the game\n    //         require(_winnerAddress == challengerAddress || _winnerAddress == challengeAcceptorAddress, \"Winner address does not belong to either player of the game\");\n    //     } else {\n    //         require(false, \"Action invalid.\");\n    //     }\n    //     _;\n    // }\n\n    mapping(string => address) private _challengerMap;\n    mapping(string => address) private _opponentMap;\n    mapping(string => address) private _winnersMap;\n\n    uint private _baseGameFee = Helpers.GAME_FEE;\n    IERC20 private _token = new ERC20(\"ether\", \"ETH\");\n    NFTContract private nftContract = new NFTContract(address(this));\n    \n    /**\n     * @dev Call this to get the current balance of \n     */\n    function getContractBalance() external view returns (uint) {\n        return address(this).balance;\n    }\n    \n    /**\n     * @dev Call this to get the current `_baseGameFee` \n     */\n    function getBaseGameFee() external view returns (uint) {\n        return _baseGameFee;\n    }\n    \n    /**\n     * @dev Call this to update the current base game fee. This method can only be called via owner of this contract.\n     *\n     * @param newGameFee new fee value to be used for creating a new game.\n     */\n    function updateBaseGameFees(uint newGameFee) external onlyOwner() {\n      _baseGameFee = newGameFee;\n    }\n    \n    /**\n    * @dev Create a new game by depositing a gameFee.\n    * \n    */\n    function createGame(string memory gameId) external payable nonReentrant {\n        // Check and verify if the caller address is valid\n        require(msg.sender != Helpers.nullAddress(), \"Caller address is not valid\");\n        address challengerAddress = _challengerMap[gameId];\n        bool gameExists = challengerAddress != Helpers.nullAddress();\n        // Check and verify if a game with specified ID  already exists.\n        require(!gameExists, \"A game with specified ID already exists\");\n        // Check and verify if a challenger address does not already exists.\n        bool challengerExists = challengerAddress != Helpers.nullAddress();\n        require(!challengerExists, \"Challenger address already exists\");\n        // Check and verify if a value equal to or greater than `_baseGameFee` was sent along with the transaction.\n        require(msg.value >= _baseGameFee, \"Sent value should be equal to game fee\");\n        // Check and verify if the challenge acceptor address exist\n        bool challengeAcceptorNotExists = _opponentMap[gameId] == Helpers.nullAddress();\n        require(challengeAcceptorNotExists, \"Challenge acceptor address already exists\");\n        bool winnerExists = _winnersMap[gameId] != Helpers.nullAddress();\n        // Check and verify if the winner address is not set.\n        require(!winnerExists, \"Winner address cannot be set before the game starts\");\n        // Create a new game after the funds are locked\n        _createGame(gameId);\n        // Safe increase allowance for this contract to spend `_baseGameFee` after the game is finished\n        SafeERC20.safeIncreaseAllowance(_token, address(this), msg.value);\n        // Emit new game event\n        emit GameCreated(msg.sender, gameId);\n    }\n    \n    /**\n     * @dev Call this to join a game with provided `gameId`. Throw an exeption if no game for this `gameId` exists.\n     * \n     * @param gameId id of game to be ended\n     */\n    function joinGame(string memory gameId) external payable nonReentrant {\n        // Check and verify if the caller address is valid\n        require(msg.sender != Helpers.nullAddress(), \"Caller address is not valid\");\n        address challengerAddress = _challengerMap[gameId];\n        bool gameExists = challengerAddress != Helpers.nullAddress();\n        // Check and verify if a game with specified ID  already exists.\n        require(gameExists, \"A game with specified ID does not exist\");\n        // Check and verify if a challenger address exists.\n        bool challengerExists = challengerAddress != Helpers.nullAddress();\n        require(challengerExists, \"Challenger address does not exists\");\n        // Check and verify if a value equal to or greater than `_baseGameFee` was sent along with the transaction.\n        require(msg.value >= _baseGameFee, \"Sent value should be equal to game fee\");\n        // Check and verify if the challenge acceptor address exist\n        bool challengeAcceptorExists = _opponentMap[gameId] != Helpers.nullAddress();\n        require(!challengeAcceptorExists, \"Challenge acceptor address already exists\");\n        // Check and verify if both player address are unique\n        require(challengerAddress != msg.sender, \"Both player address should be unique\");\n        // Check and verify if the winner address is not set.\n        bool winnerExists = _winnersMap[gameId] != Helpers.nullAddress();\n        require(!winnerExists, \"Winner address cannot be set before the game starts\");\n        // Join an already created game with specified `gameId`\n        _joinGame(gameId);\n        // Safe increase allowance for this contract to spend `msg.value` after the game is finished\n        SafeERC20.safeIncreaseAllowance(_token, address(this), msg.value);\n        // Emit game joined event\n        emit GameJoined(challengerAddress, msg.sender, gameId);\n    }\n    \n    /**\n     * @dev Call this to end a game with specified `gameId`. A game would end either when one player wins or if no \n     * player accepts a challenge within 30 minutes.\n     * \n     * @param gameId id of this game\n     * @param winnerAddress address of player who won the game\n     * @param winTime time taken (in seconds) to win the game\n     */\n    function endGame(\n        string memory gameId, \n        address winnerAddress, \n        uint winTime\n    ) external nonReentrant onlyOwner() {\n        // Check and verify if the `winTime` is greater than 0\n        require(winTime > 0, \"WinTime has to be greater than 0\");\n        // End the current game and update winner address\n        _endGame(winnerAddress, gameId);\n        // Emit end game event\n        emit GameEnd(winnerAddress, gameId);\n    }\n    \n    /**\n     * @dev Winner of the game can call this to mint the winning card NFT.\n     *\n     * @param gameId id of this game\n     * @param isRare true if this NFT is rare\n     * @param winTime time taken (in seconds) to win the game\n     * @param killScore count of longest consecutive kill by one single piece on board\n     */\n    function mintNFT(\n        string memory gameId, \n        bool isRare,\n        uint winTime, \n        uint8 killScore\n    ) external nonReentrant {\n        // Check and verify if the caller address is valid\n        require(msg.sender != Helpers.nullAddress(), \"Caller address is not valid\");\n        address challengerAddress = _challengerMap[gameId];\n        bool gameExists = challengerAddress != Helpers.nullAddress();\n        // Check and verify if a game with specified ID  already exists.\n        require(gameExists, \"A game with specified ID does not exist\");\n        // Check and verify if the challenge acceptor address exist\n        bool challengeAcceptorExists = _opponentMap[gameId] != Helpers.nullAddress();\n        require(challengeAcceptorExists, \"Challenge acceptor address is not set\");\n        address winnerAddress = _winnersMap[gameId];\n        bool winnerExists = winnerAddress != Helpers.nullAddress();\n        // Check and verify if the winner address is not set.\n        require(winnerExists, \"Winner address is not set\");\n        // Check and verify if the caller address matches to winner address\n        require(msg.sender == winnerAddress, \"Only the winner of the game can mint the NFT card\");\n        // Create and mint NFT and assign it to winner address\n        _createAndMintNFT(gameId, winnerAddress, isRare, winTime, killScore);\n    }\n    \n    /**\n     * @dev Create a new game and update the mapping for `games`.\n     * \n     * @param gameId id of game to be started\n     */\n    function _createGame(string memory gameId) private increment() {\n        _challengerMap[gameId] = msg.sender;\n    }\n    \n    /**\n     * @dev Call this to join a game with provided `gameId`.\n     * \n     * @param gameId id of game to be ended\n     */\n    function _joinGame(string memory gameId) private {\n        _opponentMap[gameId] = msg.sender;\n    }\n    \n    /**\n     * @dev Call this to set the `winnerAddress` when a game finishes\n     * \n     * @param winnerAddress address of player who won the game\n     * @param gameId id of this game\n     */\n    function _endGame(address winnerAddress, string memory gameId) private {\n        _winnersMap[gameId] = winnerAddress;\n    }\n\n    /**\n     * @dev Call this method when the game ends to create and mint NFT.\n     * \n     * @param gameId id of this game.\n     * @param winnerAddress address of player who won the game\n     * @param isRare true if this NFT is rare\n     * @param winTime time taken (in seconds) to win the game\n     * @param killScore count of longest consecutive kill by one single piece on board\n     */\n    function _createAndMintNFT(\n        string memory gameId, \n        address winnerAddress, \n        bool isRare,\n        uint winTime, \n        uint8 killScore\n    ) private {\n        // Create nft here and once created then emit NFTCreated event \n        nftContract.createAndMintToken(gameId, winTime, killScore, isRare);\n        emit NFTCreated(winnerAddress, gameId, isRare);\n    }\n}",
  "sourcePath": "/Users/saurabh-macbook/Documents/dapps/chkmate/frontend_base_dapp/contracts/GameContract.sol",
  "ast": {
    "absolutePath": "project:/contracts/GameContract.sol",
    "exportedSymbols": {
      "Address": [
        2290
      ],
      "BaseContract": [
        2990
      ],
      "Context": [
        2312
      ],
      "Counters": [
        2386
      ],
      "ERC165": [
        2613
      ],
      "ERC20": [
        689
      ],
      "ERC721": [
        1832
      ],
      "GameContract": [
        3551
      ],
      "Helpers": [
        3651
      ],
      "IERC165": [
        2625
      ],
      "IERC20": [
        767
      ],
      "IERC20Metadata": [
        792
      ],
      "IERC721": [
        1948
      ],
      "IERC721Metadata": [
        1993
      ],
      "IERC721Receiver": [
        1966
      ],
      "NFTContract": [
        4027
      ],
      "Ownable": [
        103
      ],
      "ReentrancyGuard": [
        143
      ],
      "SafeERC20": [
        1016
      ],
      "SafeMath": [
        2937
      ],
      "Strings": [
        2589
      ]
    },
    "id": 3552,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2992,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:18"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 2993,
        "nodeType": "ImportDirective",
        "scope": 3552,
        "sourceUnit": 1017,
        "src": "58:65:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 2994,
        "nodeType": "ImportDirective",
        "scope": 3552,
        "sourceUnit": 690,
        "src": "124:55:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 2995,
        "nodeType": "ImportDirective",
        "scope": 3552,
        "sourceUnit": 768,
        "src": "180:56:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 2996,
        "nodeType": "ImportDirective",
        "scope": 3552,
        "sourceUnit": 144,
        "src": "237:62:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "id": 2997,
        "nodeType": "ImportDirective",
        "scope": 3552,
        "sourceUnit": 2291,
        "src": "300:51:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2998,
        "nodeType": "ImportDirective",
        "scope": 3552,
        "sourceUnit": 104,
        "src": "352:52:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/BaseContract.sol",
        "file": "./BaseContract.sol",
        "id": 2999,
        "nodeType": "ImportDirective",
        "scope": 3552,
        "sourceUnit": 2991,
        "src": "405:28:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/NFTContract.sol",
        "file": "./NFTContract.sol",
        "id": 3000,
        "nodeType": "ImportDirective",
        "scope": 3552,
        "sourceUnit": 4028,
        "src": "434:27:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Helpers.sol",
        "file": "./Helpers.sol",
        "id": 3001,
        "nodeType": "ImportDirective",
        "scope": 3552,
        "sourceUnit": 3652,
        "src": "462:23:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3002,
              "name": "BaseContract",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2990,
              "src": "512:12:18"
            },
            "id": 3003,
            "nodeType": "InheritanceSpecifier",
            "src": "512:12:18"
          }
        ],
        "contractDependencies": [
          103,
          143,
          689,
          2312,
          2990,
          4027
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3551,
        "linearizedBaseContracts": [
          3551,
          2990,
          103,
          2312,
          143
        ],
        "name": "GameContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3007,
            "libraryName": {
              "id": 3004,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1016,
              "src": "542:9:18"
            },
            "nodeType": "UsingForDirective",
            "src": "536:27:18",
            "typeName": {
              "id": 3006,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3005,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 767,
                "src": "556:6:18"
              },
              "referencedDeclaration": 767,
              "src": "556:6:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$767",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 3010,
            "libraryName": {
              "id": 3008,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2290,
              "src": "574:7:18"
            },
            "nodeType": "UsingForDirective",
            "src": "568:26:18",
            "typeName": {
              "id": 3009,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "586:7:18",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "anonymous": false,
            "id": 3016,
            "name": "GameCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3015,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3012,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "challengerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3016,
                  "src": "622:33:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3011,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "622:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3014,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "gameId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3016,
                  "src": "657:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3013,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "657:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "621:50:18"
            },
            "src": "604:68:18"
          },
          {
            "anonymous": false,
            "id": 3024,
            "name": "GameJoined",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3023,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3018,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "challengerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3024,
                  "src": "694:33:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3017,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "694:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3020,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "challengeAcceptorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3024,
                  "src": "729:40:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3019,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "729:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3022,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "gameId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3024,
                  "src": "771:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3021,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "771:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "693:92:18"
            },
            "src": "677:109:18"
          },
          {
            "anonymous": false,
            "id": 3030,
            "name": "GameEnd",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3029,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3026,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "winnerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3030,
                  "src": "805:29:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3025,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "805:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3028,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "gameId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3030,
                  "src": "836:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3027,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "836:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "804:46:18"
            },
            "src": "791:60:18"
          },
          {
            "anonymous": false,
            "id": 3038,
            "name": "NFTCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3037,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3032,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "winnerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3038,
                  "src": "873:29:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3031,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "873:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3034,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "gameId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3038,
                  "src": "904:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3033,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "904:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3036,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "isRare",
                  "nodeType": "VariableDeclaration",
                  "scope": 3038,
                  "src": "919:11:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3035,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "919:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "872:59:18"
            },
            "src": "856:76:18"
          },
          {
            "canonicalName": "GameContract.ActionType",
            "id": 3042,
            "members": [
              {
                "id": 3039,
                "name": "CreateGame",
                "nodeType": "EnumValue",
                "src": "968:10:18"
              },
              {
                "id": 3040,
                "name": "JoinGame",
                "nodeType": "EnumValue",
                "src": "988:8:18"
              },
              {
                "id": 3041,
                "name": "EndGame",
                "nodeType": "EnumValue",
                "src": "1006:7:18"
              }
            ],
            "name": "ActionType",
            "nodeType": "EnumDefinition",
            "src": "942:77:18"
          },
          {
            "constant": false,
            "id": 3046,
            "mutability": "mutable",
            "name": "_challengerMap",
            "nodeType": "VariableDeclaration",
            "scope": 3551,
            "src": "5460:49:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 3045,
              "keyType": {
                "id": 3043,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "5468:6:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "5460:26:18",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 3044,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "5478:7:18",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3050,
            "mutability": "mutable",
            "name": "_opponentMap",
            "nodeType": "VariableDeclaration",
            "scope": 3551,
            "src": "5515:47:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 3049,
              "keyType": {
                "id": 3047,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "5523:6:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "5515:26:18",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 3048,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "5533:7:18",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3054,
            "mutability": "mutable",
            "name": "_winnersMap",
            "nodeType": "VariableDeclaration",
            "scope": 3551,
            "src": "5568:46:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 3053,
              "keyType": {
                "id": 3051,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "5576:6:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "5568:26:18",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 3052,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "5586:7:18",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3058,
            "mutability": "mutable",
            "name": "_baseGameFee",
            "nodeType": "VariableDeclaration",
            "scope": 3551,
            "src": "5621:44:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3055,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "5621:4:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "expression": {
                "id": 3056,
                "name": "Helpers",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 3651,
                "src": "5649:7:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_Helpers_$3651_$",
                  "typeString": "type(library Helpers)"
                }
              },
              "id": 3057,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "memberName": "GAME_FEE",
              "nodeType": "MemberAccess",
              "referencedDeclaration": 3561,
              "src": "5649:16:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3067,
            "mutability": "mutable",
            "name": "_token",
            "nodeType": "VariableDeclaration",
            "scope": 3551,
            "src": "5671:49:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$767",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 3060,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3059,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 767,
                "src": "5671:6:18"
              },
              "referencedDeclaration": 767,
              "src": "5671:6:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$767",
                "typeString": "contract IERC20"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "6574686572",
                  "id": 3064,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "5705:7:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_13730b0d8e1bdbdc293b62ba010b1eede56b412ea2980defabe3d0b6c7844c3a",
                    "typeString": "literal_string \"ether\""
                  },
                  "value": "ether"
                },
                {
                  "hexValue": "455448",
                  "id": 3065,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "5714:5:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_aaaebeba3810b1e6b70781f14b2d72c1cb89c0b2b320c43bb67ff79f562f5ff4",
                    "typeString": "literal_string \"ETH\""
                  },
                  "value": "ETH"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_13730b0d8e1bdbdc293b62ba010b1eede56b412ea2980defabe3d0b6c7844c3a",
                    "typeString": "literal_string \"ether\""
                  },
                  {
                    "typeIdentifier": "t_stringliteral_aaaebeba3810b1e6b70781f14b2d72c1cb89c0b2b320c43bb67ff79f562f5ff4",
                    "typeString": "literal_string \"ETH\""
                  }
                ],
                "id": 3063,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "nodeType": "NewExpression",
                "src": "5695:9:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_ERC20_$689_$",
                  "typeString": "function (string memory,string memory) returns (contract ERC20)"
                },
                "typeName": {
                  "id": 3062,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 3061,
                    "name": "ERC20",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 689,
                    "src": "5699:5:18"
                  },
                  "referencedDeclaration": 689,
                  "src": "5699:5:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$689",
                    "typeString": "contract ERC20"
                  }
                }
              },
              "id": 3066,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "5695:25:18",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$689",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3078,
            "mutability": "mutable",
            "name": "nftContract",
            "nodeType": "VariableDeclaration",
            "scope": 3551,
            "src": "5726:64:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_NFTContract_$4027",
              "typeString": "contract NFTContract"
            },
            "typeName": {
              "id": 3069,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3068,
                "name": "NFTContract",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4027,
                "src": "5726:11:18"
              },
              "referencedDeclaration": 4027,
              "src": "5726:11:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NFTContract_$4027",
                "typeString": "contract NFTContract"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "id": 3075,
                      "name": "this",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967268,
                      "src": "5784:4:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GameContract_$3551",
                        "typeString": "contract GameContract"
                      }
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_contract$_GameContract_$3551",
                        "typeString": "contract GameContract"
                      }
                    ],
                    "id": 3074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "5776:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_address_$",
                      "typeString": "type(address)"
                    },
                    "typeName": {
                      "id": 3073,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5776:7:18",
                      "typeDescriptions": {}
                    }
                  },
                  "id": 3076,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": false,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "5776:13:18",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 3072,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "nodeType": "NewExpression",
                "src": "5760:15:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_NFTContract_$4027_$",
                  "typeString": "function (address) returns (contract NFTContract)"
                },
                "typeName": {
                  "id": 3071,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 3070,
                    "name": "NFTContract",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 4027,
                    "src": "5764:11:18"
                  },
                  "referencedDeclaration": 4027,
                  "src": "5764:11:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_NFTContract_$4027",
                    "typeString": "contract NFTContract"
                  }
                }
              },
              "id": 3077,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "5760:30:18",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NFTContract_$4027",
                "typeString": "contract NFTContract"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 3090,
              "nodeType": "Block",
              "src": "5929:45:18",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 3086,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "5954:4:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GameContract_$3551",
                            "typeString": "contract GameContract"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_GameContract_$3551",
                            "typeString": "contract GameContract"
                          }
                        ],
                        "id": 3085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5946:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 3084,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5946:7:18",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3087,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5946:13:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "5946:21:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3083,
                  "id": 3089,
                  "nodeType": "Return",
                  "src": "5939:28:18"
                }
              ]
            },
            "documentation": {
              "id": 3079,
              "nodeType": "StructuredDocumentation",
              "src": "5801:64:18",
              "text": " @dev Call this to get the current balance of "
            },
            "functionSelector": "6f9fb98a",
            "id": 3091,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getContractBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3080,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5897:2:18"
            },
            "returnParameters": {
              "id": 3083,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3082,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3091,
                  "src": "5923:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3081,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5923:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5922:6:18"
            },
            "scope": 3551,
            "src": "5870:104:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3099,
              "nodeType": "Block",
              "src": "6112:36:18",
              "statements": [
                {
                  "expression": {
                    "id": 3097,
                    "name": "_baseGameFee",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3058,
                    "src": "6129:12:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3096,
                  "id": 3098,
                  "nodeType": "Return",
                  "src": "6122:19:18"
                }
              ]
            },
            "documentation": {
              "id": 3092,
              "nodeType": "StructuredDocumentation",
              "src": "5984:68:18",
              "text": " @dev Call this to get the current `_baseGameFee` "
            },
            "functionSelector": "d06894ce",
            "id": 3100,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBaseGameFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3093,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6080:2:18"
            },
            "returnParameters": {
              "id": 3096,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3095,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3100,
                  "src": "6106:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3094,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6106:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6105:6:18"
            },
            "scope": 3551,
            "src": "6057:91:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3112,
              "nodeType": "Block",
              "src": "6440:40:18",
              "statements": [
                {
                  "expression": {
                    "id": 3110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3108,
                      "name": "_baseGameFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3058,
                      "src": "6448:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3109,
                      "name": "newGameFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3103,
                      "src": "6463:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6448:25:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3111,
                  "nodeType": "ExpressionStatement",
                  "src": "6448:25:18"
                }
              ]
            },
            "documentation": {
              "id": 3101,
              "nodeType": "StructuredDocumentation",
              "src": "6158:211:18",
              "text": " @dev Call this to update the current base game fee. This method can only be called via owner of this contract.\n @param newGameFee new fee value to be used for creating a new game."
            },
            "functionSelector": "b9223488",
            "id": 3113,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 3106,
                "modifierName": {
                  "id": 3105,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "6428:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "6428:11:18"
              }
            ],
            "name": "updateBaseGameFees",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3103,
                  "mutability": "mutable",
                  "name": "newGameFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 3113,
                  "src": "6402:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3102,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6402:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6401:17:18"
            },
            "returnParameters": {
              "id": 3107,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6440:0:18"
            },
            "scope": 3551,
            "src": "6374:106:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3226,
              "nodeType": "Block",
              "src": "6638:1666:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3122,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "6715:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6715:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 3124,
                              "name": "Helpers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3651,
                              "src": "6729:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Helpers_$3651_$",
                                "typeString": "type(library Helpers)"
                              }
                            },
                            "id": 3125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nullAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3650,
                            "src": "6729:19:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                              "typeString": "function () pure returns (address)"
                            }
                          },
                          "id": 3126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6729:21:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6715:35:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c65722061646472657373206973206e6f742076616c6964",
                        "id": 3128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6752:29:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a4b892cd51309e0da45f8f3cba80a0441ed1d715f40ceaa6fcbace1bdb9e9407",
                          "typeString": "literal_string \"Caller address is not valid\""
                        },
                        "value": "Caller address is not valid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a4b892cd51309e0da45f8f3cba80a0441ed1d715f40ceaa6fcbace1bdb9e9407",
                          "typeString": "literal_string \"Caller address is not valid\""
                        }
                      ],
                      "id": 3121,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6707:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6707:75:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3130,
                  "nodeType": "ExpressionStatement",
                  "src": "6707:75:18"
                },
                {
                  "assignments": [
                    3132
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3132,
                      "mutability": "mutable",
                      "name": "challengerAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 3226,
                      "src": "6792:25:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3131,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6792:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3136,
                  "initialValue": {
                    "baseExpression": {
                      "id": 3133,
                      "name": "_challengerMap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3046,
                      "src": "6820:14:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                        "typeString": "mapping(string memory => address)"
                      }
                    },
                    "id": 3135,
                    "indexExpression": {
                      "id": 3134,
                      "name": "gameId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3116,
                      "src": "6835:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6820:22:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6792:50:18"
                },
                {
                  "assignments": [
                    3138
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3138,
                      "mutability": "mutable",
                      "name": "gameExists",
                      "nodeType": "VariableDeclaration",
                      "scope": 3226,
                      "src": "6852:15:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3137,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "6852:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3144,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3139,
                      "name": "challengerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3132,
                      "src": "6870:17:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 3140,
                          "name": "Helpers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3651,
                          "src": "6891:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Helpers_$3651_$",
                            "typeString": "type(library Helpers)"
                          }
                        },
                        "id": 3141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nullAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3650,
                        "src": "6891:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                          "typeString": "function () pure returns (address)"
                        }
                      },
                      "id": 3142,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6891:21:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6870:42:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6852:60:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7003:11:18",
                        "subExpression": {
                          "id": 3146,
                          "name": "gameExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3138,
                          "src": "7004:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "412067616d6520776974682073706563696669656420494420616c726561647920657869737473",
                        "id": 3148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7016:41:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ef530aef35b7ebd85e02b04c89bc924be091da1add3fbe37c0d633b4df1bacc7",
                          "typeString": "literal_string \"A game with specified ID already exists\""
                        },
                        "value": "A game with specified ID already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ef530aef35b7ebd85e02b04c89bc924be091da1add3fbe37c0d633b4df1bacc7",
                          "typeString": "literal_string \"A game with specified ID already exists\""
                        }
                      ],
                      "id": 3145,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6995:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6995:63:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3150,
                  "nodeType": "ExpressionStatement",
                  "src": "6995:63:18"
                },
                {
                  "assignments": [
                    3152
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3152,
                      "mutability": "mutable",
                      "name": "challengerExists",
                      "nodeType": "VariableDeclaration",
                      "scope": 3226,
                      "src": "7145:21:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3151,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7145:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3158,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3153,
                      "name": "challengerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3132,
                      "src": "7169:17:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 3154,
                          "name": "Helpers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3651,
                          "src": "7190:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Helpers_$3651_$",
                            "typeString": "type(library Helpers)"
                          }
                        },
                        "id": 3155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nullAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3650,
                        "src": "7190:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                          "typeString": "function () pure returns (address)"
                        }
                      },
                      "id": 3156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7190:21:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7169:42:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7145:66:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7229:17:18",
                        "subExpression": {
                          "id": 3160,
                          "name": "challengerExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3152,
                          "src": "7230:16:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4368616c6c656e676572206164647265737320616c726561647920657869737473",
                        "id": 3162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7248:35:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_68b39e6bbbcb2d117ba637aa448afe60242e2493a24dec03fcbf894585f88e1c",
                          "typeString": "literal_string \"Challenger address already exists\""
                        },
                        "value": "Challenger address already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_68b39e6bbbcb2d117ba637aa448afe60242e2493a24dec03fcbf894585f88e1c",
                          "typeString": "literal_string \"Challenger address already exists\""
                        }
                      ],
                      "id": 3159,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7221:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7221:63:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3164,
                  "nodeType": "ExpressionStatement",
                  "src": "7221:63:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3166,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "7418:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "7418:9:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 3168,
                          "name": "_baseGameFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3058,
                          "src": "7431:12:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7418:25:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656e742076616c75652073686f756c6420626520657175616c20746f2067616d6520666565",
                        "id": 3170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7445:40:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df6e2fc9ec87ba64888d1696bf27ec602b6cc570464535b02f1632bf6809e249",
                          "typeString": "literal_string \"Sent value should be equal to game fee\""
                        },
                        "value": "Sent value should be equal to game fee"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df6e2fc9ec87ba64888d1696bf27ec602b6cc570464535b02f1632bf6809e249",
                          "typeString": "literal_string \"Sent value should be equal to game fee\""
                        }
                      ],
                      "id": 3165,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7410:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7410:76:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3172,
                  "nodeType": "ExpressionStatement",
                  "src": "7410:76:18"
                },
                {
                  "assignments": [
                    3174
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3174,
                      "mutability": "mutable",
                      "name": "challengeAcceptorNotExists",
                      "nodeType": "VariableDeclaration",
                      "scope": 3226,
                      "src": "7564:31:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3173,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7564:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3182,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 3175,
                        "name": "_opponentMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3050,
                        "src": "7598:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 3177,
                      "indexExpression": {
                        "id": 3176,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3116,
                        "src": "7611:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7598:20:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 3178,
                          "name": "Helpers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3651,
                          "src": "7622:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Helpers_$3651_$",
                            "typeString": "type(library Helpers)"
                          }
                        },
                        "id": 3179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nullAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3650,
                        "src": "7622:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                          "typeString": "function () pure returns (address)"
                        }
                      },
                      "id": 3180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7622:21:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7598:45:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7564:79:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3184,
                        "name": "challengeAcceptorNotExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3174,
                        "src": "7661:26:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4368616c6c656e6765206163636570746f72206164647265737320616c726561647920657869737473",
                        "id": 3185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7689:43:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ea8ebe73274229663547b3915a848de50064adefc44a9d5e0584f9c02299fb2a",
                          "typeString": "literal_string \"Challenge acceptor address already exists\""
                        },
                        "value": "Challenge acceptor address already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ea8ebe73274229663547b3915a848de50064adefc44a9d5e0584f9c02299fb2a",
                          "typeString": "literal_string \"Challenge acceptor address already exists\""
                        }
                      ],
                      "id": 3183,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7653:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7653:80:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3187,
                  "nodeType": "ExpressionStatement",
                  "src": "7653:80:18"
                },
                {
                  "assignments": [
                    3189
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3189,
                      "mutability": "mutable",
                      "name": "winnerExists",
                      "nodeType": "VariableDeclaration",
                      "scope": 3226,
                      "src": "7743:17:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3188,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7743:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3197,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 3190,
                        "name": "_winnersMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3054,
                        "src": "7763:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 3192,
                      "indexExpression": {
                        "id": 3191,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3116,
                        "src": "7775:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7763:19:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 3193,
                          "name": "Helpers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3651,
                          "src": "7786:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Helpers_$3651_$",
                            "typeString": "type(library Helpers)"
                          }
                        },
                        "id": 3194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nullAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3650,
                        "src": "7786:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                          "typeString": "function () pure returns (address)"
                        }
                      },
                      "id": 3195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7786:21:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7763:44:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7743:64:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7887:13:18",
                        "subExpression": {
                          "id": 3199,
                          "name": "winnerExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3189,
                          "src": "7888:12:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57696e6e657220616464726573732063616e6e6f7420626520736574206265666f7265207468652067616d6520737461727473",
                        "id": 3201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7902:53:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0b62f49c2e764ec89feead20bcc961c1ed56ada4c0696cd3b425ec7059801051",
                          "typeString": "literal_string \"Winner address cannot be set before the game starts\""
                        },
                        "value": "Winner address cannot be set before the game starts"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0b62f49c2e764ec89feead20bcc961c1ed56ada4c0696cd3b425ec7059801051",
                          "typeString": "literal_string \"Winner address cannot be set before the game starts\""
                        }
                      ],
                      "id": 3198,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7879:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7879:77:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3203,
                  "nodeType": "ExpressionStatement",
                  "src": "7879:77:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3205,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3116,
                        "src": "8034:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3204,
                      "name": "_createGame",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3491,
                      "src": "8022:11:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 3206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8022:19:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3207,
                  "nodeType": "ExpressionStatement",
                  "src": "8022:19:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3211,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3067,
                        "src": "8187:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$767",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3214,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "8203:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GameContract_$3551",
                              "typeString": "contract GameContract"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GameContract_$3551",
                              "typeString": "contract GameContract"
                            }
                          ],
                          "id": 3213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8195:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3212,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8195:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8195:13:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3216,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8210:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "8210:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$767",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3208,
                        "name": "SafeERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1016,
                        "src": "8155:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20_$1016_$",
                          "typeString": "type(library SafeERC20)"
                        }
                      },
                      "id": 3210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeIncreaseAllowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 929,
                      "src": "8155:31:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$767_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 3218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8155:65:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3219,
                  "nodeType": "ExpressionStatement",
                  "src": "8155:65:18"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3221,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8278:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8278:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3223,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3116,
                        "src": "8290:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3220,
                      "name": "GameCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3016,
                      "src": "8266:11:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory)"
                      }
                    },
                    "id": 3224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8266:31:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3225,
                  "nodeType": "EmitStatement",
                  "src": "8261:36:18"
                }
              ]
            },
            "documentation": {
              "id": 3114,
              "nodeType": "StructuredDocumentation",
              "src": "6490:71:18",
              "text": " @dev Create a new game by depositing a gameFee.\n "
            },
            "functionSelector": "2ebc0504",
            "id": 3227,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3119,
                "modifierName": {
                  "id": 3118,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 142,
                  "src": "6625:12:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "6625:12:18"
              }
            ],
            "name": "createGame",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3116,
                  "mutability": "mutable",
                  "name": "gameId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3227,
                  "src": "6586:20:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3115,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6586:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6585:22:18"
            },
            "returnParameters": {
              "id": 3120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6638:0:18"
            },
            "scope": 3551,
            "src": "6566:1738:18",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3348,
              "nodeType": "Block",
              "src": "8568:1819:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3236,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "8645:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "8645:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 3238,
                              "name": "Helpers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3651,
                              "src": "8659:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Helpers_$3651_$",
                                "typeString": "type(library Helpers)"
                              }
                            },
                            "id": 3239,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nullAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3650,
                            "src": "8659:19:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                              "typeString": "function () pure returns (address)"
                            }
                          },
                          "id": 3240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8659:21:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8645:35:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c65722061646472657373206973206e6f742076616c6964",
                        "id": 3242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8682:29:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a4b892cd51309e0da45f8f3cba80a0441ed1d715f40ceaa6fcbace1bdb9e9407",
                          "typeString": "literal_string \"Caller address is not valid\""
                        },
                        "value": "Caller address is not valid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a4b892cd51309e0da45f8f3cba80a0441ed1d715f40ceaa6fcbace1bdb9e9407",
                          "typeString": "literal_string \"Caller address is not valid\""
                        }
                      ],
                      "id": 3235,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8637:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8637:75:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3244,
                  "nodeType": "ExpressionStatement",
                  "src": "8637:75:18"
                },
                {
                  "assignments": [
                    3246
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3246,
                      "mutability": "mutable",
                      "name": "challengerAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 3348,
                      "src": "8722:25:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3245,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8722:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3250,
                  "initialValue": {
                    "baseExpression": {
                      "id": 3247,
                      "name": "_challengerMap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3046,
                      "src": "8750:14:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                        "typeString": "mapping(string memory => address)"
                      }
                    },
                    "id": 3249,
                    "indexExpression": {
                      "id": 3248,
                      "name": "gameId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3230,
                      "src": "8765:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8750:22:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8722:50:18"
                },
                {
                  "assignments": [
                    3252
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3252,
                      "mutability": "mutable",
                      "name": "gameExists",
                      "nodeType": "VariableDeclaration",
                      "scope": 3348,
                      "src": "8782:15:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3251,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "8782:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3258,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3253,
                      "name": "challengerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3246,
                      "src": "8800:17:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 3254,
                          "name": "Helpers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3651,
                          "src": "8821:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Helpers_$3651_$",
                            "typeString": "type(library Helpers)"
                          }
                        },
                        "id": 3255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nullAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3650,
                        "src": "8821:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                          "typeString": "function () pure returns (address)"
                        }
                      },
                      "id": 3256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8821:21:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8800:42:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8782:60:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3260,
                        "name": "gameExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3252,
                        "src": "8933:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "412067616d6520776974682073706563696669656420494420646f6573206e6f74206578697374",
                        "id": 3261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8945:41:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f7dc31d37f22a0c3019738b1f6a4333a15b2f3e1259556e5217d5220d6a5c8b",
                          "typeString": "literal_string \"A game with specified ID does not exist\""
                        },
                        "value": "A game with specified ID does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f7dc31d37f22a0c3019738b1f6a4333a15b2f3e1259556e5217d5220d6a5c8b",
                          "typeString": "literal_string \"A game with specified ID does not exist\""
                        }
                      ],
                      "id": 3259,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8925:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8925:62:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3263,
                  "nodeType": "ExpressionStatement",
                  "src": "8925:62:18"
                },
                {
                  "assignments": [
                    3265
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3265,
                      "mutability": "mutable",
                      "name": "challengerExists",
                      "nodeType": "VariableDeclaration",
                      "scope": 3348,
                      "src": "9057:21:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3264,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "9057:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3271,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3266,
                      "name": "challengerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3246,
                      "src": "9081:17:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 3267,
                          "name": "Helpers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3651,
                          "src": "9102:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Helpers_$3651_$",
                            "typeString": "type(library Helpers)"
                          }
                        },
                        "id": 3268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nullAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3650,
                        "src": "9102:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                          "typeString": "function () pure returns (address)"
                        }
                      },
                      "id": 3269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9102:21:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9081:42:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9057:66:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3273,
                        "name": "challengerExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3265,
                        "src": "9141:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4368616c6c656e676572206164647265737320646f6573206e6f7420657869737473",
                        "id": 3274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9159:36:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b9473895da364a7789cb188ddf4707e9ccd10108e8b86a29f646c1c2ddedb59",
                          "typeString": "literal_string \"Challenger address does not exists\""
                        },
                        "value": "Challenger address does not exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1b9473895da364a7789cb188ddf4707e9ccd10108e8b86a29f646c1c2ddedb59",
                          "typeString": "literal_string \"Challenger address does not exists\""
                        }
                      ],
                      "id": 3272,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9133:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9133:63:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3276,
                  "nodeType": "ExpressionStatement",
                  "src": "9133:63:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3278,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "9330:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "9330:9:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 3280,
                          "name": "_baseGameFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3058,
                          "src": "9343:12:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9330:25:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656e742076616c75652073686f756c6420626520657175616c20746f2067616d6520666565",
                        "id": 3282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9357:40:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df6e2fc9ec87ba64888d1696bf27ec602b6cc570464535b02f1632bf6809e249",
                          "typeString": "literal_string \"Sent value should be equal to game fee\""
                        },
                        "value": "Sent value should be equal to game fee"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df6e2fc9ec87ba64888d1696bf27ec602b6cc570464535b02f1632bf6809e249",
                          "typeString": "literal_string \"Sent value should be equal to game fee\""
                        }
                      ],
                      "id": 3277,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9322:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9322:76:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3284,
                  "nodeType": "ExpressionStatement",
                  "src": "9322:76:18"
                },
                {
                  "assignments": [
                    3286
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3286,
                      "mutability": "mutable",
                      "name": "challengeAcceptorExists",
                      "nodeType": "VariableDeclaration",
                      "scope": 3348,
                      "src": "9476:28:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3285,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "9476:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3294,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 3287,
                        "name": "_opponentMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3050,
                        "src": "9507:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 3289,
                      "indexExpression": {
                        "id": 3288,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3230,
                        "src": "9520:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9507:20:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 3290,
                          "name": "Helpers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3651,
                          "src": "9531:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Helpers_$3651_$",
                            "typeString": "type(library Helpers)"
                          }
                        },
                        "id": 3291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nullAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3650,
                        "src": "9531:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                          "typeString": "function () pure returns (address)"
                        }
                      },
                      "id": 3292,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9531:21:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9507:45:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9476:76:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9570:24:18",
                        "subExpression": {
                          "id": 3296,
                          "name": "challengeAcceptorExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3286,
                          "src": "9571:23:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4368616c6c656e6765206163636570746f72206164647265737320616c726561647920657869737473",
                        "id": 3298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9596:43:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ea8ebe73274229663547b3915a848de50064adefc44a9d5e0584f9c02299fb2a",
                          "typeString": "literal_string \"Challenge acceptor address already exists\""
                        },
                        "value": "Challenge acceptor address already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ea8ebe73274229663547b3915a848de50064adefc44a9d5e0584f9c02299fb2a",
                          "typeString": "literal_string \"Challenge acceptor address already exists\""
                        }
                      ],
                      "id": 3295,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9562:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9562:78:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3300,
                  "nodeType": "ExpressionStatement",
                  "src": "9562:78:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3302,
                          "name": "challengerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3246,
                          "src": "9720:17:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "id": 3303,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "9741:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "9741:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9720:31:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "426f746820706c6179657220616464726573732073686f756c6420626520756e69717565",
                        "id": 3306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9753:38:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4c5d4640df8142cd1bce516517b32af75fc4f9f4196c87f10075d45756729a96",
                          "typeString": "literal_string \"Both player address should be unique\""
                        },
                        "value": "Both player address should be unique"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4c5d4640df8142cd1bce516517b32af75fc4f9f4196c87f10075d45756729a96",
                          "typeString": "literal_string \"Both player address should be unique\""
                        }
                      ],
                      "id": 3301,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9712:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9712:80:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3308,
                  "nodeType": "ExpressionStatement",
                  "src": "9712:80:18"
                },
                {
                  "assignments": [
                    3310
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3310,
                      "mutability": "mutable",
                      "name": "winnerExists",
                      "nodeType": "VariableDeclaration",
                      "scope": 3348,
                      "src": "9864:17:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3309,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "9864:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3318,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 3311,
                        "name": "_winnersMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3054,
                        "src": "9884:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 3313,
                      "indexExpression": {
                        "id": 3312,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3230,
                        "src": "9896:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9884:19:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 3314,
                          "name": "Helpers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3651,
                          "src": "9907:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Helpers_$3651_$",
                            "typeString": "type(library Helpers)"
                          }
                        },
                        "id": 3315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nullAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3650,
                        "src": "9907:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                          "typeString": "function () pure returns (address)"
                        }
                      },
                      "id": 3316,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9907:21:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9884:44:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9864:64:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9946:13:18",
                        "subExpression": {
                          "id": 3320,
                          "name": "winnerExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3310,
                          "src": "9947:12:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57696e6e657220616464726573732063616e6e6f7420626520736574206265666f7265207468652067616d6520737461727473",
                        "id": 3322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9961:53:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0b62f49c2e764ec89feead20bcc961c1ed56ada4c0696cd3b425ec7059801051",
                          "typeString": "literal_string \"Winner address cannot be set before the game starts\""
                        },
                        "value": "Winner address cannot be set before the game starts"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0b62f49c2e764ec89feead20bcc961c1ed56ada4c0696cd3b425ec7059801051",
                          "typeString": "literal_string \"Winner address cannot be set before the game starts\""
                        }
                      ],
                      "id": 3319,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9938:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9938:77:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3324,
                  "nodeType": "ExpressionStatement",
                  "src": "9938:77:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3326,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3230,
                        "src": "10099:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3325,
                      "name": "_joinGame",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3505,
                      "src": "10089:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 3327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10089:17:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3328,
                  "nodeType": "ExpressionStatement",
                  "src": "10089:17:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3332,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3067,
                        "src": "10249:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$767",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3335,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "10265:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GameContract_$3551",
                              "typeString": "contract GameContract"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GameContract_$3551",
                              "typeString": "contract GameContract"
                            }
                          ],
                          "id": 3334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10257:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3333,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10257:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10257:13:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3337,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "10272:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "10272:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$767",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3329,
                        "name": "SafeERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1016,
                        "src": "10217:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20_$1016_$",
                          "typeString": "type(library SafeERC20)"
                        }
                      },
                      "id": 3331,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeIncreaseAllowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 929,
                      "src": "10217:31:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$767_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 3339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10217:65:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3340,
                  "nodeType": "ExpressionStatement",
                  "src": "10217:65:18"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3342,
                        "name": "challengerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3246,
                        "src": "10342:17:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3343,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "10361:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10361:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3345,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3230,
                        "src": "10373:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3341,
                      "name": "GameJoined",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3024,
                      "src": "10331:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory)"
                      }
                    },
                    "id": 3346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10331:49:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3347,
                  "nodeType": "EmitStatement",
                  "src": "10326:54:18"
                }
              ]
            },
            "documentation": {
              "id": 3228,
              "nodeType": "StructuredDocumentation",
              "src": "8314:179:18",
              "text": " @dev Call this to join a game with provided `gameId`. Throw an exeption if no game for this `gameId` exists.\n \n @param gameId id of game to be ended"
            },
            "functionSelector": "3d536a2e",
            "id": 3349,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3233,
                "modifierName": {
                  "id": 3232,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 142,
                  "src": "8555:12:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "8555:12:18"
              }
            ],
            "name": "joinGame",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3231,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3230,
                  "mutability": "mutable",
                  "name": "gameId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3349,
                  "src": "8516:20:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3229,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8516:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8515:22:18"
            },
            "returnParameters": {
              "id": 3234,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8568:0:18"
            },
            "scope": 3551,
            "src": "8498:1889:18",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3380,
              "nodeType": "Block",
              "src": "10894:311:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3364,
                          "name": "winTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3356,
                          "src": "10975:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 3365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10985:1:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "10975:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57696e54696d652068617320746f2062652067726561746572207468616e2030",
                        "id": 3367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10988:34:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bc8d2fed5afaed2003118c6d2d57c190b97774656cbdf614096c6cb13ffe22e6",
                          "typeString": "literal_string \"WinTime has to be greater than 0\""
                        },
                        "value": "WinTime has to be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bc8d2fed5afaed2003118c6d2d57c190b97774656cbdf614096c6cb13ffe22e6",
                          "typeString": "literal_string \"WinTime has to be greater than 0\""
                        }
                      ],
                      "id": 3363,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10967:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10967:56:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3369,
                  "nodeType": "ExpressionStatement",
                  "src": "10967:56:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3371,
                        "name": "winnerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3354,
                        "src": "11100:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3372,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3352,
                        "src": "11115:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3370,
                      "name": "_endGame",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3520,
                      "src": "11091:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory)"
                      }
                    },
                    "id": 3373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11091:31:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3374,
                  "nodeType": "ExpressionStatement",
                  "src": "11091:31:18"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3376,
                        "name": "winnerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3354,
                        "src": "11176:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3377,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3352,
                        "src": "11191:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3375,
                      "name": "GameEnd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3030,
                      "src": "11168:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory)"
                      }
                    },
                    "id": 3378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11168:30:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3379,
                  "nodeType": "EmitStatement",
                  "src": "11163:35:18"
                }
              ]
            },
            "documentation": {
              "id": 3350,
              "nodeType": "StructuredDocumentation",
              "src": "10397:350:18",
              "text": " @dev Call this to end a game with specified `gameId`. A game would end either when one player wins or if no \n player accepts a challenge within 30 minutes.\n \n @param gameId id of this game\n @param winnerAddress address of player who won the game\n @param winTime time taken (in seconds) to win the game"
            },
            "functionSelector": "1402cf03",
            "id": 3381,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3359,
                "modifierName": {
                  "id": 3358,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 142,
                  "src": "10869:12:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "10869:12:18"
              },
              {
                "arguments": [],
                "id": 3361,
                "modifierName": {
                  "id": 3360,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "10882:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "10882:11:18"
              }
            ],
            "name": "endGame",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3357,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3352,
                  "mutability": "mutable",
                  "name": "gameId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3381,
                  "src": "10778:20:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3351,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10778:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3354,
                  "mutability": "mutable",
                  "name": "winnerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3381,
                  "src": "10809:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3353,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10809:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3356,
                  "mutability": "mutable",
                  "name": "winTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 3381,
                  "src": "10841:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3355,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "10841:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10768:91:18"
            },
            "returnParameters": {
              "id": 3362,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10894:0:18"
            },
            "scope": 3551,
            "src": "10752:453:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3474,
              "nodeType": "Block",
              "src": "11690:1222:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3396,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "11767:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "11767:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 3398,
                              "name": "Helpers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3651,
                              "src": "11781:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Helpers_$3651_$",
                                "typeString": "type(library Helpers)"
                              }
                            },
                            "id": 3399,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nullAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3650,
                            "src": "11781:19:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                              "typeString": "function () pure returns (address)"
                            }
                          },
                          "id": 3400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11781:21:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11767:35:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c65722061646472657373206973206e6f742076616c6964",
                        "id": 3402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11804:29:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a4b892cd51309e0da45f8f3cba80a0441ed1d715f40ceaa6fcbace1bdb9e9407",
                          "typeString": "literal_string \"Caller address is not valid\""
                        },
                        "value": "Caller address is not valid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a4b892cd51309e0da45f8f3cba80a0441ed1d715f40ceaa6fcbace1bdb9e9407",
                          "typeString": "literal_string \"Caller address is not valid\""
                        }
                      ],
                      "id": 3395,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11759:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11759:75:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3404,
                  "nodeType": "ExpressionStatement",
                  "src": "11759:75:18"
                },
                {
                  "assignments": [
                    3406
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3406,
                      "mutability": "mutable",
                      "name": "challengerAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 3474,
                      "src": "11844:25:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3405,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11844:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3410,
                  "initialValue": {
                    "baseExpression": {
                      "id": 3407,
                      "name": "_challengerMap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3046,
                      "src": "11872:14:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                        "typeString": "mapping(string memory => address)"
                      }
                    },
                    "id": 3409,
                    "indexExpression": {
                      "id": 3408,
                      "name": "gameId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3384,
                      "src": "11887:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11872:22:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11844:50:18"
                },
                {
                  "assignments": [
                    3412
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3412,
                      "mutability": "mutable",
                      "name": "gameExists",
                      "nodeType": "VariableDeclaration",
                      "scope": 3474,
                      "src": "11904:15:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3411,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "11904:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3418,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3413,
                      "name": "challengerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3406,
                      "src": "11922:17:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 3414,
                          "name": "Helpers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3651,
                          "src": "11943:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Helpers_$3651_$",
                            "typeString": "type(library Helpers)"
                          }
                        },
                        "id": 3415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nullAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3650,
                        "src": "11943:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                          "typeString": "function () pure returns (address)"
                        }
                      },
                      "id": 3416,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11943:21:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11922:42:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11904:60:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3420,
                        "name": "gameExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3412,
                        "src": "12055:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "412067616d6520776974682073706563696669656420494420646f6573206e6f74206578697374",
                        "id": 3421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12067:41:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f7dc31d37f22a0c3019738b1f6a4333a15b2f3e1259556e5217d5220d6a5c8b",
                          "typeString": "literal_string \"A game with specified ID does not exist\""
                        },
                        "value": "A game with specified ID does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f7dc31d37f22a0c3019738b1f6a4333a15b2f3e1259556e5217d5220d6a5c8b",
                          "typeString": "literal_string \"A game with specified ID does not exist\""
                        }
                      ],
                      "id": 3419,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12047:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12047:62:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3423,
                  "nodeType": "ExpressionStatement",
                  "src": "12047:62:18"
                },
                {
                  "assignments": [
                    3425
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3425,
                      "mutability": "mutable",
                      "name": "challengeAcceptorExists",
                      "nodeType": "VariableDeclaration",
                      "scope": 3474,
                      "src": "12187:28:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3424,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "12187:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3433,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 3426,
                        "name": "_opponentMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3050,
                        "src": "12218:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 3428,
                      "indexExpression": {
                        "id": 3427,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3384,
                        "src": "12231:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "12218:20:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 3429,
                          "name": "Helpers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3651,
                          "src": "12242:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Helpers_$3651_$",
                            "typeString": "type(library Helpers)"
                          }
                        },
                        "id": 3430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nullAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3650,
                        "src": "12242:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                          "typeString": "function () pure returns (address)"
                        }
                      },
                      "id": 3431,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12242:21:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12218:45:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12187:76:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3435,
                        "name": "challengeAcceptorExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3425,
                        "src": "12281:23:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4368616c6c656e6765206163636570746f722061646472657373206973206e6f7420736574",
                        "id": 3436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12306:39:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6c747a3591d8de281882c4b0bf919d0370aa943ae4c917debdd549a6f4d800e5",
                          "typeString": "literal_string \"Challenge acceptor address is not set\""
                        },
                        "value": "Challenge acceptor address is not set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6c747a3591d8de281882c4b0bf919d0370aa943ae4c917debdd549a6f4d800e5",
                          "typeString": "literal_string \"Challenge acceptor address is not set\""
                        }
                      ],
                      "id": 3434,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12273:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12273:73:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3438,
                  "nodeType": "ExpressionStatement",
                  "src": "12273:73:18"
                },
                {
                  "assignments": [
                    3440
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3440,
                      "mutability": "mutable",
                      "name": "winnerAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 3474,
                      "src": "12356:21:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3439,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "12356:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3444,
                  "initialValue": {
                    "baseExpression": {
                      "id": 3441,
                      "name": "_winnersMap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3054,
                      "src": "12380:11:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                        "typeString": "mapping(string memory => address)"
                      }
                    },
                    "id": 3443,
                    "indexExpression": {
                      "id": 3442,
                      "name": "gameId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3384,
                      "src": "12392:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12380:19:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12356:43:18"
                },
                {
                  "assignments": [
                    3446
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3446,
                      "mutability": "mutable",
                      "name": "winnerExists",
                      "nodeType": "VariableDeclaration",
                      "scope": 3474,
                      "src": "12409:17:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3445,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "12409:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3452,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3447,
                      "name": "winnerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3440,
                      "src": "12429:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 3448,
                          "name": "Helpers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3651,
                          "src": "12446:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Helpers_$3651_$",
                            "typeString": "type(library Helpers)"
                          }
                        },
                        "id": 3449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nullAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3650,
                        "src": "12446:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                          "typeString": "function () pure returns (address)"
                        }
                      },
                      "id": 3450,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12446:21:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12429:38:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12409:58:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3454,
                        "name": "winnerExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3446,
                        "src": "12547:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57696e6e65722061646472657373206973206e6f7420736574",
                        "id": 3455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12561:27:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_08f7f19b860a6435dcb3482da5e7773745b04bf817fd4d889727a6dd3dae8840",
                          "typeString": "literal_string \"Winner address is not set\""
                        },
                        "value": "Winner address is not set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_08f7f19b860a6435dcb3482da5e7773745b04bf817fd4d889727a6dd3dae8840",
                          "typeString": "literal_string \"Winner address is not set\""
                        }
                      ],
                      "id": 3453,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12539:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12539:50:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3457,
                  "nodeType": "ExpressionStatement",
                  "src": "12539:50:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3459,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "12683:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "12683:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3461,
                          "name": "winnerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3440,
                          "src": "12697:13:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12683:27:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79207468652077696e6e6572206f66207468652067616d652063616e206d696e7420746865204e46542063617264",
                        "id": 3463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12712:51:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ff18751b5f206aacdadff35ff3a51ed08756a18f98b91fa5ffe57695be6a2c19",
                          "typeString": "literal_string \"Only the winner of the game can mint the NFT card\""
                        },
                        "value": "Only the winner of the game can mint the NFT card"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ff18751b5f206aacdadff35ff3a51ed08756a18f98b91fa5ffe57695be6a2c19",
                          "typeString": "literal_string \"Only the winner of the game can mint the NFT card\""
                        }
                      ],
                      "id": 3458,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12675:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12675:89:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3465,
                  "nodeType": "ExpressionStatement",
                  "src": "12675:89:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3467,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3384,
                        "src": "12855:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 3468,
                        "name": "winnerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3440,
                        "src": "12863:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3469,
                        "name": "isRare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3386,
                        "src": "12878:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 3470,
                        "name": "winTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3388,
                        "src": "12886:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3471,
                        "name": "killScore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3390,
                        "src": "12895:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 3466,
                      "name": "_createAndMintNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3550,
                      "src": "12837:17:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$_t_bool_$_t_uint256_$_t_uint8_$returns$__$",
                        "typeString": "function (string memory,address,bool,uint256,uint8)"
                      }
                    },
                    "id": 3472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12837:68:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3473,
                  "nodeType": "ExpressionStatement",
                  "src": "12837:68:18"
                }
              ]
            },
            "documentation": {
              "id": 3382,
              "nodeType": "StructuredDocumentation",
              "src": "11215:325:18",
              "text": " @dev Winner of the game can call this to mint the winning card NFT.\n @param gameId id of this game\n @param isRare true if this NFT is rare\n @param winTime time taken (in seconds) to win the game\n @param killScore count of longest consecutive kill by one single piece on board"
            },
            "functionSelector": "c4c5a854",
            "id": 3475,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3393,
                "modifierName": {
                  "id": 3392,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 142,
                  "src": "11677:12:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "11677:12:18"
              }
            ],
            "name": "mintNFT",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3391,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3384,
                  "mutability": "mutable",
                  "name": "gameId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3475,
                  "src": "11571:20:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3383,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "11571:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3386,
                  "mutability": "mutable",
                  "name": "isRare",
                  "nodeType": "VariableDeclaration",
                  "scope": 3475,
                  "src": "11602:11:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3385,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11602:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3388,
                  "mutability": "mutable",
                  "name": "winTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 3475,
                  "src": "11623:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3387,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "11623:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3390,
                  "mutability": "mutable",
                  "name": "killScore",
                  "nodeType": "VariableDeclaration",
                  "scope": 3475,
                  "src": "11646:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 3389,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "11646:5:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11561:106:18"
            },
            "returnParameters": {
              "id": 3394,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11690:0:18"
            },
            "scope": 3551,
            "src": "11545:1367:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3490,
              "nodeType": "Block",
              "src": "13121:52:18",
              "statements": [
                {
                  "expression": {
                    "id": 3488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3483,
                        "name": "_challengerMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3046,
                        "src": "13131:14:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 3485,
                      "indexExpression": {
                        "id": 3484,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3478,
                        "src": "13146:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13131:22:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3486,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "13156:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "13156:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "13131:35:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3489,
                  "nodeType": "ExpressionStatement",
                  "src": "13131:35:18"
                }
              ]
            },
            "documentation": {
              "id": 3476,
              "nodeType": "StructuredDocumentation",
              "src": "12922:131:18",
              "text": " @dev Create a new game and update the mapping for `games`.\n \n @param gameId id of game to be started"
            },
            "id": 3491,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 3481,
                "modifierName": {
                  "id": 3480,
                  "name": "increment",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2978,
                  "src": "13109:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "13109:11:18"
              }
            ],
            "name": "_createGame",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3479,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3478,
                  "mutability": "mutable",
                  "name": "gameId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3491,
                  "src": "13079:20:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3477,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "13079:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13078:22:18"
            },
            "returnParameters": {
              "id": 3482,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13121:0:18"
            },
            "scope": 3551,
            "src": "13058:115:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 3504,
              "nodeType": "Block",
              "src": "13361:50:18",
              "statements": [
                {
                  "expression": {
                    "id": 3502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3497,
                        "name": "_opponentMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3050,
                        "src": "13371:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 3499,
                      "indexExpression": {
                        "id": 3498,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3494,
                        "src": "13384:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13371:20:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3500,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "13394:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3501,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "13394:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "13371:33:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3503,
                  "nodeType": "ExpressionStatement",
                  "src": "13371:33:18"
                }
              ]
            },
            "documentation": {
              "id": 3492,
              "nodeType": "StructuredDocumentation",
              "src": "13183:124:18",
              "text": " @dev Call this to join a game with provided `gameId`.\n \n @param gameId id of game to be ended"
            },
            "id": 3505,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_joinGame",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3495,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3494,
                  "mutability": "mutable",
                  "name": "gameId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3505,
                  "src": "13331:20:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3493,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "13331:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13330:22:18"
            },
            "returnParameters": {
              "id": 3496,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13361:0:18"
            },
            "scope": 3551,
            "src": "13312:99:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 3519,
              "nodeType": "Block",
              "src": "13686:52:18",
              "statements": [
                {
                  "expression": {
                    "id": 3517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3513,
                        "name": "_winnersMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3054,
                        "src": "13696:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 3515,
                      "indexExpression": {
                        "id": 3514,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3510,
                        "src": "13708:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13696:19:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3516,
                      "name": "winnerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3508,
                      "src": "13718:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "13696:35:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3518,
                  "nodeType": "ExpressionStatement",
                  "src": "13696:35:18"
                }
              ]
            },
            "documentation": {
              "id": 3506,
              "nodeType": "StructuredDocumentation",
              "src": "13421:189:18",
              "text": " @dev Call this to set the `winnerAddress` when a game finishes\n \n @param winnerAddress address of player who won the game\n @param gameId id of this game"
            },
            "id": 3520,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_endGame",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3511,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3508,
                  "mutability": "mutable",
                  "name": "winnerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3520,
                  "src": "13633:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3507,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13633:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3510,
                  "mutability": "mutable",
                  "name": "gameId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3520,
                  "src": "13656:20:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3509,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "13656:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13632:45:18"
            },
            "returnParameters": {
              "id": 3512,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13686:0:18"
            },
            "scope": 3551,
            "src": "13615:123:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 3549,
              "nodeType": "Block",
              "src": "14309:211:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3537,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3523,
                        "src": "14422:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 3538,
                        "name": "winTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3529,
                        "src": "14430:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3539,
                        "name": "killScore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3531,
                        "src": "14439:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 3540,
                        "name": "isRare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3527,
                        "src": "14450:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 3534,
                        "name": "nftContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3078,
                        "src": "14391:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTContract_$4027",
                          "typeString": "contract NFTContract"
                        }
                      },
                      "id": 3536,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createAndMintToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3910,
                      "src": "14391:30:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint8_$_t_bool_$returns$__$",
                        "typeString": "function (string memory,uint256,uint8,bool) external"
                      }
                    },
                    "id": 3541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14391:66:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3542,
                  "nodeType": "ExpressionStatement",
                  "src": "14391:66:18"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3544,
                        "name": "winnerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3525,
                        "src": "14483:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3545,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3523,
                        "src": "14498:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 3546,
                        "name": "isRare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3527,
                        "src": "14506:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3543,
                      "name": "NFTCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3038,
                      "src": "14472:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,string memory,bool)"
                      }
                    },
                    "id": 3547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14472:41:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3548,
                  "nodeType": "EmitStatement",
                  "src": "14467:46:18"
                }
              ]
            },
            "documentation": {
              "id": 3521,
              "nodeType": "StructuredDocumentation",
              "src": "13744:387:18",
              "text": " @dev Call this method when the game ends to create and mint NFT.\n \n @param gameId id of this game.\n @param winnerAddress address of player who won the game\n @param isRare true if this NFT is rare\n @param winTime time taken (in seconds) to win the game\n @param killScore count of longest consecutive kill by one single piece on board"
            },
            "id": 3550,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_createAndMintNFT",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3532,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3523,
                  "mutability": "mutable",
                  "name": "gameId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3550,
                  "src": "14172:20:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3522,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14172:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3525,
                  "mutability": "mutable",
                  "name": "winnerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3550,
                  "src": "14203:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3524,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14203:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3527,
                  "mutability": "mutable",
                  "name": "isRare",
                  "nodeType": "VariableDeclaration",
                  "scope": 3550,
                  "src": "14235:11:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3526,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14235:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3529,
                  "mutability": "mutable",
                  "name": "winTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 3550,
                  "src": "14256:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3528,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "14256:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3531,
                  "mutability": "mutable",
                  "name": "killScore",
                  "nodeType": "VariableDeclaration",
                  "scope": 3550,
                  "src": "14279:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 3530,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "14279:5:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14162:138:18"
            },
            "returnParameters": {
              "id": 3533,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14309:0:18"
            },
            "scope": 3551,
            "src": "14136:384:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 3552,
        "src": "487:14035:18"
      }
    ],
    "src": "33:14489:18"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/GameContract.sol",
    "exportedSymbols": {
      "Address": [
        2290
      ],
      "BaseContract": [
        2990
      ],
      "Context": [
        2312
      ],
      "Counters": [
        2386
      ],
      "ERC165": [
        2613
      ],
      "ERC20": [
        689
      ],
      "ERC721": [
        1832
      ],
      "GameContract": [
        3551
      ],
      "Helpers": [
        3651
      ],
      "IERC165": [
        2625
      ],
      "IERC20": [
        767
      ],
      "IERC20Metadata": [
        792
      ],
      "IERC721": [
        1948
      ],
      "IERC721Metadata": [
        1993
      ],
      "IERC721Receiver": [
        1966
      ],
      "NFTContract": [
        4027
      ],
      "Ownable": [
        103
      ],
      "ReentrancyGuard": [
        143
      ],
      "SafeERC20": [
        1016
      ],
      "SafeMath": [
        2937
      ],
      "Strings": [
        2589
      ]
    },
    "id": 3552,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2992,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:18"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 2993,
        "nodeType": "ImportDirective",
        "scope": 3552,
        "sourceUnit": 1017,
        "src": "58:65:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 2994,
        "nodeType": "ImportDirective",
        "scope": 3552,
        "sourceUnit": 690,
        "src": "124:55:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 2995,
        "nodeType": "ImportDirective",
        "scope": 3552,
        "sourceUnit": 768,
        "src": "180:56:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 2996,
        "nodeType": "ImportDirective",
        "scope": 3552,
        "sourceUnit": 144,
        "src": "237:62:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "id": 2997,
        "nodeType": "ImportDirective",
        "scope": 3552,
        "sourceUnit": 2291,
        "src": "300:51:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2998,
        "nodeType": "ImportDirective",
        "scope": 3552,
        "sourceUnit": 104,
        "src": "352:52:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/BaseContract.sol",
        "file": "./BaseContract.sol",
        "id": 2999,
        "nodeType": "ImportDirective",
        "scope": 3552,
        "sourceUnit": 2991,
        "src": "405:28:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/NFTContract.sol",
        "file": "./NFTContract.sol",
        "id": 3000,
        "nodeType": "ImportDirective",
        "scope": 3552,
        "sourceUnit": 4028,
        "src": "434:27:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Helpers.sol",
        "file": "./Helpers.sol",
        "id": 3001,
        "nodeType": "ImportDirective",
        "scope": 3552,
        "sourceUnit": 3652,
        "src": "462:23:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3002,
              "name": "BaseContract",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2990,
              "src": "512:12:18"
            },
            "id": 3003,
            "nodeType": "InheritanceSpecifier",
            "src": "512:12:18"
          }
        ],
        "contractDependencies": [
          103,
          143,
          689,
          2312,
          2990,
          4027
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3551,
        "linearizedBaseContracts": [
          3551,
          2990,
          103,
          2312,
          143
        ],
        "name": "GameContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3007,
            "libraryName": {
              "id": 3004,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1016,
              "src": "542:9:18"
            },
            "nodeType": "UsingForDirective",
            "src": "536:27:18",
            "typeName": {
              "id": 3006,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3005,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 767,
                "src": "556:6:18"
              },
              "referencedDeclaration": 767,
              "src": "556:6:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$767",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 3010,
            "libraryName": {
              "id": 3008,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2290,
              "src": "574:7:18"
            },
            "nodeType": "UsingForDirective",
            "src": "568:26:18",
            "typeName": {
              "id": 3009,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "586:7:18",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "anonymous": false,
            "id": 3016,
            "name": "GameCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3015,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3012,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "challengerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3016,
                  "src": "622:33:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3011,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "622:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3014,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "gameId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3016,
                  "src": "657:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3013,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "657:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "621:50:18"
            },
            "src": "604:68:18"
          },
          {
            "anonymous": false,
            "id": 3024,
            "name": "GameJoined",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3023,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3018,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "challengerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3024,
                  "src": "694:33:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3017,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "694:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3020,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "challengeAcceptorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3024,
                  "src": "729:40:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3019,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "729:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3022,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "gameId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3024,
                  "src": "771:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3021,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "771:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "693:92:18"
            },
            "src": "677:109:18"
          },
          {
            "anonymous": false,
            "id": 3030,
            "name": "GameEnd",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3029,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3026,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "winnerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3030,
                  "src": "805:29:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3025,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "805:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3028,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "gameId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3030,
                  "src": "836:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3027,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "836:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "804:46:18"
            },
            "src": "791:60:18"
          },
          {
            "anonymous": false,
            "id": 3038,
            "name": "NFTCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3037,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3032,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "winnerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3038,
                  "src": "873:29:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3031,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "873:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3034,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "gameId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3038,
                  "src": "904:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3033,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "904:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3036,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "isRare",
                  "nodeType": "VariableDeclaration",
                  "scope": 3038,
                  "src": "919:11:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3035,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "919:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "872:59:18"
            },
            "src": "856:76:18"
          },
          {
            "canonicalName": "GameContract.ActionType",
            "id": 3042,
            "members": [
              {
                "id": 3039,
                "name": "CreateGame",
                "nodeType": "EnumValue",
                "src": "968:10:18"
              },
              {
                "id": 3040,
                "name": "JoinGame",
                "nodeType": "EnumValue",
                "src": "988:8:18"
              },
              {
                "id": 3041,
                "name": "EndGame",
                "nodeType": "EnumValue",
                "src": "1006:7:18"
              }
            ],
            "name": "ActionType",
            "nodeType": "EnumDefinition",
            "src": "942:77:18"
          },
          {
            "constant": false,
            "id": 3046,
            "mutability": "mutable",
            "name": "_challengerMap",
            "nodeType": "VariableDeclaration",
            "scope": 3551,
            "src": "5460:49:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 3045,
              "keyType": {
                "id": 3043,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "5468:6:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "5460:26:18",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 3044,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "5478:7:18",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3050,
            "mutability": "mutable",
            "name": "_opponentMap",
            "nodeType": "VariableDeclaration",
            "scope": 3551,
            "src": "5515:47:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 3049,
              "keyType": {
                "id": 3047,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "5523:6:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "5515:26:18",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 3048,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "5533:7:18",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3054,
            "mutability": "mutable",
            "name": "_winnersMap",
            "nodeType": "VariableDeclaration",
            "scope": 3551,
            "src": "5568:46:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 3053,
              "keyType": {
                "id": 3051,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "5576:6:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "5568:26:18",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 3052,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "5586:7:18",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3058,
            "mutability": "mutable",
            "name": "_baseGameFee",
            "nodeType": "VariableDeclaration",
            "scope": 3551,
            "src": "5621:44:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3055,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "5621:4:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "expression": {
                "id": 3056,
                "name": "Helpers",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 3651,
                "src": "5649:7:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_Helpers_$3651_$",
                  "typeString": "type(library Helpers)"
                }
              },
              "id": 3057,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "memberName": "GAME_FEE",
              "nodeType": "MemberAccess",
              "referencedDeclaration": 3561,
              "src": "5649:16:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3067,
            "mutability": "mutable",
            "name": "_token",
            "nodeType": "VariableDeclaration",
            "scope": 3551,
            "src": "5671:49:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$767",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 3060,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3059,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 767,
                "src": "5671:6:18"
              },
              "referencedDeclaration": 767,
              "src": "5671:6:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$767",
                "typeString": "contract IERC20"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "6574686572",
                  "id": 3064,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "5705:7:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_13730b0d8e1bdbdc293b62ba010b1eede56b412ea2980defabe3d0b6c7844c3a",
                    "typeString": "literal_string \"ether\""
                  },
                  "value": "ether"
                },
                {
                  "hexValue": "455448",
                  "id": 3065,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "5714:5:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_aaaebeba3810b1e6b70781f14b2d72c1cb89c0b2b320c43bb67ff79f562f5ff4",
                    "typeString": "literal_string \"ETH\""
                  },
                  "value": "ETH"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_13730b0d8e1bdbdc293b62ba010b1eede56b412ea2980defabe3d0b6c7844c3a",
                    "typeString": "literal_string \"ether\""
                  },
                  {
                    "typeIdentifier": "t_stringliteral_aaaebeba3810b1e6b70781f14b2d72c1cb89c0b2b320c43bb67ff79f562f5ff4",
                    "typeString": "literal_string \"ETH\""
                  }
                ],
                "id": 3063,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "nodeType": "NewExpression",
                "src": "5695:9:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_ERC20_$689_$",
                  "typeString": "function (string memory,string memory) returns (contract ERC20)"
                },
                "typeName": {
                  "id": 3062,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 3061,
                    "name": "ERC20",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 689,
                    "src": "5699:5:18"
                  },
                  "referencedDeclaration": 689,
                  "src": "5699:5:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$689",
                    "typeString": "contract ERC20"
                  }
                }
              },
              "id": 3066,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "5695:25:18",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$689",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3078,
            "mutability": "mutable",
            "name": "nftContract",
            "nodeType": "VariableDeclaration",
            "scope": 3551,
            "src": "5726:64:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_NFTContract_$4027",
              "typeString": "contract NFTContract"
            },
            "typeName": {
              "id": 3069,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3068,
                "name": "NFTContract",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4027,
                "src": "5726:11:18"
              },
              "referencedDeclaration": 4027,
              "src": "5726:11:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NFTContract_$4027",
                "typeString": "contract NFTContract"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "id": 3075,
                      "name": "this",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967268,
                      "src": "5784:4:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GameContract_$3551",
                        "typeString": "contract GameContract"
                      }
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_contract$_GameContract_$3551",
                        "typeString": "contract GameContract"
                      }
                    ],
                    "id": 3074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "5776:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_address_$",
                      "typeString": "type(address)"
                    },
                    "typeName": {
                      "id": 3073,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5776:7:18",
                      "typeDescriptions": {}
                    }
                  },
                  "id": 3076,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": false,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "5776:13:18",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 3072,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "nodeType": "NewExpression",
                "src": "5760:15:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_NFTContract_$4027_$",
                  "typeString": "function (address) returns (contract NFTContract)"
                },
                "typeName": {
                  "id": 3071,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 3070,
                    "name": "NFTContract",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 4027,
                    "src": "5764:11:18"
                  },
                  "referencedDeclaration": 4027,
                  "src": "5764:11:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_NFTContract_$4027",
                    "typeString": "contract NFTContract"
                  }
                }
              },
              "id": 3077,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "5760:30:18",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NFTContract_$4027",
                "typeString": "contract NFTContract"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 3090,
              "nodeType": "Block",
              "src": "5929:45:18",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 3086,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "5954:4:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GameContract_$3551",
                            "typeString": "contract GameContract"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_GameContract_$3551",
                            "typeString": "contract GameContract"
                          }
                        ],
                        "id": 3085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5946:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 3084,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5946:7:18",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3087,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5946:13:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "5946:21:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3083,
                  "id": 3089,
                  "nodeType": "Return",
                  "src": "5939:28:18"
                }
              ]
            },
            "documentation": {
              "id": 3079,
              "nodeType": "StructuredDocumentation",
              "src": "5801:64:18",
              "text": " @dev Call this to get the current balance of "
            },
            "functionSelector": "6f9fb98a",
            "id": 3091,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getContractBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3080,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5897:2:18"
            },
            "returnParameters": {
              "id": 3083,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3082,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3091,
                  "src": "5923:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3081,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5923:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5922:6:18"
            },
            "scope": 3551,
            "src": "5870:104:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3099,
              "nodeType": "Block",
              "src": "6112:36:18",
              "statements": [
                {
                  "expression": {
                    "id": 3097,
                    "name": "_baseGameFee",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3058,
                    "src": "6129:12:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3096,
                  "id": 3098,
                  "nodeType": "Return",
                  "src": "6122:19:18"
                }
              ]
            },
            "documentation": {
              "id": 3092,
              "nodeType": "StructuredDocumentation",
              "src": "5984:68:18",
              "text": " @dev Call this to get the current `_baseGameFee` "
            },
            "functionSelector": "d06894ce",
            "id": 3100,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBaseGameFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3093,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6080:2:18"
            },
            "returnParameters": {
              "id": 3096,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3095,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3100,
                  "src": "6106:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3094,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6106:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6105:6:18"
            },
            "scope": 3551,
            "src": "6057:91:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3112,
              "nodeType": "Block",
              "src": "6440:40:18",
              "statements": [
                {
                  "expression": {
                    "id": 3110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3108,
                      "name": "_baseGameFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3058,
                      "src": "6448:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3109,
                      "name": "newGameFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3103,
                      "src": "6463:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6448:25:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3111,
                  "nodeType": "ExpressionStatement",
                  "src": "6448:25:18"
                }
              ]
            },
            "documentation": {
              "id": 3101,
              "nodeType": "StructuredDocumentation",
              "src": "6158:211:18",
              "text": " @dev Call this to update the current base game fee. This method can only be called via owner of this contract.\n @param newGameFee new fee value to be used for creating a new game."
            },
            "functionSelector": "b9223488",
            "id": 3113,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 3106,
                "modifierName": {
                  "id": 3105,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "6428:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "6428:11:18"
              }
            ],
            "name": "updateBaseGameFees",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3103,
                  "mutability": "mutable",
                  "name": "newGameFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 3113,
                  "src": "6402:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3102,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6402:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6401:17:18"
            },
            "returnParameters": {
              "id": 3107,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6440:0:18"
            },
            "scope": 3551,
            "src": "6374:106:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3226,
              "nodeType": "Block",
              "src": "6638:1666:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3122,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "6715:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6715:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 3124,
                              "name": "Helpers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3651,
                              "src": "6729:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Helpers_$3651_$",
                                "typeString": "type(library Helpers)"
                              }
                            },
                            "id": 3125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nullAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3650,
                            "src": "6729:19:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                              "typeString": "function () pure returns (address)"
                            }
                          },
                          "id": 3126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6729:21:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6715:35:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c65722061646472657373206973206e6f742076616c6964",
                        "id": 3128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6752:29:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a4b892cd51309e0da45f8f3cba80a0441ed1d715f40ceaa6fcbace1bdb9e9407",
                          "typeString": "literal_string \"Caller address is not valid\""
                        },
                        "value": "Caller address is not valid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a4b892cd51309e0da45f8f3cba80a0441ed1d715f40ceaa6fcbace1bdb9e9407",
                          "typeString": "literal_string \"Caller address is not valid\""
                        }
                      ],
                      "id": 3121,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6707:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6707:75:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3130,
                  "nodeType": "ExpressionStatement",
                  "src": "6707:75:18"
                },
                {
                  "assignments": [
                    3132
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3132,
                      "mutability": "mutable",
                      "name": "challengerAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 3226,
                      "src": "6792:25:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3131,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6792:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3136,
                  "initialValue": {
                    "baseExpression": {
                      "id": 3133,
                      "name": "_challengerMap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3046,
                      "src": "6820:14:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                        "typeString": "mapping(string memory => address)"
                      }
                    },
                    "id": 3135,
                    "indexExpression": {
                      "id": 3134,
                      "name": "gameId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3116,
                      "src": "6835:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6820:22:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6792:50:18"
                },
                {
                  "assignments": [
                    3138
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3138,
                      "mutability": "mutable",
                      "name": "gameExists",
                      "nodeType": "VariableDeclaration",
                      "scope": 3226,
                      "src": "6852:15:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3137,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "6852:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3144,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3139,
                      "name": "challengerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3132,
                      "src": "6870:17:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 3140,
                          "name": "Helpers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3651,
                          "src": "6891:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Helpers_$3651_$",
                            "typeString": "type(library Helpers)"
                          }
                        },
                        "id": 3141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nullAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3650,
                        "src": "6891:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                          "typeString": "function () pure returns (address)"
                        }
                      },
                      "id": 3142,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6891:21:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6870:42:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6852:60:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7003:11:18",
                        "subExpression": {
                          "id": 3146,
                          "name": "gameExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3138,
                          "src": "7004:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "412067616d6520776974682073706563696669656420494420616c726561647920657869737473",
                        "id": 3148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7016:41:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ef530aef35b7ebd85e02b04c89bc924be091da1add3fbe37c0d633b4df1bacc7",
                          "typeString": "literal_string \"A game with specified ID already exists\""
                        },
                        "value": "A game with specified ID already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ef530aef35b7ebd85e02b04c89bc924be091da1add3fbe37c0d633b4df1bacc7",
                          "typeString": "literal_string \"A game with specified ID already exists\""
                        }
                      ],
                      "id": 3145,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6995:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6995:63:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3150,
                  "nodeType": "ExpressionStatement",
                  "src": "6995:63:18"
                },
                {
                  "assignments": [
                    3152
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3152,
                      "mutability": "mutable",
                      "name": "challengerExists",
                      "nodeType": "VariableDeclaration",
                      "scope": 3226,
                      "src": "7145:21:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3151,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7145:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3158,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3153,
                      "name": "challengerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3132,
                      "src": "7169:17:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 3154,
                          "name": "Helpers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3651,
                          "src": "7190:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Helpers_$3651_$",
                            "typeString": "type(library Helpers)"
                          }
                        },
                        "id": 3155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nullAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3650,
                        "src": "7190:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                          "typeString": "function () pure returns (address)"
                        }
                      },
                      "id": 3156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7190:21:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7169:42:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7145:66:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7229:17:18",
                        "subExpression": {
                          "id": 3160,
                          "name": "challengerExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3152,
                          "src": "7230:16:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4368616c6c656e676572206164647265737320616c726561647920657869737473",
                        "id": 3162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7248:35:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_68b39e6bbbcb2d117ba637aa448afe60242e2493a24dec03fcbf894585f88e1c",
                          "typeString": "literal_string \"Challenger address already exists\""
                        },
                        "value": "Challenger address already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_68b39e6bbbcb2d117ba637aa448afe60242e2493a24dec03fcbf894585f88e1c",
                          "typeString": "literal_string \"Challenger address already exists\""
                        }
                      ],
                      "id": 3159,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7221:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7221:63:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3164,
                  "nodeType": "ExpressionStatement",
                  "src": "7221:63:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3166,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "7418:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "7418:9:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 3168,
                          "name": "_baseGameFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3058,
                          "src": "7431:12:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7418:25:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656e742076616c75652073686f756c6420626520657175616c20746f2067616d6520666565",
                        "id": 3170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7445:40:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df6e2fc9ec87ba64888d1696bf27ec602b6cc570464535b02f1632bf6809e249",
                          "typeString": "literal_string \"Sent value should be equal to game fee\""
                        },
                        "value": "Sent value should be equal to game fee"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df6e2fc9ec87ba64888d1696bf27ec602b6cc570464535b02f1632bf6809e249",
                          "typeString": "literal_string \"Sent value should be equal to game fee\""
                        }
                      ],
                      "id": 3165,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7410:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7410:76:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3172,
                  "nodeType": "ExpressionStatement",
                  "src": "7410:76:18"
                },
                {
                  "assignments": [
                    3174
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3174,
                      "mutability": "mutable",
                      "name": "challengeAcceptorNotExists",
                      "nodeType": "VariableDeclaration",
                      "scope": 3226,
                      "src": "7564:31:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3173,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7564:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3182,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 3175,
                        "name": "_opponentMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3050,
                        "src": "7598:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 3177,
                      "indexExpression": {
                        "id": 3176,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3116,
                        "src": "7611:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7598:20:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 3178,
                          "name": "Helpers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3651,
                          "src": "7622:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Helpers_$3651_$",
                            "typeString": "type(library Helpers)"
                          }
                        },
                        "id": 3179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nullAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3650,
                        "src": "7622:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                          "typeString": "function () pure returns (address)"
                        }
                      },
                      "id": 3180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7622:21:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7598:45:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7564:79:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3184,
                        "name": "challengeAcceptorNotExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3174,
                        "src": "7661:26:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4368616c6c656e6765206163636570746f72206164647265737320616c726561647920657869737473",
                        "id": 3185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7689:43:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ea8ebe73274229663547b3915a848de50064adefc44a9d5e0584f9c02299fb2a",
                          "typeString": "literal_string \"Challenge acceptor address already exists\""
                        },
                        "value": "Challenge acceptor address already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ea8ebe73274229663547b3915a848de50064adefc44a9d5e0584f9c02299fb2a",
                          "typeString": "literal_string \"Challenge acceptor address already exists\""
                        }
                      ],
                      "id": 3183,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7653:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7653:80:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3187,
                  "nodeType": "ExpressionStatement",
                  "src": "7653:80:18"
                },
                {
                  "assignments": [
                    3189
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3189,
                      "mutability": "mutable",
                      "name": "winnerExists",
                      "nodeType": "VariableDeclaration",
                      "scope": 3226,
                      "src": "7743:17:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3188,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7743:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3197,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 3190,
                        "name": "_winnersMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3054,
                        "src": "7763:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 3192,
                      "indexExpression": {
                        "id": 3191,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3116,
                        "src": "7775:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7763:19:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 3193,
                          "name": "Helpers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3651,
                          "src": "7786:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Helpers_$3651_$",
                            "typeString": "type(library Helpers)"
                          }
                        },
                        "id": 3194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nullAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3650,
                        "src": "7786:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                          "typeString": "function () pure returns (address)"
                        }
                      },
                      "id": 3195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7786:21:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7763:44:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7743:64:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7887:13:18",
                        "subExpression": {
                          "id": 3199,
                          "name": "winnerExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3189,
                          "src": "7888:12:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57696e6e657220616464726573732063616e6e6f7420626520736574206265666f7265207468652067616d6520737461727473",
                        "id": 3201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7902:53:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0b62f49c2e764ec89feead20bcc961c1ed56ada4c0696cd3b425ec7059801051",
                          "typeString": "literal_string \"Winner address cannot be set before the game starts\""
                        },
                        "value": "Winner address cannot be set before the game starts"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0b62f49c2e764ec89feead20bcc961c1ed56ada4c0696cd3b425ec7059801051",
                          "typeString": "literal_string \"Winner address cannot be set before the game starts\""
                        }
                      ],
                      "id": 3198,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7879:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7879:77:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3203,
                  "nodeType": "ExpressionStatement",
                  "src": "7879:77:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3205,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3116,
                        "src": "8034:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3204,
                      "name": "_createGame",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3491,
                      "src": "8022:11:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 3206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8022:19:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3207,
                  "nodeType": "ExpressionStatement",
                  "src": "8022:19:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3211,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3067,
                        "src": "8187:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$767",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3214,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "8203:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GameContract_$3551",
                              "typeString": "contract GameContract"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GameContract_$3551",
                              "typeString": "contract GameContract"
                            }
                          ],
                          "id": 3213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8195:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3212,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8195:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8195:13:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3216,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8210:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "8210:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$767",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3208,
                        "name": "SafeERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1016,
                        "src": "8155:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20_$1016_$",
                          "typeString": "type(library SafeERC20)"
                        }
                      },
                      "id": 3210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeIncreaseAllowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 929,
                      "src": "8155:31:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$767_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 3218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8155:65:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3219,
                  "nodeType": "ExpressionStatement",
                  "src": "8155:65:18"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3221,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8278:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8278:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3223,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3116,
                        "src": "8290:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3220,
                      "name": "GameCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3016,
                      "src": "8266:11:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory)"
                      }
                    },
                    "id": 3224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8266:31:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3225,
                  "nodeType": "EmitStatement",
                  "src": "8261:36:18"
                }
              ]
            },
            "documentation": {
              "id": 3114,
              "nodeType": "StructuredDocumentation",
              "src": "6490:71:18",
              "text": " @dev Create a new game by depositing a gameFee.\n "
            },
            "functionSelector": "2ebc0504",
            "id": 3227,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3119,
                "modifierName": {
                  "id": 3118,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 142,
                  "src": "6625:12:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "6625:12:18"
              }
            ],
            "name": "createGame",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3116,
                  "mutability": "mutable",
                  "name": "gameId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3227,
                  "src": "6586:20:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3115,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6586:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6585:22:18"
            },
            "returnParameters": {
              "id": 3120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6638:0:18"
            },
            "scope": 3551,
            "src": "6566:1738:18",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3348,
              "nodeType": "Block",
              "src": "8568:1819:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3236,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "8645:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "8645:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 3238,
                              "name": "Helpers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3651,
                              "src": "8659:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Helpers_$3651_$",
                                "typeString": "type(library Helpers)"
                              }
                            },
                            "id": 3239,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nullAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3650,
                            "src": "8659:19:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                              "typeString": "function () pure returns (address)"
                            }
                          },
                          "id": 3240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8659:21:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8645:35:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c65722061646472657373206973206e6f742076616c6964",
                        "id": 3242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8682:29:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a4b892cd51309e0da45f8f3cba80a0441ed1d715f40ceaa6fcbace1bdb9e9407",
                          "typeString": "literal_string \"Caller address is not valid\""
                        },
                        "value": "Caller address is not valid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a4b892cd51309e0da45f8f3cba80a0441ed1d715f40ceaa6fcbace1bdb9e9407",
                          "typeString": "literal_string \"Caller address is not valid\""
                        }
                      ],
                      "id": 3235,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8637:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8637:75:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3244,
                  "nodeType": "ExpressionStatement",
                  "src": "8637:75:18"
                },
                {
                  "assignments": [
                    3246
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3246,
                      "mutability": "mutable",
                      "name": "challengerAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 3348,
                      "src": "8722:25:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3245,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8722:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3250,
                  "initialValue": {
                    "baseExpression": {
                      "id": 3247,
                      "name": "_challengerMap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3046,
                      "src": "8750:14:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                        "typeString": "mapping(string memory => address)"
                      }
                    },
                    "id": 3249,
                    "indexExpression": {
                      "id": 3248,
                      "name": "gameId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3230,
                      "src": "8765:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8750:22:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8722:50:18"
                },
                {
                  "assignments": [
                    3252
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3252,
                      "mutability": "mutable",
                      "name": "gameExists",
                      "nodeType": "VariableDeclaration",
                      "scope": 3348,
                      "src": "8782:15:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3251,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "8782:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3258,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3253,
                      "name": "challengerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3246,
                      "src": "8800:17:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 3254,
                          "name": "Helpers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3651,
                          "src": "8821:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Helpers_$3651_$",
                            "typeString": "type(library Helpers)"
                          }
                        },
                        "id": 3255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nullAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3650,
                        "src": "8821:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                          "typeString": "function () pure returns (address)"
                        }
                      },
                      "id": 3256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8821:21:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8800:42:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8782:60:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3260,
                        "name": "gameExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3252,
                        "src": "8933:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "412067616d6520776974682073706563696669656420494420646f6573206e6f74206578697374",
                        "id": 3261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8945:41:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f7dc31d37f22a0c3019738b1f6a4333a15b2f3e1259556e5217d5220d6a5c8b",
                          "typeString": "literal_string \"A game with specified ID does not exist\""
                        },
                        "value": "A game with specified ID does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f7dc31d37f22a0c3019738b1f6a4333a15b2f3e1259556e5217d5220d6a5c8b",
                          "typeString": "literal_string \"A game with specified ID does not exist\""
                        }
                      ],
                      "id": 3259,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8925:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8925:62:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3263,
                  "nodeType": "ExpressionStatement",
                  "src": "8925:62:18"
                },
                {
                  "assignments": [
                    3265
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3265,
                      "mutability": "mutable",
                      "name": "challengerExists",
                      "nodeType": "VariableDeclaration",
                      "scope": 3348,
                      "src": "9057:21:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3264,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "9057:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3271,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3266,
                      "name": "challengerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3246,
                      "src": "9081:17:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 3267,
                          "name": "Helpers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3651,
                          "src": "9102:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Helpers_$3651_$",
                            "typeString": "type(library Helpers)"
                          }
                        },
                        "id": 3268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nullAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3650,
                        "src": "9102:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                          "typeString": "function () pure returns (address)"
                        }
                      },
                      "id": 3269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9102:21:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9081:42:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9057:66:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3273,
                        "name": "challengerExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3265,
                        "src": "9141:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4368616c6c656e676572206164647265737320646f6573206e6f7420657869737473",
                        "id": 3274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9159:36:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b9473895da364a7789cb188ddf4707e9ccd10108e8b86a29f646c1c2ddedb59",
                          "typeString": "literal_string \"Challenger address does not exists\""
                        },
                        "value": "Challenger address does not exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1b9473895da364a7789cb188ddf4707e9ccd10108e8b86a29f646c1c2ddedb59",
                          "typeString": "literal_string \"Challenger address does not exists\""
                        }
                      ],
                      "id": 3272,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9133:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9133:63:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3276,
                  "nodeType": "ExpressionStatement",
                  "src": "9133:63:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3278,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "9330:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "9330:9:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 3280,
                          "name": "_baseGameFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3058,
                          "src": "9343:12:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9330:25:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656e742076616c75652073686f756c6420626520657175616c20746f2067616d6520666565",
                        "id": 3282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9357:40:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df6e2fc9ec87ba64888d1696bf27ec602b6cc570464535b02f1632bf6809e249",
                          "typeString": "literal_string \"Sent value should be equal to game fee\""
                        },
                        "value": "Sent value should be equal to game fee"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df6e2fc9ec87ba64888d1696bf27ec602b6cc570464535b02f1632bf6809e249",
                          "typeString": "literal_string \"Sent value should be equal to game fee\""
                        }
                      ],
                      "id": 3277,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9322:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9322:76:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3284,
                  "nodeType": "ExpressionStatement",
                  "src": "9322:76:18"
                },
                {
                  "assignments": [
                    3286
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3286,
                      "mutability": "mutable",
                      "name": "challengeAcceptorExists",
                      "nodeType": "VariableDeclaration",
                      "scope": 3348,
                      "src": "9476:28:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3285,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "9476:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3294,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 3287,
                        "name": "_opponentMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3050,
                        "src": "9507:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 3289,
                      "indexExpression": {
                        "id": 3288,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3230,
                        "src": "9520:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9507:20:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 3290,
                          "name": "Helpers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3651,
                          "src": "9531:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Helpers_$3651_$",
                            "typeString": "type(library Helpers)"
                          }
                        },
                        "id": 3291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nullAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3650,
                        "src": "9531:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                          "typeString": "function () pure returns (address)"
                        }
                      },
                      "id": 3292,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9531:21:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9507:45:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9476:76:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9570:24:18",
                        "subExpression": {
                          "id": 3296,
                          "name": "challengeAcceptorExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3286,
                          "src": "9571:23:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4368616c6c656e6765206163636570746f72206164647265737320616c726561647920657869737473",
                        "id": 3298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9596:43:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ea8ebe73274229663547b3915a848de50064adefc44a9d5e0584f9c02299fb2a",
                          "typeString": "literal_string \"Challenge acceptor address already exists\""
                        },
                        "value": "Challenge acceptor address already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ea8ebe73274229663547b3915a848de50064adefc44a9d5e0584f9c02299fb2a",
                          "typeString": "literal_string \"Challenge acceptor address already exists\""
                        }
                      ],
                      "id": 3295,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9562:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9562:78:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3300,
                  "nodeType": "ExpressionStatement",
                  "src": "9562:78:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3302,
                          "name": "challengerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3246,
                          "src": "9720:17:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "id": 3303,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "9741:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "9741:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9720:31:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "426f746820706c6179657220616464726573732073686f756c6420626520756e69717565",
                        "id": 3306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9753:38:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4c5d4640df8142cd1bce516517b32af75fc4f9f4196c87f10075d45756729a96",
                          "typeString": "literal_string \"Both player address should be unique\""
                        },
                        "value": "Both player address should be unique"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4c5d4640df8142cd1bce516517b32af75fc4f9f4196c87f10075d45756729a96",
                          "typeString": "literal_string \"Both player address should be unique\""
                        }
                      ],
                      "id": 3301,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9712:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9712:80:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3308,
                  "nodeType": "ExpressionStatement",
                  "src": "9712:80:18"
                },
                {
                  "assignments": [
                    3310
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3310,
                      "mutability": "mutable",
                      "name": "winnerExists",
                      "nodeType": "VariableDeclaration",
                      "scope": 3348,
                      "src": "9864:17:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3309,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "9864:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3318,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 3311,
                        "name": "_winnersMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3054,
                        "src": "9884:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 3313,
                      "indexExpression": {
                        "id": 3312,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3230,
                        "src": "9896:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9884:19:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 3314,
                          "name": "Helpers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3651,
                          "src": "9907:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Helpers_$3651_$",
                            "typeString": "type(library Helpers)"
                          }
                        },
                        "id": 3315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nullAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3650,
                        "src": "9907:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                          "typeString": "function () pure returns (address)"
                        }
                      },
                      "id": 3316,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9907:21:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9884:44:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9864:64:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9946:13:18",
                        "subExpression": {
                          "id": 3320,
                          "name": "winnerExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3310,
                          "src": "9947:12:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57696e6e657220616464726573732063616e6e6f7420626520736574206265666f7265207468652067616d6520737461727473",
                        "id": 3322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9961:53:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0b62f49c2e764ec89feead20bcc961c1ed56ada4c0696cd3b425ec7059801051",
                          "typeString": "literal_string \"Winner address cannot be set before the game starts\""
                        },
                        "value": "Winner address cannot be set before the game starts"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0b62f49c2e764ec89feead20bcc961c1ed56ada4c0696cd3b425ec7059801051",
                          "typeString": "literal_string \"Winner address cannot be set before the game starts\""
                        }
                      ],
                      "id": 3319,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9938:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9938:77:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3324,
                  "nodeType": "ExpressionStatement",
                  "src": "9938:77:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3326,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3230,
                        "src": "10099:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3325,
                      "name": "_joinGame",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3505,
                      "src": "10089:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 3327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10089:17:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3328,
                  "nodeType": "ExpressionStatement",
                  "src": "10089:17:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3332,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3067,
                        "src": "10249:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$767",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3335,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "10265:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GameContract_$3551",
                              "typeString": "contract GameContract"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GameContract_$3551",
                              "typeString": "contract GameContract"
                            }
                          ],
                          "id": 3334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10257:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3333,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10257:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10257:13:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3337,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "10272:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "10272:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$767",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3329,
                        "name": "SafeERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1016,
                        "src": "10217:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20_$1016_$",
                          "typeString": "type(library SafeERC20)"
                        }
                      },
                      "id": 3331,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeIncreaseAllowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 929,
                      "src": "10217:31:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$767_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 3339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10217:65:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3340,
                  "nodeType": "ExpressionStatement",
                  "src": "10217:65:18"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3342,
                        "name": "challengerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3246,
                        "src": "10342:17:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3343,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "10361:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10361:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3345,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3230,
                        "src": "10373:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3341,
                      "name": "GameJoined",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3024,
                      "src": "10331:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory)"
                      }
                    },
                    "id": 3346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10331:49:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3347,
                  "nodeType": "EmitStatement",
                  "src": "10326:54:18"
                }
              ]
            },
            "documentation": {
              "id": 3228,
              "nodeType": "StructuredDocumentation",
              "src": "8314:179:18",
              "text": " @dev Call this to join a game with provided `gameId`. Throw an exeption if no game for this `gameId` exists.\n \n @param gameId id of game to be ended"
            },
            "functionSelector": "3d536a2e",
            "id": 3349,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3233,
                "modifierName": {
                  "id": 3232,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 142,
                  "src": "8555:12:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "8555:12:18"
              }
            ],
            "name": "joinGame",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3231,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3230,
                  "mutability": "mutable",
                  "name": "gameId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3349,
                  "src": "8516:20:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3229,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8516:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8515:22:18"
            },
            "returnParameters": {
              "id": 3234,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8568:0:18"
            },
            "scope": 3551,
            "src": "8498:1889:18",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3380,
              "nodeType": "Block",
              "src": "10894:311:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3364,
                          "name": "winTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3356,
                          "src": "10975:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 3365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10985:1:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "10975:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57696e54696d652068617320746f2062652067726561746572207468616e2030",
                        "id": 3367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10988:34:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bc8d2fed5afaed2003118c6d2d57c190b97774656cbdf614096c6cb13ffe22e6",
                          "typeString": "literal_string \"WinTime has to be greater than 0\""
                        },
                        "value": "WinTime has to be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bc8d2fed5afaed2003118c6d2d57c190b97774656cbdf614096c6cb13ffe22e6",
                          "typeString": "literal_string \"WinTime has to be greater than 0\""
                        }
                      ],
                      "id": 3363,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10967:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10967:56:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3369,
                  "nodeType": "ExpressionStatement",
                  "src": "10967:56:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3371,
                        "name": "winnerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3354,
                        "src": "11100:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3372,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3352,
                        "src": "11115:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3370,
                      "name": "_endGame",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3520,
                      "src": "11091:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory)"
                      }
                    },
                    "id": 3373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11091:31:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3374,
                  "nodeType": "ExpressionStatement",
                  "src": "11091:31:18"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3376,
                        "name": "winnerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3354,
                        "src": "11176:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3377,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3352,
                        "src": "11191:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3375,
                      "name": "GameEnd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3030,
                      "src": "11168:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory)"
                      }
                    },
                    "id": 3378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11168:30:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3379,
                  "nodeType": "EmitStatement",
                  "src": "11163:35:18"
                }
              ]
            },
            "documentation": {
              "id": 3350,
              "nodeType": "StructuredDocumentation",
              "src": "10397:350:18",
              "text": " @dev Call this to end a game with specified `gameId`. A game would end either when one player wins or if no \n player accepts a challenge within 30 minutes.\n \n @param gameId id of this game\n @param winnerAddress address of player who won the game\n @param winTime time taken (in seconds) to win the game"
            },
            "functionSelector": "1402cf03",
            "id": 3381,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3359,
                "modifierName": {
                  "id": 3358,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 142,
                  "src": "10869:12:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "10869:12:18"
              },
              {
                "arguments": [],
                "id": 3361,
                "modifierName": {
                  "id": 3360,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "10882:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "10882:11:18"
              }
            ],
            "name": "endGame",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3357,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3352,
                  "mutability": "mutable",
                  "name": "gameId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3381,
                  "src": "10778:20:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3351,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10778:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3354,
                  "mutability": "mutable",
                  "name": "winnerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3381,
                  "src": "10809:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3353,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10809:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3356,
                  "mutability": "mutable",
                  "name": "winTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 3381,
                  "src": "10841:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3355,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "10841:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10768:91:18"
            },
            "returnParameters": {
              "id": 3362,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10894:0:18"
            },
            "scope": 3551,
            "src": "10752:453:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3474,
              "nodeType": "Block",
              "src": "11690:1222:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3396,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "11767:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "11767:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 3398,
                              "name": "Helpers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3651,
                              "src": "11781:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Helpers_$3651_$",
                                "typeString": "type(library Helpers)"
                              }
                            },
                            "id": 3399,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nullAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3650,
                            "src": "11781:19:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                              "typeString": "function () pure returns (address)"
                            }
                          },
                          "id": 3400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11781:21:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11767:35:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c65722061646472657373206973206e6f742076616c6964",
                        "id": 3402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11804:29:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a4b892cd51309e0da45f8f3cba80a0441ed1d715f40ceaa6fcbace1bdb9e9407",
                          "typeString": "literal_string \"Caller address is not valid\""
                        },
                        "value": "Caller address is not valid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a4b892cd51309e0da45f8f3cba80a0441ed1d715f40ceaa6fcbace1bdb9e9407",
                          "typeString": "literal_string \"Caller address is not valid\""
                        }
                      ],
                      "id": 3395,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11759:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11759:75:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3404,
                  "nodeType": "ExpressionStatement",
                  "src": "11759:75:18"
                },
                {
                  "assignments": [
                    3406
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3406,
                      "mutability": "mutable",
                      "name": "challengerAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 3474,
                      "src": "11844:25:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3405,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11844:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3410,
                  "initialValue": {
                    "baseExpression": {
                      "id": 3407,
                      "name": "_challengerMap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3046,
                      "src": "11872:14:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                        "typeString": "mapping(string memory => address)"
                      }
                    },
                    "id": 3409,
                    "indexExpression": {
                      "id": 3408,
                      "name": "gameId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3384,
                      "src": "11887:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11872:22:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11844:50:18"
                },
                {
                  "assignments": [
                    3412
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3412,
                      "mutability": "mutable",
                      "name": "gameExists",
                      "nodeType": "VariableDeclaration",
                      "scope": 3474,
                      "src": "11904:15:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3411,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "11904:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3418,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3413,
                      "name": "challengerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3406,
                      "src": "11922:17:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 3414,
                          "name": "Helpers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3651,
                          "src": "11943:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Helpers_$3651_$",
                            "typeString": "type(library Helpers)"
                          }
                        },
                        "id": 3415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nullAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3650,
                        "src": "11943:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                          "typeString": "function () pure returns (address)"
                        }
                      },
                      "id": 3416,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11943:21:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11922:42:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11904:60:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3420,
                        "name": "gameExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3412,
                        "src": "12055:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "412067616d6520776974682073706563696669656420494420646f6573206e6f74206578697374",
                        "id": 3421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12067:41:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f7dc31d37f22a0c3019738b1f6a4333a15b2f3e1259556e5217d5220d6a5c8b",
                          "typeString": "literal_string \"A game with specified ID does not exist\""
                        },
                        "value": "A game with specified ID does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f7dc31d37f22a0c3019738b1f6a4333a15b2f3e1259556e5217d5220d6a5c8b",
                          "typeString": "literal_string \"A game with specified ID does not exist\""
                        }
                      ],
                      "id": 3419,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12047:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12047:62:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3423,
                  "nodeType": "ExpressionStatement",
                  "src": "12047:62:18"
                },
                {
                  "assignments": [
                    3425
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3425,
                      "mutability": "mutable",
                      "name": "challengeAcceptorExists",
                      "nodeType": "VariableDeclaration",
                      "scope": 3474,
                      "src": "12187:28:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3424,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "12187:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3433,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 3426,
                        "name": "_opponentMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3050,
                        "src": "12218:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 3428,
                      "indexExpression": {
                        "id": 3427,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3384,
                        "src": "12231:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "12218:20:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 3429,
                          "name": "Helpers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3651,
                          "src": "12242:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Helpers_$3651_$",
                            "typeString": "type(library Helpers)"
                          }
                        },
                        "id": 3430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nullAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3650,
                        "src": "12242:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                          "typeString": "function () pure returns (address)"
                        }
                      },
                      "id": 3431,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12242:21:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12218:45:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12187:76:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3435,
                        "name": "challengeAcceptorExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3425,
                        "src": "12281:23:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4368616c6c656e6765206163636570746f722061646472657373206973206e6f7420736574",
                        "id": 3436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12306:39:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6c747a3591d8de281882c4b0bf919d0370aa943ae4c917debdd549a6f4d800e5",
                          "typeString": "literal_string \"Challenge acceptor address is not set\""
                        },
                        "value": "Challenge acceptor address is not set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6c747a3591d8de281882c4b0bf919d0370aa943ae4c917debdd549a6f4d800e5",
                          "typeString": "literal_string \"Challenge acceptor address is not set\""
                        }
                      ],
                      "id": 3434,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12273:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12273:73:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3438,
                  "nodeType": "ExpressionStatement",
                  "src": "12273:73:18"
                },
                {
                  "assignments": [
                    3440
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3440,
                      "mutability": "mutable",
                      "name": "winnerAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 3474,
                      "src": "12356:21:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3439,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "12356:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3444,
                  "initialValue": {
                    "baseExpression": {
                      "id": 3441,
                      "name": "_winnersMap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3054,
                      "src": "12380:11:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                        "typeString": "mapping(string memory => address)"
                      }
                    },
                    "id": 3443,
                    "indexExpression": {
                      "id": 3442,
                      "name": "gameId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3384,
                      "src": "12392:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12380:19:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12356:43:18"
                },
                {
                  "assignments": [
                    3446
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3446,
                      "mutability": "mutable",
                      "name": "winnerExists",
                      "nodeType": "VariableDeclaration",
                      "scope": 3474,
                      "src": "12409:17:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3445,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "12409:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3452,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3447,
                      "name": "winnerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3440,
                      "src": "12429:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 3448,
                          "name": "Helpers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3651,
                          "src": "12446:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Helpers_$3651_$",
                            "typeString": "type(library Helpers)"
                          }
                        },
                        "id": 3449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nullAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3650,
                        "src": "12446:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                          "typeString": "function () pure returns (address)"
                        }
                      },
                      "id": 3450,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12446:21:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12429:38:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12409:58:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3454,
                        "name": "winnerExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3446,
                        "src": "12547:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57696e6e65722061646472657373206973206e6f7420736574",
                        "id": 3455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12561:27:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_08f7f19b860a6435dcb3482da5e7773745b04bf817fd4d889727a6dd3dae8840",
                          "typeString": "literal_string \"Winner address is not set\""
                        },
                        "value": "Winner address is not set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_08f7f19b860a6435dcb3482da5e7773745b04bf817fd4d889727a6dd3dae8840",
                          "typeString": "literal_string \"Winner address is not set\""
                        }
                      ],
                      "id": 3453,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12539:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12539:50:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3457,
                  "nodeType": "ExpressionStatement",
                  "src": "12539:50:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3459,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "12683:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "12683:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3461,
                          "name": "winnerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3440,
                          "src": "12697:13:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12683:27:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79207468652077696e6e6572206f66207468652067616d652063616e206d696e7420746865204e46542063617264",
                        "id": 3463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12712:51:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ff18751b5f206aacdadff35ff3a51ed08756a18f98b91fa5ffe57695be6a2c19",
                          "typeString": "literal_string \"Only the winner of the game can mint the NFT card\""
                        },
                        "value": "Only the winner of the game can mint the NFT card"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ff18751b5f206aacdadff35ff3a51ed08756a18f98b91fa5ffe57695be6a2c19",
                          "typeString": "literal_string \"Only the winner of the game can mint the NFT card\""
                        }
                      ],
                      "id": 3458,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12675:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12675:89:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3465,
                  "nodeType": "ExpressionStatement",
                  "src": "12675:89:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3467,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3384,
                        "src": "12855:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 3468,
                        "name": "winnerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3440,
                        "src": "12863:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3469,
                        "name": "isRare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3386,
                        "src": "12878:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 3470,
                        "name": "winTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3388,
                        "src": "12886:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3471,
                        "name": "killScore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3390,
                        "src": "12895:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 3466,
                      "name": "_createAndMintNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3550,
                      "src": "12837:17:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$_t_bool_$_t_uint256_$_t_uint8_$returns$__$",
                        "typeString": "function (string memory,address,bool,uint256,uint8)"
                      }
                    },
                    "id": 3472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12837:68:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3473,
                  "nodeType": "ExpressionStatement",
                  "src": "12837:68:18"
                }
              ]
            },
            "documentation": {
              "id": 3382,
              "nodeType": "StructuredDocumentation",
              "src": "11215:325:18",
              "text": " @dev Winner of the game can call this to mint the winning card NFT.\n @param gameId id of this game\n @param isRare true if this NFT is rare\n @param winTime time taken (in seconds) to win the game\n @param killScore count of longest consecutive kill by one single piece on board"
            },
            "functionSelector": "c4c5a854",
            "id": 3475,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3393,
                "modifierName": {
                  "id": 3392,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 142,
                  "src": "11677:12:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "11677:12:18"
              }
            ],
            "name": "mintNFT",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3391,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3384,
                  "mutability": "mutable",
                  "name": "gameId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3475,
                  "src": "11571:20:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3383,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "11571:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3386,
                  "mutability": "mutable",
                  "name": "isRare",
                  "nodeType": "VariableDeclaration",
                  "scope": 3475,
                  "src": "11602:11:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3385,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11602:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3388,
                  "mutability": "mutable",
                  "name": "winTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 3475,
                  "src": "11623:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3387,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "11623:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3390,
                  "mutability": "mutable",
                  "name": "killScore",
                  "nodeType": "VariableDeclaration",
                  "scope": 3475,
                  "src": "11646:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 3389,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "11646:5:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11561:106:18"
            },
            "returnParameters": {
              "id": 3394,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11690:0:18"
            },
            "scope": 3551,
            "src": "11545:1367:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3490,
              "nodeType": "Block",
              "src": "13121:52:18",
              "statements": [
                {
                  "expression": {
                    "id": 3488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3483,
                        "name": "_challengerMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3046,
                        "src": "13131:14:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 3485,
                      "indexExpression": {
                        "id": 3484,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3478,
                        "src": "13146:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13131:22:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3486,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "13156:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "13156:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "13131:35:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3489,
                  "nodeType": "ExpressionStatement",
                  "src": "13131:35:18"
                }
              ]
            },
            "documentation": {
              "id": 3476,
              "nodeType": "StructuredDocumentation",
              "src": "12922:131:18",
              "text": " @dev Create a new game and update the mapping for `games`.\n \n @param gameId id of game to be started"
            },
            "id": 3491,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 3481,
                "modifierName": {
                  "id": 3480,
                  "name": "increment",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2978,
                  "src": "13109:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "13109:11:18"
              }
            ],
            "name": "_createGame",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3479,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3478,
                  "mutability": "mutable",
                  "name": "gameId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3491,
                  "src": "13079:20:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3477,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "13079:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13078:22:18"
            },
            "returnParameters": {
              "id": 3482,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13121:0:18"
            },
            "scope": 3551,
            "src": "13058:115:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 3504,
              "nodeType": "Block",
              "src": "13361:50:18",
              "statements": [
                {
                  "expression": {
                    "id": 3502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3497,
                        "name": "_opponentMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3050,
                        "src": "13371:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 3499,
                      "indexExpression": {
                        "id": 3498,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3494,
                        "src": "13384:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13371:20:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3500,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "13394:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3501,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "13394:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "13371:33:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3503,
                  "nodeType": "ExpressionStatement",
                  "src": "13371:33:18"
                }
              ]
            },
            "documentation": {
              "id": 3492,
              "nodeType": "StructuredDocumentation",
              "src": "13183:124:18",
              "text": " @dev Call this to join a game with provided `gameId`.\n \n @param gameId id of game to be ended"
            },
            "id": 3505,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_joinGame",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3495,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3494,
                  "mutability": "mutable",
                  "name": "gameId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3505,
                  "src": "13331:20:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3493,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "13331:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13330:22:18"
            },
            "returnParameters": {
              "id": 3496,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13361:0:18"
            },
            "scope": 3551,
            "src": "13312:99:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 3519,
              "nodeType": "Block",
              "src": "13686:52:18",
              "statements": [
                {
                  "expression": {
                    "id": 3517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3513,
                        "name": "_winnersMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3054,
                        "src": "13696:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 3515,
                      "indexExpression": {
                        "id": 3514,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3510,
                        "src": "13708:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13696:19:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3516,
                      "name": "winnerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3508,
                      "src": "13718:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "13696:35:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3518,
                  "nodeType": "ExpressionStatement",
                  "src": "13696:35:18"
                }
              ]
            },
            "documentation": {
              "id": 3506,
              "nodeType": "StructuredDocumentation",
              "src": "13421:189:18",
              "text": " @dev Call this to set the `winnerAddress` when a game finishes\n \n @param winnerAddress address of player who won the game\n @param gameId id of this game"
            },
            "id": 3520,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_endGame",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3511,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3508,
                  "mutability": "mutable",
                  "name": "winnerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3520,
                  "src": "13633:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3507,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13633:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3510,
                  "mutability": "mutable",
                  "name": "gameId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3520,
                  "src": "13656:20:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3509,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "13656:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13632:45:18"
            },
            "returnParameters": {
              "id": 3512,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13686:0:18"
            },
            "scope": 3551,
            "src": "13615:123:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 3549,
              "nodeType": "Block",
              "src": "14309:211:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3537,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3523,
                        "src": "14422:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 3538,
                        "name": "winTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3529,
                        "src": "14430:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3539,
                        "name": "killScore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3531,
                        "src": "14439:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 3540,
                        "name": "isRare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3527,
                        "src": "14450:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 3534,
                        "name": "nftContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3078,
                        "src": "14391:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTContract_$4027",
                          "typeString": "contract NFTContract"
                        }
                      },
                      "id": 3536,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createAndMintToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3910,
                      "src": "14391:30:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint8_$_t_bool_$returns$__$",
                        "typeString": "function (string memory,uint256,uint8,bool) external"
                      }
                    },
                    "id": 3541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14391:66:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3542,
                  "nodeType": "ExpressionStatement",
                  "src": "14391:66:18"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3544,
                        "name": "winnerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3525,
                        "src": "14483:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3545,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3523,
                        "src": "14498:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 3546,
                        "name": "isRare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3527,
                        "src": "14506:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3543,
                      "name": "NFTCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3038,
                      "src": "14472:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,string memory,bool)"
                      }
                    },
                    "id": 3547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14472:41:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3548,
                  "nodeType": "EmitStatement",
                  "src": "14467:46:18"
                }
              ]
            },
            "documentation": {
              "id": 3521,
              "nodeType": "StructuredDocumentation",
              "src": "13744:387:18",
              "text": " @dev Call this method when the game ends to create and mint NFT.\n \n @param gameId id of this game.\n @param winnerAddress address of player who won the game\n @param isRare true if this NFT is rare\n @param winTime time taken (in seconds) to win the game\n @param killScore count of longest consecutive kill by one single piece on board"
            },
            "id": 3550,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_createAndMintNFT",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3532,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3523,
                  "mutability": "mutable",
                  "name": "gameId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3550,
                  "src": "14172:20:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3522,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14172:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3525,
                  "mutability": "mutable",
                  "name": "winnerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3550,
                  "src": "14203:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3524,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14203:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3527,
                  "mutability": "mutable",
                  "name": "isRare",
                  "nodeType": "VariableDeclaration",
                  "scope": 3550,
                  "src": "14235:11:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3526,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14235:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3529,
                  "mutability": "mutable",
                  "name": "winTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 3550,
                  "src": "14256:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3528,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "14256:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3531,
                  "mutability": "mutable",
                  "name": "killScore",
                  "nodeType": "VariableDeclaration",
                  "scope": 3550,
                  "src": "14279:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 3530,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "14279:5:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14162:138:18"
            },
            "returnParameters": {
              "id": 3533,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14309:0:18"
            },
            "scope": 3551,
            "src": "14136:384:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 3552,
        "src": "487:14035:18"
      }
    ],
    "src": "33:14489:18"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x306841c3fce8498c2d9b7194b8da4c04d03847394e237b625ce6d029b107f077": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "challengerAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "gameId",
              "type": "uint256"
            }
          ],
          "name": "GameCreated",
          "type": "event"
        },
        "0xc7f886847371dba98b78e0d0d59e29f4abfaf6e953d6897a761992cb2627e687": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "challengeAcceptorAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "gameId",
              "type": "uint256"
            }
          ],
          "name": "GameJoined",
          "type": "event"
        },
        "0x3de783f9d670d5639f2acef925c39a874e41e3aa39966962eb1b3aaa6177c0c4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "winnerAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "gameId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "isRare",
              "type": "bool"
            }
          ],
          "name": "NFTCreated",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0x2a2354125f81ee487bda88be7f56f045ff7d068431bfdb0ddb0a286c17b95244": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "winnerAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "gameId",
              "type": "uint256"
            }
          ],
          "name": "GameEnd",
          "type": "event"
        },
        "0x35d26844d53f502705f032c5740880dacbfb67e9ce4906507947c665fd4a9996": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "challengerAddress",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "challengeAcceptorAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "gameId",
              "type": "uint256"
            }
          ],
          "name": "GameJoined",
          "type": "event"
        },
        "0xab9e6b2a615855ce1ed5dc476076888910d7776481a5fc561e17d72a842fd726": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "challengerAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "gameId",
              "type": "string"
            }
          ],
          "name": "GameCreated",
          "type": "event"
        },
        "0x6763b8a4888eb1fb9140d4cb14e1fc7f987fc1699c6cb8b39d63b7517c55b010": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "winnerAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "gameId",
              "type": "string"
            }
          ],
          "name": "GameEnd",
          "type": "event"
        },
        "0xb0cbb988a88555f6347923839ff18c8c159a347bb5c40d0786ed40ee06e9f470": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "challengerAddress",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "challengeAcceptorAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "gameId",
              "type": "string"
            }
          ],
          "name": "GameJoined",
          "type": "event"
        },
        "0x8d11d8f75b99dce1ca13d075bd170d592c3c7291c30de9f88f714bb640d8c0b5": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "winnerAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "gameId",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "isRare",
              "type": "bool"
            }
          ],
          "name": "NFTCreated",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xa8317DfeFFDEb1E316024BFD45CD4b571e9796a7",
      "transactionHash": "0xc0eaeb98245a17dfbf617300648cdae8569b03aa61ca5cdfe58951a112fe290f"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-10-07T05:22:33.592Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "createGame(string)": {
        "details": "Create a new game by depositing a gameFee. "
      },
      "endGame(string,address,uint256)": {
        "details": "Call this to end a game with specified `gameId`. A game would end either when one player wins or if no  player accepts a challenge within 30 minutes. ",
        "params": {
          "gameId": "id of this game",
          "winTime": "time taken (in seconds) to win the game",
          "winnerAddress": "address of player who won the game"
        }
      },
      "getBaseGameFee()": {
        "details": "Call this to get the current `_baseGameFee` "
      },
      "getContractBalance()": {
        "details": "Call this to get the current balance of "
      },
      "joinGame(string)": {
        "details": "Call this to join a game with provided `gameId`. Throw an exeption if no game for this `gameId` exists. ",
        "params": {
          "gameId": "id of game to be ended"
        }
      },
      "mintNFT(string,bool,uint256,uint8)": {
        "details": "Winner of the game can call this to mint the winning card NFT.",
        "params": {
          "gameId": "id of this game",
          "isRare": "true if this NFT is rare",
          "killScore": "count of longest consecutive kill by one single piece on board",
          "winTime": "time taken (in seconds) to win the game"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setOwnership(address)": {
        "details": "Call this method to update ownership in future (if needed). This external  method can only be called by the owner of this contract. Since `transferOwnership()` already have this check it's not required for this method. ",
        "params": {
          "newOwnerAddress": "address of new owner to which ownership is to be transfered."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "updateBaseGameFees(uint256)": {
        "details": "Call this to update the current base game fee. This method can only be called via owner of this contract.",
        "params": {
          "newGameFee": "new fee value to be used for creating a new game."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}